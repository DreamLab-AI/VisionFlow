version: '3.8'

services:
  multi-agent-backend:
    image: ghcr.io/your-org/multi-agent-backend:latest
    container_name: multi-agent-backend-prod
    environment:
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - PORT=8080
      # MCP Configuration - NO MOCK FALLBACK IN PRODUCTION
      - MCP_RELAY_FALLBACK_TO_MOCK=false
      - CLAUDE_FLOW_HOST=claude-flow
      - CLAUDE_FLOW_PORT=3000
      # GitHub Configuration
      - GITHUB_OWNER=${GITHUB_OWNER}
      - GITHUB_REPO=${GITHUB_REPO}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      # API Keys
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      # Feature Flags
      - ENABLE_GPU_COMPUTE=true
      - ENABLE_CLAUDE_FLOW=true
      - ENABLE_HIVE_MIND=true
    ports:
      - "8080:8080"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  multi-agent-client:
    image: ghcr.io/your-org/multi-agent-client:latest
    container_name: multi-agent-client-prod
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://multi-agent-backend:8080
      - VITE_WS_URL=ws://multi-agent-backend:8080
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      multi-agent-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  claude-flow:
    image: ghcr.io/your-org/claude-flow:latest
    container_name: claude-flow-prod
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      # MCP Server Configuration
      - MCP_SERVER_NAME=claude-flow-production
      - MCP_SERVER_VERSION=1.0.0
      # No mock mode in production
      - ENABLE_MOCK_MODE=false
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('net').createConnection({port: 3000}, () => process.exit(0)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  app-data:
    driver: local