# nginx.dev.conf
# Development-specific Nginx configuration
pid /tmp/nginx.pid;
error_log /var/log/nginx/error.log info; # Use info level for dev

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Override TypeScript MIME type
    types {
        application/typescript ts;
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # WebSocket header mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Upstream definitions
    upstream backend {
        # Rust backend service
        server 127.0.0.1:4000; # Point to the Rust server's actual listening port
    }

    upstream vite_dev_server {
        # Vite development server
        server 127.0.0.1:5173; # New internal port for Vite
    }

    upstream vite_hmr {
        # Vite HMR WebSocket server
        server 127.0.0.1:24678; # Matches VITE_HMR_PORT
    }

    server {
        listen 3001 default_server; # Main exposed port
        server_name localhost;

        # Vite HMR WebSocket (/ws)
        location /ws {
            proxy_pass http://vite_hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 86400; # Keep HMR connection open
        }

        # Backend WebSocket (/wss) - For Application
        location /wss {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600m;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 75s;
            proxy_buffering off;
        }

        # Backend API (/api)
        location /api {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
            proxy_connect_timeout 60s;
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Everything else goes to Vite Dev Server
        location / {
            proxy_pass http://vite_dev_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # Required for Vite's own WS connections if any
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
        }

        # Error pages (optional but good practice)
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html; # Default Nginx error page location
        }
    }
}