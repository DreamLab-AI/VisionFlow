# cargo-deny configuration for dependency checking

[licenses]
# The confidence threshold for detecting a license from a license text.
confidence-threshold = 0.8

# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
]

# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-1.0",
    "AGPL-3.0",
]

# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"

# Some crates don't have (easily) machine readable licensing information,
# adding a clarification or license text here will make the crate pass
[[licenses.clarify]]
name = "ring"
version = "*"
expression = "MIT AND ISC AND OpenSSL"
license-files = [
    { path = "LICENSE", hash = 0xbd0eed23 }
]

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
wildcards = "allow"

# List of crates to deny
deny = [
    # Deny old versions of openssl due to security issues
    { name = "openssl", version = "<0.10.0" },
    # Deny old versions of serde due to security issues
    { name = "serde", version = "<1.0.100" },
]

# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    # Skip different versions of these commonly duplicated crates
    { name = "windows-sys", version = "*" },
    { name = "windows_x86_64_msvc", version = "*" },
]

# Similarly to `skip` allows you to skip certain crates from being checked.
skip-tree = [
    # Skip entire dependency trees
]

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"

# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

# The lint level for security vulnerabilities
vulnerability = "deny"

# The lint level for unmaintained crates
unmaintained = "warn"

# The lint level for crates with security notices
notice = "warn"

# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
    # Example: ignore a specific advisory
    # "RUSTSEC-2020-0001",
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"

# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

# List of allowed registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]

# List of allowed git repositories
allow-git = []