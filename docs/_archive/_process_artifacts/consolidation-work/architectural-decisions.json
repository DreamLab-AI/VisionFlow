{
  "documentationRefactoringPlan": {
    "version": "1.0.0",
    "lastUpdated": "2025-10-08T19:26:00Z",
    "chiefArchitect": "Documentation Coordination Swarm",
    "
": "Comprehensive 4-phase documentation refactoring following Diátaxis framework",

    "currentStateAnalysis": {
      "totalMarkdownFiles": 213,
      "existingStructure": {
        "rootFiles": [
          "README.md (10,939 bytes) - Current project overview",
          "index.md (5,963 bytes) - Diátaxis-aligned navigation hub",
          "00-INDEX.md (20,723 bytes) - Detailed master navigation with cross-references",
          "contributing.md (956 bytes) - Minimal contribution guide",
          "websocket-consolidation-plan.md (8,118 bytes) - Technical consolidation plan"
        ],
        "directories": [
          "getting-started/ - Installation and quick start guides",
          "guides/ - How-to guides (task-oriented)",
          "concepts/ - Explanations (understanding-oriented)",
          "reference/ - Technical reference (agents, API, specs)",
          "architecture/ - System design documents",
          "deployment/ - Production deployment guides",
          "development/ - Developer workflows",
          "research/ - Technical research documents",
          "reports/ - Verification and testing reports",
          "specialized/ - Specialized topics (ontology)",
          "multi-agent-docker/ - Docker-specific documentation",
          "implementation/ - Implementation details",
          "migration/ - Migration guides",
          "code-examples/ - Code samples",
          "archive/ - Historical documentation"
        ]
      },

      "overlappingContent": {
        "projectOverview": [
          "README.md - Comprehensive overview with metrics and status",
          "index.md - Diátaxis-aligned navigation hub",
          "00-INDEX.md - Detailed navigation with cross-references"
        ],
        "websocketProtocol": [
          "websocket-consolidation-plan.md - Technical consolidation plan",
          "reference/api/websocket-api.md - API reference",
          "architecture/components/websocket-protocol.md - Component architecture"
        ],
        "agentReference": [
          "reference/agents/ - 50+ agent specification files",
          "Organized by category but needs indexing improvements"
        ]
      },

      "structuralIssues": {
        "multipleIndexFiles": "Three top-level navigation files with different purposes",
        "archiveStructure": "Multiple archive directories with unclear organization",
        "guidesVsConcepts": "Some content could fit in either category",
        "developmentVsGuides": "Overlap between development/ and guides/ directories"
      }
    },

    "architecturalDecisions": {
      "AD001_CanonicalProjectOverview": {
        "decision": "Use docs/README.md as canonical project overview",
        "rationale": "Most comprehensive, includes metrics and current status",
        "action": "Keep README.md, refactor index.md and 00-INDEX.md as navigation aids",
        "impact": "Clear entry point for new contributors"
      },

      "AD002_MasterTableOfContents": {
        "decision": "Preserve 00-INDEX.md as master navigation with cross-references",
        "rationale": "Excellent cross-linking, detailed navigation paths, proven utility",
        "action": "Update to reflect new structure, maintain cross-references",
        "impact": "Comprehensive navigation for all documentation"
      },

      "AD003_DiátaxisNavigation": {
        "decision": "Use index.md as Diátaxis-aligned quick start hub",
        "rationale": "Provides learning-path oriented navigation matching framework",
        "action": "Simplify to 4 clear paths: tutorials, how-to, explanation, reference",
        "impact": "Improved user experience for different learning styles"
      },

      "AD004_WebSocketConsolidation": {
        "decision": "Move websocket-consolidation-plan.md to guides/technical/",
        "rationale": "Technical consolidation guide, task-oriented",
        "action": "Create guides/technical/ directory for technical how-to guides",
        "impact": "Better organization of technical planning documents"
      },

      "AD005_ArchiveStructure": {
        "decision": "Consolidate all archives under docs/_archive/ with date prefixes",
        "rationale": "Single archive location with clear dating prevents confusion",
        "action": "Move archive/ and archive-legacy/ contents to _archive/YYYY-MM/",
        "impact": "Clear separation of current vs historical documentation"
      },

      "AD006_DevelopmentVsGuides": {
        "decision": "guides/ = user tasks, development/ = contributor workflows",
        "rationale": "Clear audience separation improves navigation",
        "action": "Move developer-specific content from guides/ to development/",
        "impact": "Clearer audience targeting"
      },

      "AD007_ConceptsVsArchitecture": {
        "decision": "concepts/ = understanding principles, architecture/ = system design",
        "rationale": "Diátaxis separation: explanation vs technical specification",
        "action": "Move high-level explanations to concepts/, detailed designs to architecture/",
        "impact": "Better alignment with Diátaxis framework"
      },

      "AD008_AgentReferenceStructure": {
        "decision": "Maintain category-based agent organization with improved index",
        "rationale": "Current structure works well, needs better discovery",
        "action": "Enhance reference/agents/README.md with capability matrix",
        "impact": "Easier agent discovery by capability or use case"
      }
    },

    "targetStructure": {
      "root": {
        "README.md": "Canonical project overview with current status and metrics",
        "index.md": "Diátaxis-aligned quick navigation hub (tutorials/how-to/explanation/reference)",
        "00-INDEX.md": "Master table of contents with cross-references and document relationships",
        "contributing.md": "Expanded contribution guide with standards and processes"
      },

      "gettingStarted": {
        "path": "getting-started/",
        "type": "Tutorials (learning-oriented)",
        "purpose": "Step-by-step guides for new users",
        "contents": [
          "00-index.md - Getting started overview",
          "01-installation.md - System requirements and installation",
          "02-quick-start.md - First graph creation",
          "03-basic-operations.md - Core functionality walkthrough"
        ]
      },

      "guides": {
        "path": "guides/",
        "type": "How-to guides (task-oriented)",
        "purpose": "Practical solutions to specific problems",
        "subdirectories": {
          "user/": "End-user operational guides",
          "developer/": "Development task guides",
          "technical/": "Technical consolidation and refactoring guides",
          "deployment/": "Deployment and operations guides"
        }
      },

      "concepts": {
        "path": "concepts/",
        "type": "Explanation (understanding-oriented)",
        "purpose": "Conceptual knowledge and design principles",
        "contents": [
          "00-index.md - Concepts overview",
          "01-system-overview.md - High-level system architecture",
          "02-agentic-workers.md - Multi-agent system concepts",
          "03-gpu-compute.md - GPU acceleration principles",
          "04-networking.md - Real-time protocol design",
          "05-security.md - Security architecture concepts"
        ]
      },

      "reference": {
        "path": "reference/",
        "type": "Reference (information-oriented)",
        "purpose": "Technical specifications and API documentation",
        "subdirectories": {
          "api/": "REST, WebSocket, GPU, Voice APIs",
          "agents/": "Agent specifications organized by category",
          "config/": "Configuration reference",
          "glossary.md": "Terminology reference"
        }
      },

      "architecture": {
        "path": "architecture/",
        "type": "Technical specification",
        "purpose": "Detailed system design documents",
        "contents": [
          "hybrid_docker_mcp_architecture.md - Docker + MCP integration",
          "xr-immersive-system.md - XR rendering architecture",
          "vircadia-react-xr-integration.md - Multi-user XR architecture",
          "components/ - Component-level specifications"
        ]
      },

      "deployment": {
        "path": "deployment/",
        "type": "Operations reference",
        "purpose": "Production deployment specifications",
        "contents": [
          "vircadia-docker-deployment.md - Docker orchestration guide",
          "multi-agent-docker/ - Docker-specific technical docs"
        ]
      },

      "development": {
        "path": "development/",
        "type": "Contributor guide",
        "purpose": "Developer workflows and contribution processes",
        "contents": [
          "setup.md - Development environment setup",
          "workflow.md - Git workflow and code review",
          "testing.md - Testing strategies",
          "debugging.md - Debugging tools and techniques"
        ]
      },

      "research": {
        "path": "research/",
        "type": "Technical research",
        "purpose": "Research documents and experimental designs",
        "contents": [
          "owl_rdf_ontology_integration_research.md - Semantic web research"
        ]
      },

      "archive": {
        "path": "_archive/",
        "type": "Historical documentation",
        "purpose": "Obsolete documentation with historical context",
        "structure": "_archive/YYYY-MM/ directories with README.md explaining archival"
      }
    },

    "phasedExecutionPlan": {
      "phase1_audit": {
        "name": "Documentation Audit & Classification",
        "duration": "2 hours",
        "agents": [
          {
            "role": "Audit Specialist",
            "tasks": [
              "Scan all 213 markdown files",
              "Classify by Diátaxis category (tutorial/how-to/explanation/reference)",
              "Identify duplicate or overlapping content",
              "Flag outdated or obsolete documentation",
              "Generate classification matrix"
            ]
          },
          {
            "role": "Content Analyst",
            "tasks": [
              "Analyze content overlap between files",
              "Identify canonical sources for merged content",
              "Map document dependencies and cross-references",
              "Generate merge recommendations"
            ]
          }
        ],
        "deliverables": [
          "_consolidated/audit-report.md - Complete file classification",
          "_consolidated/overlap-analysis.md - Content overlap matrix",
          "_consolidated/merge-plan.md - Specific merge recommendations"
        ]
      },

      "phase2_restructure": {
        "name": "Structure Implementation & Content Migration",
        "duration": "4 hours",
        "agents": [
          {
            "role": "Structure Engineer",
            "tasks": [
              "Create target directory structure",
              "Implement archive structure with date directories",
              "Set up guides/ subdirectories (user/developer/technical/deployment)",
              "Create index.md files for each major directory"
            ]
          },
          {
            "role": "Migration Specialist",
            "tasks": [
              "Move files to appropriate directories per classification",
              "Update internal links and cross-references",
              "Preserve git history with git mv commands",
              "Handle file renames for clarity"
            ]
          },
          {
            "role": "Archive Manager",
            "tasks": [
              "Move obsolete content to _archive/YYYY-MM/",
              "Create README.md in each archive directory explaining context",
              "Preserve important historical information",
              "Update references to archived documents"
            ]
          }
        ],
        "deliverables": [
          "Restructured directory tree matching target structure",
          "All files moved with preserved git history",
          "_archive/ organized by date with context",
          "_consolidated/migration-log.md - Complete migration record"
        ]
      },

      "phase3_consolidation": {
        "name": "Content Consolidation & Deduplication",
        "duration": "3 hours",
        "agents": [
          {
            "role": "Content Merger",
            "tasks": [
              "Merge overlapping content per merge plan",
              "Consolidate WebSocket documentation",
              "Unify agent reference structure",
              "Merge duplicate architecture documents"
            ]
          },
          {
            "role": "Quality Assurance",
            "tasks": [
              "Verify no information loss during merges",
              "Check all cross-references are valid",
              "Validate code examples and technical accuracy",
              "Test all navigation paths"
            ]
          },
          {
            "role": "Index Builder",
            "tasks": [
              "Update 00-INDEX.md with new structure",
              "Rebuild index.md as Diátaxis navigation hub",
              "Update README.md with new navigation",
              "Create directory-level index.md files"
            ]
          }
        ],
        "deliverables": [
          "Consolidated documents with no duplication",
          "Updated navigation indices",
          "Validated cross-references",
          "_consolidated/consolidation-report.md - Merge summary"
        ]
      },

      "phase4_validation": {
        "name": "Validation & Quality Assurance",
        "duration": "2 hours",
        "agents": [
          {
            "role": "Link Validator",
            "tasks": [
              "Check all internal links are valid",
              "Verify cross-references point to correct sections",
              "Test navigation paths from root to leaves",
              "Validate mermaid diagrams render correctly"
            ]
          },
          {
            "role": "Content Reviewer",
            "tasks": [
              "Verify Diátaxis classification is correct",
              "Check UK English spelling consistency",
              "Validate code examples are current",
              "Review technical accuracy of descriptions"
            ]
          },
          {
            "role": "Completeness Auditor",
            "tasks": [
              "Verify all 213 files are accounted for",
              "Check no orphaned files exist",
              "Validate git history preservation",
              "Generate final validation report"
            ]
          }
        ],
        "deliverables": [
          "_consolidated/validation-report.md - Complete validation results",
          "_consolidated/broken-links.md - Any issues found",
          "_consolidated/recommendations.md - Future improvements",
          "Final sign-off for production deployment"
        ]
      }
    },

    "agentCoordinationProtocol": {
      "swarmTopology": "hierarchical",
      "coordinationMethod": "memory-based with hooks",
      "sessionId": "swarm-docs-refactor",

      "coordinationFlow": {
        "1_initialization": [
          "Chief Architect creates architectural decisions (this file)",
          "Store decisions in memory via hooks",
          "Initialize session for all agents"
        ],
        "2_agentSpawning": [
          "Use Claude Code Task tool to spawn all agents concurrently",
          "Each agent receives full context and specific instructions",
          "Agents coordinate via memory and hooks"
        ],
        "3_execution": [
          "Each agent runs pre-task hooks",
          "Agents restore session context",
          "Work executes in parallel where possible",
          "Post-task hooks store results in memory"
        ],
        "4_synchronization": [
          "Agents notify completion via hooks",
          "Chief Architect reviews deliverables",
          "Resolve conflicts and dependencies",
          "Proceed to next phase"
        ]
      },

      "memoryKeys": {
        "swarm/architect/decisions": "Architectural decisions (this file)",
        "swarm/audit/classification": "Phase 1 file classification matrix",
        "swarm/audit/overlap": "Phase 1 content overlap analysis",
        "swarm/structure/migration": "Phase 2 migration log",
        "swarm/consolidation/merges": "Phase 3 merge summary",
        "swarm/validation/results": "Phase 4 validation report"
      }
    },

    "riskMitigation": {
      "risk_informationLoss": {
        "severity": "HIGH",
        "mitigation": [
          "Git history preservation via git mv",
          "QA agent verifies no content loss during merges",
          "Archive with context rather than delete",
          "Completeness audit in Phase 4"
        ]
      },

      "risk_brokenLinks": {
        "severity": "MEDIUM",
        "mitigation": [
          "Automated link validation in Phase 4",
          "Update cross-references during migration",
          "Test all navigation paths",
          "Document any intentional external links"
        ]
      },

      "risk_categorization": {
        "severity": "MEDIUM",
        "mitigation": [
          "Use Diátaxis framework for clear categorization",
          "Content Analyst validates classification",
          "Allow hybrid documents with clear primary category",
          "Document edge cases in decisions"
        ]
      },

      "risk_duplicateWork": {
        "severity": "LOW",
        "mitigation": [
          "Parallel agent execution via Claude Code Task tool",
          "Memory-based coordination prevents conflicts",
          "Clear phase boundaries with deliverables",
          "Chief Architect reviews before proceeding"
        ]
      }
    },

    "successCriteria": {
      "structure": [
        "All 213 files accounted for (moved, merged, or archived)",
        "Target directory structure fully implemented",
        "Archive structure with dated directories and context",
        "No orphaned files or broken directory references"
      ],

      "navigation": [
        "README.md is canonical project overview",
        "index.md provides Diátaxis-aligned quick navigation",
        "00-INDEX.md maintains comprehensive cross-referenced navigation",
        "Each directory has index.md with local navigation"
      ],

      "quality": [
        "Zero broken internal links",
        "UK English spelling consistent throughout",
        "All code examples validated for currency",
        "Mermaid diagrams render correctly"
      ],

      "diátaxis": [
        "getting-started/ contains only tutorials",
        "guides/ contains only how-to content",
        "concepts/ contains only explanations",
        "reference/ contains only technical specifications",
        "Clear categorization with minimal hybrid documents"
      ],

      "completeness": [
        "No information lost during consolidation",
        "Git history preserved for all moves",
        "All architectural decisions documented",
        "Validation report confirms 100% coverage"
      ]
    },

    "nextSteps": {
      "immediate": [
        "Store this architectural decision document in memory",
        "Review and approve plan with stakeholders",
        "Spawn Phase 1 agents via Claude Code Task tool"
      ],

      "phase1": [
        "Execute documentation audit",
        "Generate classification matrix",
        "Produce overlap analysis and merge plan"
      ],

      "phase2": [
        "Implement target directory structure",
        "Migrate files with git history preservation",
        "Organize archive with dated directories"
      ],

      "phase3": [
        "Consolidate overlapping content",
        "Update all navigation indices",
        "Rebuild cross-references"
      ],

      "phase4": [
        "Validate all links and references",
        "Review content quality and accuracy",
        "Generate final validation report"
      ],

      "completion": [
        "Deploy restructured documentation",
        "Communicate changes to team",
        "Update contribution guidelines",
        "Schedule next documentation review"
      ]
    }
  }
}
