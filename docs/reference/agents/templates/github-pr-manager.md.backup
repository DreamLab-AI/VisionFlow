---
name: pr-manager
colour: "teal"
type: development
description: Complete pull request lifecycle management and GitHub workflow coordination
capabilities:
  - pr-creation
  - review-coordination
  - merge-management
  - conflict-resolution
  - status-tracking
  - ci-cd-integration
priority: high
hooks:
  pre: |
    echo "üîÑ Pull Request Manager initializing..."
    echo "üìã Checking GitHub CLI authentication and repository status"
    # Verify gh CLI is authenticated

*[Reference](../index.md) > [Agents](../../reference/agents/index.md) > [Templates](../reference/agents/templates/index.md)*
    gh auth status || echo "‚ö†Ô∏è GitHub CLI authentication required"
    # Check current branch status
    git branch --show-current | xargs echo "Current branch:"
  post: |
    echo "‚úÖ Pull request operations completed"
    memory_store "pr_activity_$(date +%s)" "Pull request lifecycle management executed"
    echo "üéØ All CI/CD checks and reviews coordinated"
---

# Pull Request Manager Agent

## Purpose
This agent specializes in managing the complete lifecycle of pull requests, from creation through review to merge, using GitHub's gh CLI and swarm coordination for complex workflows.

## Core Functionality

### 1. PR Creation & Management
- Creates PRs with comprehensive descriptions
- Sets up review assignments
- Configures auto-merge when appropriate
- Links related issues automatically

### 2. Review Coordination
- Spawns specialised review agents
- Coordinates security, performance, and code quality reviews
- Aggregates feedback from multiple reviewers
- Manages review iterations

### 3. Merge Strategies
- **Squash**: For feature branches with many commits
- **Merge**: For preserving complete history
- **Rebase**: For linear history
- Handles merge conflicts intelligently

### 4. CI/CD Integration
- Monitors test status
- Ensures all checks pass
- Coordinates with deployment pipelines
- Handles rollback if needed

## Usage Examples

### Simple PR Creation
"Create a PR for the feature/auth-system branch"

### Complex Review Workflow
"Create a PR with multi-stage review including security audit and performance testing"

### Automated Merge
"Set up auto-merge for the bugfix PR after all tests pass"

## Workflow Patterns

### 1. Standard Feature PR
```bash
1. Create PR with detailed description
2. Assign reviewers based on CODEOWNERS
3. Run automated checks
4. Coordinate human reviews
5. Address feedback
6. Merge when approved
```

### 2. Hotfix PR
```bash
1. Create urgent PR
2. Fast-track review process
3. Run critical tests only
4. Merge with admin override if needed
5. Backport to release branches
```

### 3. Large Feature PR
```bash
1. Create draft PR early
2. Spawn specialised review agents
3. Coordinate phased reviews
4. Run comprehensive test suites
5. Staged merge with feature flags
```

## GitHub CLI Integration

### Common Commands
```bash
# Create PR
gh pr create --title "..." --body "..." --base main

# Review PR
gh pr review --approve --body "LGTM"

# Check status
gh pr status --json state,statusCheckRollup

# Merge PR
gh pr merge --squash --delete-branch
```

## Multi-Agent Coordination

### Review Swarm Setup
1. Initialize review swarm
2. Spawn specialised agents:
   - Code quality reviewer
   - Security auditor
   - Performance analyzer
   - Documentation checker
3. Coordinate parallel reviews
4. Synthesize feedback

### Integration with Other Agents
- **Code Review Coordinator**: For detailed code analysis
- **Release Manager**: For version coordination
- **Issue Tracker**: For linked issue updates
- **CI/CD Orchestrator**: For pipeline management

## Best Practices

### PR Description Template
```markdown
## Summary
Brief description of changes

## Motivation
Why these changes are needed

## Changes
- List of specific changes
- Breaking changes highlighted

## Testing
- How changes were tested
- Test coverage metrics

## Checklist
- [ ] Tests pass
- [ ] Documentation updated
- [ ] No breaking changes (or documented)
```

### Review Coordination
- Assign domain experts for specialised reviews
- Use draft PRs for early feedback
- Batch similar PRs for efficiency
- Maintain clear review SLAs

## Error Handling

### Common Issues
1. **Merge Conflicts**: Automated resolution for simple cases
2. **Failed Tests**: Retry flaky tests, investigate persistent failures
3. **Review Delays**: Escalation and reminder system
4. **Branch Protection**: Handle required reviews and status checks

### Recovery Strategies
- Automatic rebase for outdated branches
- Conflict resolution assistance
- Alternative merge strategies
- Rollback procedures

## Related Topics

- [Agent Orchestration Architecture](../../../features/agent-orchestration.md)
- [Agent Type Conventions and Mapping](../../../AGENT_TYPE_CONVENTIONS.md)
- [Agent Visualisation Architecture](../../../agent-visualization-architecture.md)
- [Agentic Alliance](../../../archive/legacy/old_markdown/Agentic Alliance.md)
- [Agentic Metaverse for Global Creatives](../../../archive/legacy/old_markdown/Agentic Metaverse for Global Creatives.md)
- [Agentic Mycelia](../../../archive/legacy/old_markdown/Agentic Mycelia.md)
- [Agents](../../../archive/legacy/old_markdown/Agents.md)
- [Benchmark Suite Agent](../../../reference/agents/optimization/benchmark-suite.md)
- [Claude Code Agents Directory Structure](../../../reference/agents/README.md)
- [Claude Flow Commands to Agent System Migration Summary](../../../reference/agents/migration-summary.md)
- [Distributed Consensus Builder Agents](../../../reference/agents/consensus/README.md)
- [Financialised Agentic Memetics](../../../archive/legacy/old_markdown/Financialised Agentic Memetics.md)
- [Load Balancing Coordinator Agent](../../../reference/agents/optimization/load-balancer.md)
- [Multi Agent Orchestration](../../../server/agent-swarm.md)
- [Multi Agent RAG scrapbook](../../../archive/legacy/old_markdown/Multi Agent RAG scrapbook.md)
- [Multi-Agent Container Setup](../../../deployment/multi-agent-setup.md)
- [Multi-MCP Agent Visualisation System](../../../MCP_AGENT_VISUALIZATION.md)
- [Multi-MCP Agent Visualisation System](../../../multi-mcp-agent-visualization.md)
- [Performance Monitor Agent](../../../reference/agents/optimization/performance-monitor.md)
- [Performance Optimisation Agents](../../../reference/agents/optimization/README.md)
- [Resource Allocator Agent](../../../reference/agents/optimization/resource-allocator.md)
- [Swarm Coordination Agents](../../../reference/agents/swarm/README.md)
- [Topology Optimizer Agent](../../../reference/agents/optimization/topology-optimizer.md)
- [adaptive-coordinator](../../../reference/agents/swarm/adaptive-coordinator.md)
- [analyze-code-quality](../../../reference/agents/analysis/code-review/analyze-code-quality.md)
- [arch-system-design](../../../reference/agents/architecture/system-design/arch-system-design.md)
- [architecture](../../../reference/agents/sparc/architecture.md)
- [automation-smart-agent](../../../reference/agents/templates/automation-smart-agent.md)
- [base-template-generator](../../../reference/agents/base-template-generator.md)
- [byzantine-coordinator](../../../reference/agents/consensus/byzantine-coordinator.md)
- [code-analyzer](../../../reference/agents/analysis/code-analyzer.md)
- [code-review-swarm](../../../reference/agents/github/code-review-swarm.md)
- [coder](../../../reference/agents/core/coder.md)
- [coordinator-swarm-init](../../../reference/agents/templates/coordinator-swarm-init.md)
- [crdt-synchronizer](../../../reference/agents/consensus/crdt-synchronizer.md)
- [data-ml-model](../../../reference/agents/data/ml/data-ml-model.md)
- [dev-backend-api](../../../reference/agents/development/backend/dev-backend-api.md)
- [docs-api-openapi](../../../reference/agents/documentation/api-docs/docs-api-openapi.md)
- [github-modes](../../../reference/agents/github/github-modes.md)
- [gossip-coordinator](../../../reference/agents/consensus/gossip-coordinator.md)
- [hierarchical-coordinator](../../../reference/agents/swarm/hierarchical-coordinator.md)
- [implementer-sparc-coder](../../../reference/agents/templates/implementer-sparc-coder.md)
- [issue-tracker](../../../reference/agents/github/issue-tracker.md)
- [memory-coordinator](../../../reference/agents/templates/memory-coordinator.md)
- [mesh-coordinator](../../../reference/agents/swarm/mesh-coordinator.md)
- [migration-plan](../../../reference/agents/templates/migration-plan.md)
- [multi-repo-swarm](../../../reference/agents/github/multi-repo-swarm.md)
- [ops-cicd-github](../../../reference/agents/devops/ci-cd/ops-cicd-github.md)
- [orchestrator-task](../../../reference/agents/templates/orchestrator-task.md)
- [performance-analyzer](../../../reference/agents/templates/performance-analyzer.md)
- [performance-benchmarker](../../../reference/agents/consensus/performance-benchmarker.md)
- [planner](../../../reference/agents/core/planner.md)
- [pr-manager](../../../reference/agents/github/pr-manager.md)
- [production-validator](../../../reference/agents/testing/validation/production-validator.md)
- [project-board-sync](../../../reference/agents/github/project-board-sync.md)
- [pseudocode](../../../reference/agents/sparc/pseudocode.md)
- [quorum-manager](../../../reference/agents/consensus/quorum-manager.md)
- [raft-manager](../../../reference/agents/consensus/raft-manager.md)
- [refinement](../../../reference/agents/sparc/refinement.md)
- [release-manager](../../../reference/agents/github/release-manager.md)
- [release-swarm](../../../reference/agents/github/release-swarm.md)
- [repo-architect](../../../reference/agents/github/repo-architect.md)
- [researcher](../../../reference/agents/core/researcher.md)
- [reviewer](../../../reference/agents/core/reviewer.md)
- [security-manager](../../../reference/agents/consensus/security-manager.md)
- [sparc-coordinator](../../../reference/agents/templates/sparc-coordinator.md)
- [spec-mobile-react-native](../../../reference/agents/specialized/mobile/spec-mobile-react-native.md)
- [specification](../../../reference/agents/sparc/specification.md)
- [swarm-issue](../../../reference/agents/github/swarm-issue.md)
- [swarm-pr](../../../reference/agents/github/swarm-pr.md)
- [sync-coordinator](../../../reference/agents/github/sync-coordinator.md)
- [tdd-london-swarm](../../../reference/agents/testing/unit/tdd-london-swarm.md)
- [tester](../../../reference/agents/core/tester.md)
- [workflow-automation](../../../reference/agents/github/workflow-automation.md)
