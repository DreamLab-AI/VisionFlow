warning: unused import: `error`
 --> src/adapters/sqlite_knowledge_graph_repository.rs:8:11
  |
8 | use log::{error, info};
  |           ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `KnowledgeGraphParser` and `OntologyParser`
  --> src/app_state.rs:31:32
   |
31 | use crate::services::parsers::{KnowledgeGraphParser, OntologyParser};
   |                                ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused import: `cudarc::driver::CudaDevice`
  --> src/app_state.rs:38:5
   |
38 | use cudarc::driver::CudaDevice;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `debug as trace_debug`
  --> src/handlers/settings_handler.rs:11:35
   |
11 | use tracing::{info as trace_info, debug as trace_debug};
   |                                   ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `apply_field_mappings`, `get_complete_field_mappings`, and `validate_constraint`
  --> src/handlers/settings_handler.rs:15:84
   |
15 | ...ings_complete, validate_constraint, convert_to_snake_case_recursive, get_complete_field_mappings, apply_field_mappings};
   |                   ^^^^^^^^^^^^^^^^^^^                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `GetClusteringResults`
    --> src/handlers/settings_handler.rs:3321:39
     |
3321 |         use crate::actors::messages::{GetClusteringResults, GetGraphData};
     |                                       ^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `lof_scores`
   --> src/actors/gpu/anomaly_detection_actor.rs:104:25
    |
104 |                     let lof_scores: Vec<f32> = anomalies
    |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_lof_scores`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `success`
   --> src/actors/optimized_settings_actor.rs:306:75
    |
306 |     async fn update_metrics(&self, start_time: Instant, was_cached: bool, success: bool) {
    |                                                                           ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_success`

warning: unused variable: `app_state`
    --> src/handlers/api_handler/analytics/mod.rs:2613:5
     |
2613 |     app_state: web::Data<AppState>,
     |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_app_state`

warning: unused variable: `req`
  --> src/handlers/api_handler/graph/mod.rs:98:57
   |
98 | pub async fn get_graph_data(state: web::Data<AppState>, req: HttpRequest) -> impl Responder {
   |                                                         ^^^ help: if this is intentional, prefix it with an underscore: `_req`

warning: unused variable: `loading_time_ms`
   --> src/handlers/api_handler/ontology/mod.rs:406:17
    |
406 |             let loading_time_ms = start_time.elapsed().as_millis() as u64;
    |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_loading_time_ms`

warning: unused variable: `gpu_addr`
    --> src/handlers/settings_handler.rs:3319:17
     |
3319 |     if let Some(gpu_addr) = &state.gpu_compute_addr {
     |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_gpu_addr`

warning: unused variable: `edge_count`
    --> src/handlers/settings_handler.rs:3370:9
     |
3370 |     let edge_count = graph_data.edges.len();
     |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_edge_count`

warning: unused variable: `actor`
    --> src/actors/graph_actor.rs:2501:52
     |
2501 |         ctx.run_later(Duration::from_millis(100), |actor, ctx| {
     |                                                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_actor`

warning: unused variable: `graph_data_clone`
    --> src/actors/graph_actor.rs:2558:17
     |
2558 |             let graph_data_clone = Arc::clone(&self.graph_data);
     |                 ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_graph_data_clone`

warning: unused variable: `ctx`
    --> src/actors/graph_actor.rs:3615:34
     |
3615 |             .map(|result, actor, ctx| {
     |                                  ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `actual_size`
   --> src/actors/optimized_settings_actor.rs:126:17
    |
126 |             let actual_size = full_size - self.bandwidth_saved_bytes;
    |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_actual_size`

warning: unused variable: `gpu_addr`
   --> src/actors/physics_orchestrator_actor.rs:311:9
    |
311 |         gpu_addr: &Addr<ForceComputeActor>,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_gpu_addr`

warning: unused variable: `stats`
   --> src/actors/physics_orchestrator_actor.rs:508:25
    |
508 |         if let Some(ref stats) = self.physics_stats {
    |                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stats`

warning: unused variable: `msg`
   --> src/actors/physics_orchestrator_actor.rs:832:26
    |
832 |     fn handle(&mut self, msg: RequestPositionSnapshot, _ctx: &mut Self::Context) -> Self::Result {
    |                          ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `was_paused`
   --> src/actors/physics_orchestrator_actor.rs:902:13
    |
902 |         let was_paused = self.simulation_params.is_physics_paused;
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_was_paused`

warning: unused variable: `ctx`
   --> src/actors/physics_orchestrator_actor.rs:927:55
    |
927 |     fn handle(&mut self, msg: UpdateSimulationParams, ctx: &mut Self::Context) -> Self::Result {
    |                                                       ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `ctx`
   --> src/actors/multi_mcp_visualization_actor.rs:278:57
    |
278 |         ctx.run_interval(Duration::from_secs(10), |act, ctx| {
    |                                                         ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `ctx`
   --> src/actors/multi_mcp_visualization_actor.rs:283:56
    |
283 |         ctx.run_interval(Duration::from_secs(5), |act, ctx| {
    |                                                        ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `recipient`
   --> src/actors/multi_mcp_visualization_actor.rs:348:57
    |
348 |             MultiMcpVisualizationMessage::Unsubscribe { recipient } => {
    |                                                         ^^^^^^^^^ help: try ignoring the field: `recipient: _`

warning: unused variable: `response`
   --> src/actors/multi_mcp_visualization_actor.rs:364:21
    |
364 |                 let response = MultiMcpVisualizationResponse::VisualizationState {
    |                     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_response`

warning: unused variable: `ctx`
   --> src/actors/multi_mcp_visualization_actor.rs:300:9
    |
300 |         ctx: &mut Self::Context,
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: value assigned to `x_offset` is never read
   --> src/actors/multi_mcp_visualization_actor.rs:429:25
    |
429 |                 let mut x_offset = 0.0;
    |                         ^^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: unused variable: `metadata`
   --> src/actors/multi_mcp_visualization_actor.rs:524:9
    |
524 |         metadata: HashMap<String, serde_json::Value>,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_metadata`

warning: unused variable: `name`
    --> src/actors/multi_mcp_visualization_actor.rs:1101:24
     |
1101 |             .map(|(i, (name, metrics))| LayerLoad {
     |                        ^^^^ help: if this is intentional, prefix it with an underscore: `_name`

warning: unused variable: `cached_graph`
   --> src/actors/ontology_actor.rs:257:22
    |
257 |         if let Some((cached_graph, cached_signature, _)) = self.graph_cache.get(ontology_id) {
    |                      ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cached_graph`

warning: unused variable: `addr`
   --> src/actors/ontology_actor.rs:491:21
    |
491 |         if let Some(addr) = &self.semantic_processor_addr {
    |                     ^^^^ help: if this is intentional, prefix it with an underscore: `_addr`

warning: unused variable: `graph_data`
   --> src/actors/semantic_processor_actor.rs:277:13
    |
277 |         let graph_data = match graph_data {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_graph_data`

warning: unused variable: `semantic_features_cache`
   --> src/actors/semantic_processor_actor.rs:271:9
    |
271 |         semantic_features_cache: HashMap<String, SemanticFeatures>,
    |         ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_semantic_features_cache`

warning: unused variable: `ai_features_cache`
   --> src/actors/semantic_processor_actor.rs:272:9
    |
272 |         ai_features_cache: HashMap<String, AISemanticFeatures>,
    |         ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_ai_features_cache`

warning: unused variable: `attraction_strength`
    --> src/actors/semantic_processor_actor.rs:1144:25
     |
1144 |                     let attraction_strength = similarity * 0.5; // Scale to reasonable force
     |                         ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_attraction_strength`

warning: unused variable: `struct_sim`
    --> src/actors/semantic_processor_actor.rs:1266:13
     |
1266 |         let struct_sim = if features1.structural.complexity_score > 0.0
     |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_struct_sim`

warning: unused variable: `content_sim`
    --> src/actors/semantic_processor_actor.rs:1284:13
     |
1284 |         let content_sim = if features1.content.documentation_score > 0.0
     |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_content_sim`

warning: unused variable: `msg`
    --> src/actors/semantic_processor_actor.rs:1768:9
     |
1768 |         msg: ComputeAllPairsShortestPaths,
     |         ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `algorithm`
   --> src/adapters/gpu_semantic_analyzer.rs:290:9
    |
290 |         algorithm: ClusteringAlgorithm,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_algorithm`

warning: unused variable: `num_nodes`
   --> src/adapters/gpu_semantic_analyzer.rs:303:13
    |
303 |         let num_nodes = graph.nodes.len();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_num_nodes`

warning: unused variable: `gpu`
   --> src/adapters/gpu_semantic_analyzer.rs:508:45
    |
508 |         let gpu_memory_mb = if let Some(ref gpu) = self.gpu_compute {
    |                                             ^^^ help: if this is intentional, prefix it with an underscore: `_gpu`

warning: unused variable: `avg_cpu`
    --> src/handlers/api_handler/analytics/mod.rs:1264:13
     |
1264 |         let avg_cpu = type_agents
     |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_avg_cpu`

warning: unused variable: `avg_memory`
    --> src/handlers/api_handler/analytics/mod.rs:1269:13
     |
1269 |         let avg_memory = type_agents
     |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_avg_memory`

warning: unused variable: `total_tasks`
    --> src/handlers/api_handler/analytics/mod.rs:1279:13
     |
1279 |         let total_tasks = type_agents
     |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_total_tasks`

warning: unused variable: `node`
   --> src/ontology/services/owl_validator.rs:354:61
    |
354 |     fn apply_template(&self, template: &str, node_id: &str, node: &GraphNode) -> Result<String> {
    |                                                             ^^^^ help: if this is intentional, prefix it with an underscore: `_node`

warning: variable does not need to be mutable
   --> src/services/parsers/knowledge_graph_parser.rs:172:13
    |
172 |         let mut store = MetadataStore::new();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `group_name`
   --> src/services/topology_visualization_engine.rs:743:32
    |
743 |             for (layer_index, (group_name, group_nodes)) in groups.iter().enumerate() {
    |                                ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_group_name`

warning: unused variable: `request`
   --> src/services/graph_serialization.rs:208:52
    |
208 |     fn serialize_to_gexf(&self, graph: &GraphData, request: &ExportRequest) -> Result<String> {
    |                                                    ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_request`

warning: unused variable: `request`
   --> src/services/graph_serialization.rs:263:55
    |
263 |     fn serialize_to_graphml(&self, graph: &GraphData, request: &ExportRequest) -> Result<String> {
    |                                                       ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_request`

warning: value assigned to `sort_bytes` is never read
   --> src/utils/unified_gpu_compute.rs:656:17
    |
656 |         let mut sort_bytes = 0;
    |                 ^^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: value assigned to `scan_bytes` is never read
   --> src/utils/unified_gpu_compute.rs:657:17
    |
657 |         let mut scan_bytes = 0;
    |                 ^^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: unused variable: `seed`
    --> src/utils/unified_gpu_compute.rs:2607:9
     |
2607 |         seed: u32,
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_seed`

warning: type `BatchMetrics` is more private than the item `GraphServiceActor::get_batch_metrics`
    --> src/actors/graph_actor.rs:1134:5
     |
1134 |     pub fn get_batch_metrics(&self) -> &BatchMetrics {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method `GraphServiceActor::get_batch_metrics` is reachable at visibility `pub`
     |
note: but type `BatchMetrics` is only usable at visibility `pub(self)`
    --> src/actors/graph_actor.rs:253:1
     |
 253 | struct BatchMetrics {
     | ^^^^^^^^^^^^^^^^^^^
     = note: `#[warn(private_interfaces)]` on by default

warning: field `last_poll` is never read
   --> src/actors/agent_monitor_actor.rs:105:5
    |
 95 | pub struct AgentMonitorActor {
    |            ----------------- field in this struct
...
105 |     last_poll: DateTime<Utc>,
    |     ^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: multiple associated items are never used
   --> src/actors/gpu/anomaly_detection_actor.rs:52:14
    |
 43 | impl AnomalyDetectionActor {
    | -------------------------- associated items in this implementation
...
 52 |     async fn perform_anomaly_detection(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
164 |     async fn perform_lof_detection(
    |              ^^^^^^^^^^^^^^^^^^^^^
...
258 |     async fn perform_zscore_detection(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^
...
361 |     async fn perform_isolation_forest_detection(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
454 |     async fn perform_dbscan_anomaly_detection(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
517 |     fn compute_isolation_scores(&self, features: &[f32], num_trees: usize) -> Vec<f32> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
556 |     fn compute_isolation_path_length(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
570 |     fn isolation_path_recursive(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
643 |     fn calculate_severity(score: f32, threshold: f32) -> String {
    |        ^^^^^^^^^^^^^^^^^^

warning: struct `AnomalyStats` is never constructed
   --> src/actors/gpu/anomaly_detection_actor.rs:899:8
    |
899 | struct AnomalyStats {
    |        ^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/actors/gpu/clustering_actor.rs:65:8
    |
 56 | impl ClusteringActor {
    | -------------------- associated items in this implementation
...
 65 |     fn generate_cluster_keywords(nodes: &[u32]) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
 85 |     async fn perform_kmeans_clustering(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
169 |     async fn perform_community_detection(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
264 |     fn convert_gpu_kmeans_result_to_clusters(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
321 |     fn convert_gpu_community_result_to_communities(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
368 |     fn generate_cluster_color(cluster_id: usize) -> [f32; 3] {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
395 |     fn calculate_silhouette_score(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
484 |     fn calculate_node_distance(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
506 |     fn calculate_modularity(&self, communities: &[Community]) -> f32 {
    |        ^^^^^^^^^^^^^^^^^^^^
...
532 |     fn calculate_cluster_coherence(&self, nodes: &[u32], _assignments: &[i32]) -> f32 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
558 |     fn calculate_cluster_centroid(&self, nodes: &[u32]) -> [f32; 3] {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
573 |     fn calculate_internal_edges(&self, nodes: &[u32]) -> usize {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
586 |     fn calculate_external_edges(&self, nodes: &[u32]) -> usize {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
601 |     fn calculate_community_density(&self, nodes: &[u32]) -> f32 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `last_step_start` is never read
  --> src/actors/gpu/force_compute_actor.rs:63:5
   |
46 | pub struct ForceComputeActor {
   |            ----------------- field in this struct
...
63 |     last_step_start: Option<Instant>,
   |     ^^^^^^^^^^^^^^^

warning: constant `MAX_NODES` is never used
  --> src/actors/gpu/gpu_resource_actor.rs:22:7
   |
22 | const MAX_NODES: u32 = 1_000_000;
   |       ^^^^^^^^^

warning: constant `MAX_GPU_FAILURES` is never used
  --> src/actors/gpu/gpu_resource_actor.rs:23:7
   |
23 | const MAX_GPU_FAILURES: u32 = 5;
   |       ^^^^^^^^^^^^^^^^

warning: field `last_failure_reset` is never read
  --> src/actors/gpu/gpu_resource_actor.rs:40:5
   |
26 | pub struct GPUResourceActor {
   |            ---------------- field in this struct
...
40 |     last_failure_reset: Instant,
   |     ^^^^^^^^^^^^^^^^^^

warning: field `last_update` is never read
  --> src/actors/gpu/ontology_constraint_actor.rs:76:5
   |
56 | pub struct OntologyConstraintActor {
   |            ----------------------- field in this struct
...
76 |     last_update: Instant,
   |     ^^^^^^^^^^^

warning: method `apply_ontology_constraints` is never used
   --> src/actors/gpu/ontology_constraint_actor.rs:111:8
    |
 82 | impl OntologyConstraintActor {
    | ---------------------------- method in this implementation
...
111 |     fn apply_ontology_constraints(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `get_stress_majorization_stats` and `should_disable_stress_majorization` are never used
   --> src/actors/gpu/stress_majorization_actor.rs:245:8
    |
 51 | impl StressMajorizationActor {
    | ---------------------------- methods in this implementation
...
245 |     fn get_stress_majorization_stats(&self) -> StressMajorizationStats {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
256 |     fn should_disable_stress_majorization(&self) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `frames_since_last_broadcast` is never read
   --> src/actors/graph_actor.rs:127:5
    |
 90 | pub struct GraphServiceActor {
    |            ----------------- field in this struct
...
127 |     frames_since_last_broadcast: Option<u32>, // Track frames since last position broadcast (deprecated - use time-based instead)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `remove_node` and `remove_edge` are never used
   --> src/actors/graph_actor.rs:203:8
    |
181 | impl UpdateQueue {
    | ---------------- methods in this implementation
...
203 |     fn remove_node(&mut self, node_id: u32) {
    |        ^^^^^^^^^^^
...
208 |     fn remove_edge(&mut self, edge_id: String) {
    |        ^^^^^^^^^^^

warning: methods `set_target_params`, `apply_gradual_adjustment`, `prepare_node_positions`, and `calculate_communication_intensity` are never used
    --> src/actors/graph_actor.rs:365:8
     |
 326 | impl GraphServiceActor {
     | ---------------------- methods in this implementation
...
 365 |     fn set_target_params(&mut self, new_params: SimulationParams) {
     |        ^^^^^^^^^^^^^^^^^
...
 465 |     fn apply_gradual_adjustment(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
1564 |     fn prepare_node_positions(&self) -> Vec<(f32, f32, f32)> {
     |        ^^^^^^^^^^^^^^^^^^^^^^
...
2768 |     fn calculate_communication_intensity(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `compressor` and `decompressor` are never read
  --> src/actors/optimized_settings_actor.rs:46:5
   |
36 | pub struct OptimizedSettingsActor {
   |            ---------------------- fields in this struct
...
46 |     compressor: Arc<RwLock<Compress>>,
   |     ^^^^^^^^^^
47 |     decompressor: Arc<RwLock<Decompress>>,
   |     ^^^^^^^^^^^^

warning: field `hash` is never read
  --> src/actors/optimized_settings_actor.rs:57:5
   |
55 | struct CachedValue {
   |        ----------- field in this struct
56 |     value: Value,
57 |     hash: String,
   |     ^^^^
   |
   = note: `CachedValue` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: variants `Float64`, `Int64`, `String`, `Object`, and `Array` are never constructed
  --> src/actors/optimized_settings_actor.rs:72:5
   |
70 | enum FieldType {
   |      --------- variants in this enum
71 |     Float32,
72 |     Float64,
   |     ^^^^^^^
73 |     Int32,
74 |     Int64,
   |     ^^^^^
75 |     Bool,
76 |     String,
   |     ^^^^^^
77 |     Object,
   |     ^^^^^^
78 |     Array,
   |     ^^^^^
   |
   = note: `FieldType` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: fields `required` and `pattern` are never read
  --> src/actors/optimized_settings_actor.rs:85:5
   |
82 | struct ValidationRules {
   |        --------------- fields in this struct
...
85 |     required: bool,
   |     ^^^^^^^^
86 |     pattern: Option<String>,
   |     ^^^^^^^
   |
   = note: `ValidationRules` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: constant `REDIS_TTL` is never used
   --> src/actors/optimized_settings_actor.rs:133:7
    |
133 | const REDIS_TTL: usize = 3600; // 1 hour
    |       ^^^^^^^^^

warning: method `decompress_data` is never used
   --> src/actors/optimized_settings_actor.rs:442:14
    |
137 | impl OptimizedSettingsActor {
    | --------------------------- method in this implementation
...
442 |     async fn decompress_data(&self, compressed: &[u8]) -> VisionFlowResult<String> {
    |              ^^^^^^^^^^^^^^^

warning: methods `handle_physics_step_completion`, `execute_cpu_physics_step`, and `broadcast_position_updates` are never used
   --> src/actors/physics_orchestrator_actor.rs:328:8
    |
109 | impl PhysicsOrchestratorActor {
    | ----------------------------- methods in this implementation
...
328 |     fn handle_physics_step_completion(&mut self) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
334 |     fn execute_cpu_physics_step(&mut self, _ctx: &mut Context<Self>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
341 |     fn broadcast_position_updates(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `session_id` is never read
  --> src/actors/supervisor.rs:53:5
   |
47 | struct ActorState {
   |        ---------- field in this struct
...
53 |     session_id: Option<String>,
   |     ^^^^^^^^^^
   |
   = note: `ActorState` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: method `should_restart` is never used
   --> src/actors/supervisor.rs:115:8
    |
107 | impl SupervisorActor {
    | -------------------- method in this implementation
...
115 |     fn should_restart(&self, actor_name: &str, state: &ActorState) -> bool {
    |        ^^^^^^^^^^^^^^

warning: field `supervisor_name` is never read
   --> src/actors/supervisor.rs:364:5
    |
362 | struct RestartAttempt {
    |        -------------- field in this struct
363 |     actor_name: String,
364 |     supervisor_name: String,
    |     ^^^^^^^^^^^^^^^

warning: field `message_buffer_size` is never read
   --> src/actors/graph_service_supervisor.rs:187:5
    |
165 | pub struct GraphServiceSupervisor {
    |            ---------------------- field in this struct
...
187 |     message_buffer_size: usize,
    |     ^^^^^^^^^^^^^^^^^^^

warning: method `buffer_message` is never used
   --> src/actors/graph_service_supervisor.rs:509:8
    |
234 | impl GraphServiceSupervisor {
    | --------------------------- method in this implementation
...
509 |     fn buffer_message(&mut self, actor_type: ActorType, message: SupervisedMessage) {
    |        ^^^^^^^^^^^^^^

warning: field `gpu_manager_addr` is never read
   --> src/actors/graph_service_supervisor.rs:894:5
    |
888 | pub struct TransitionalGraphSupervisor {
    |            --------------------------- field in this struct
...
894 |     gpu_manager_addr: Option<Addr<crate::actors::GPUManagerActor>>,
    |     ^^^^^^^^^^^^^^^^

warning: methods `calculate_graph_signature`, `can_perform_incremental_validation`, and `calculate_graph_similarity` are never used
   --> src/actors/ontology_actor.rs:225:8
    |
174 | impl OntologyActor {
    | ------------------ methods in this implementation
...
225 |     fn calculate_graph_signature(&self, graph: &PropertyGraph) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
250 |     fn can_perform_incremental_validation(&self, ontology_id: &str, graph: &PropertyGraph) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
267 |     fn calculate_graph_similarity(&self, sig1: &str, sig2: &str) -> f32 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `last_semantic_analysis`, `constraint_cache`, `active_tasks`, and `enable_ai_processing` are never read
   --> src/actors/semantic_processor_actor.rs:163:5
    |
134 | pub struct SemanticProcessorActor {
    |            ---------------------- fields in this struct
...
163 |     last_semantic_analysis: Option<Instant>,
    |     ^^^^^^^^^^^^^^^^^^^^^^
...
166 |     constraint_cache: HashMap<String, Vec<Constraint>>,
    |     ^^^^^^^^^^^^^^^^
...
169 |     active_tasks: HashMap<String, SemanticTask>,
    |     ^^^^^^^^^^^^
...
175 |     enable_ai_processing: bool,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: method `update_task_status` is never used
   --> src/actors/task_orchestrator_actor.rs:120:8
    |
 53 | impl TaskOrchestratorActor {
    | -------------------------- method in this implementation
...
120 |     fn update_task_status(&mut self, task_status: ApiTaskStatus) {
    |        ^^^^^^^^^^^^^^^^^^

warning: field `repository` is never read
   --> src/application/ontology/directives.rs:366:5
    |
365 | pub struct RemoveAxiomHandler {
    |            ------------------ field in this struct
366 |     repository: Arc<dyn OntologyRepository>,
    |     ^^^^^^^^^^

warning: field `bounds_checker` is never read
   --> src/gpu/streaming_pipeline.rs:234:5
    |
228 | pub struct FrameBuffer {
    |            ----------- field in this struct
...
234 |     bounds_checker: Arc<ThreadSafeMemoryBoundsChecker>,
    |     ^^^^^^^^^^^^^^

warning: fields `active_block` and `capacity` are never read
  --> src/gpu/hybrid_sssp/adaptive_heap.rs:20:5
   |
 9 | pub struct AdaptiveHeap {
   |            ------------ fields in this struct
...
20 |     active_block: usize,
   |     ^^^^^^^^^^^^
...
26 |     capacity: usize,
   |     ^^^^^^^^

warning: fields `adaptive_heap` and `recursion_stack` are never read
  --> src/gpu/hybrid_sssp/wasm_controller.rs:12:5
   |
10 | pub struct WASMController {
   |            -------------- fields in this struct
11 |     config: HybridSSPConfig,
12 |     adaptive_heap: AdaptiveHeap,
   |     ^^^^^^^^^^^^^
13 |     recursion_stack: Vec<RecursionFrame>,
   |     ^^^^^^^^^^^^^^^

warning: fields `level`, `bound`, `frontier`, `pivots`, and `subproblem_id` are never read
  --> src/gpu/hybrid_sssp/wasm_controller.rs:18:5
   |
17 | struct RecursionFrame {
   |        -------------- fields in this struct
18 |     level: u32,
   |     ^^^^^
19 |     bound: f32,
   |     ^^^^^
20 |     frontier: Vec<u32>,
   |     ^^^^^^^^
21 |     pivots: Vec<u32>,
   |     ^^^^^^
22 |     subproblem_id: u32,
   |     ^^^^^^^^^^^^^

warning: function `generate_spectral_clusters_from_agents` is never used
    --> src/handlers/api_handler/analytics/mod.rs:1178:4
     |
1178 | fn generate_spectral_clusters_from_agents(
     |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `generate_kmeans_clusters_from_agents` is never used
    --> src/handlers/api_handler/analytics/mod.rs:1188:4
     |
1188 | fn generate_kmeans_clusters_from_agents(
     |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `generate_louvain_clusters_from_agents` is never used
    --> src/handlers/api_handler/analytics/mod.rs:1198:4
     |
1198 | fn generate_louvain_clusters_from_agents(
     |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `generate_default_clusters_from_agents` is never used
    --> src/handlers/api_handler/analytics/mod.rs:1209:4
     |
1209 | fn generate_default_clusters_from_agents(
     |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `convert_gpu_clusters_to_response` is never used
   --> src/handlers/api_handler/analytics/real_gpu_functions.rs:294:4
    |
294 | fn convert_gpu_clusters_to_response(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `actor_timeout` is never used
   --> src/handlers/api_handler/ontology/mod.rs:354:4
    |
354 | fn actor_timeout() -> StdDuration {
    |    ^^^^^^^^^^^^^

warning: field `ontology_addr` is never read
   --> src/handlers/api_handler/ontology/mod.rs:963:5
    |
959 | pub struct OntologyWebSocket {
    |            ----------------- field in this struct
...
963 |     ontology_addr: Addr<OntologyActor>,
    |     ^^^^^^^^^^^^^

warning: method `get_real_agent_data` is never used
  --> src/handlers/bots_visualization_handler.rs:33:8
   |
22 | impl AgentVisualizationWs {
   | ------------------------- method in this implementation
...
33 |     fn get_real_agent_data(
   |        ^^^^^^^^^^^^^^^^^^^

warning: field `timestamp` is never read
  --> src/handlers/client_log_handler.rs:30:5
   |
26 | pub struct ClientLogsPayload {
   |            ----------------- field in this struct
...
30 |     timestamp: String,
   |     ^^^^^^^^^
   |
   = note: `ClientLogsPayload` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `app_state` is never read
  --> src/handlers/multi_mcp_websocket_handler.rs:43:5
   |
42 | pub struct MultiMcpVisualizationWs {
   |            ----------------------- field in this struct
43 |     app_state: web::Data<AppState>,
   |     ^^^^^^^^^

warning: methods `should_send_message` and `filter_agent_data` are never used
   --> src/handlers/multi_mcp_websocket_handler.rs:393:8
    |
114 | impl MultiMcpVisualizationWs {
    | ---------------------------- methods in this implementation
...
393 |     fn should_send_message(
    |        ^^^^^^^^^^^^^^^^^^^
...
412 |     fn filter_agent_data(&self, data: &mut serde_json::Value) {
    |        ^^^^^^^^^^^^^^^^^

warning: field `app_state` is never read
   --> src/handlers/realtime_websocket_handler.rs:154:5
    |
151 | pub struct RealtimeWebSocketHandler {
    |            ------------------------ field in this struct
...
154 |     app_state: actix_web::web::Data<AppState>,
    |     ^^^^^^^^^

warning: function `value_type_name` is never used
  --> src/handlers/settings_handler.rs:18:4
   |
18 | fn value_type_name(value: &Value) -> &'static str {
   |    ^^^^^^^^^^^^^^^

warning: method `propagate_physics_updates` is never used
    --> src/handlers/settings_handler.rs:1623:14
     |
1151 | impl EnhancedSettingsHandler {
     | ---------------------------- method in this implementation
...
1623 |     async fn propagate_physics_updates(
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `batch_get_settings` is never used
    --> src/handlers/settings_handler.rs:1856:10
     |
1856 | async fn batch_get_settings(
     |          ^^^^^^^^^^^^^^^^^^

warning: function `batch_update_settings` is never used
    --> src/handlers/settings_handler.rs:1919:10
     |
1919 | async fn batch_update_settings(
     |          ^^^^^^^^^^^^^^^^^^^^^

warning: function `get_field_variant` is never used
    --> src/handlers/settings_handler.rs:2944:4
     |
2944 | fn get_field_variant<'a>(obj: &'a Value, variants: &[&str]) -> Option<&'a Value> {
     |    ^^^^^^^^^^^^^^^^^

warning: function `count_fields` is never used
    --> src/handlers/settings_handler.rs:2954:4
     |
2954 | fn count_fields(value: &Value) -> usize {
     |    ^^^^^^^^^^^^

warning: function `extract_failed_field` is never used
    --> src/handlers/settings_handler.rs:2985:4
     |
2985 | fn extract_failed_field(physics: &Value) -> String {
     |    ^^^^^^^^^^^^^^^^^^^^

warning: constant `BATCH_UPDATE_WINDOW_MS` is never used
  --> src/handlers/socket_flow_handler.rs:26:7
   |
26 | const BATCH_UPDATE_WINDOW_MS: u64 = 200; // Check motion every 200ms
   |       ^^^^^^^^^^^^^^^^^^^^^^

warning: multiple fields are never read
   --> src/handlers/socket_flow_handler.rs:125:5
    |
108 | pub struct SocketFlowServer {
    |            ---------------- fields in this struct
...
125 |     last_transfer_time: Instant,
    |     ^^^^^^^^^^^^^^^^^^
...
131 |     last_batch_time: Instant, // Last time we sent a batch of updates
    |     ^^^^^^^^^^^^^^^
132 |     current_update_rate: u32, // Current rate in updates per second
    |     ^^^^^^^^^^^^^^^^^^^
133 |     // Store pre-read settings directly
134 |     min_update_rate: u32,
    |     ^^^^^^^^^^^^^^^
135 |     max_update_rate: u32,
    |     ^^^^^^^^^^^^^^^
136 |     motion_threshold: f32,
    |     ^^^^^^^^^^^^^^^^
137 |     motion_damping: f32,
    |     ^^^^^^^^^^^^^^
...
142 |     last_motion_check: Instant, // Last time we checked motion percentage,
    |     ^^^^^^^^^^^^^^^^^

warning: methods `get_current_update_interval`, `calculate_motion_percentage`, and `update_dynamic_rate` are never used
   --> src/handlers/socket_flow_handler.rs:349:8
    |
150 | impl SocketFlowServer {
    | --------------------- methods in this implementation
...
349 |     fn get_current_update_interval(&self) -> std::time::Duration {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
355 |     fn calculate_motion_percentage(&self) -> f32 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
364 |     fn update_dynamic_rate(&mut self) {
    |        ^^^^^^^^^^^^^^^^^^^

warning: struct `SetProviderRequest` is never constructed
  --> src/handlers/speech_socket_handler.rs:32:8
   |
32 | struct SetProviderRequest {
   |        ^^^^^^^^^^^^^^^^^^

warning: field `app_state` is never read
  --> src/handlers/websocket_settings_handler.rs:59:5
   |
57 | pub struct WebSocketSettingsHandler {
   |            ------------------------ field in this struct
58 |     client_id: String,
59 |     app_state: actix_web::web::Data<AppState>,
   |     ^^^^^^^^^

warning: methods `send_reliable_message` and `send_error_response` are never used
   --> src/handlers/websocket_settings_handler.rs:610:8
    |
609 | impl WebSocketSettingsHandler {
    | ----------------------------- methods in this implementation
610 |     fn send_reliable_message(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
628 |     fn send_error_response(&mut self, ctx: &mut ws::WebsocketContext<Self>, error_message: &str) {
    |        ^^^^^^^^^^^^^^^^^^^

warning: fields `axiom_hash` and `last_updated` are never read
   --> src/physics/ontology_constraints.rs:148:5
    |
146 | struct ConstraintCacheEntry {
    |        -------------------- fields in this struct
147 |     constraints: Vec<Constraint>,
148 |     axiom_hash: u64,
    |     ^^^^^^^^^^
149 |     last_updated: std::time::Instant,
    |     ^^^^^^^^^^^^
    |
    = note: `ConstraintCacheEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: static `SYSTEM` is never used
   --> src/services/agent_visualization_processor.rs:185:8
    |
185 | static SYSTEM: Lazy<Arc<Mutex<System>>> = Lazy::new(|| {
    |        ^^^^^^

warning: fields `token_history` and `process_map` are never read
   --> src/services/agent_visualization_processor.rs:193:5
    |
192 | pub struct AgentVisualizationProcessor {
    |            --------------------------- fields in this struct
193 |     token_history: HashMap<String, Vec<(DateTime<Utc>, u64)>>,
    |     ^^^^^^^^^^^^^
...
196 |     process_map: HashMap<String, Pid>,
    |     ^^^^^^^^^^^

warning: methods `calculate_token_rate`, `get_agent_token_usage`, and `get_real_system_metrics` are never used
   --> src/services/agent_visualization_processor.rs:353:8
    |
199 | impl AgentVisualizationProcessor {
    | -------------------------------- methods in this implementation
...
353 |     fn calculate_token_rate(&mut self, agent_id: &str, current_usage: u64) -> f32 {
    |        ^^^^^^^^^^^^^^^^^^^^
...
384 |     fn get_agent_token_usage(&self, agent_id: &str) -> u64 {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
397 |     fn get_real_system_metrics(&mut self, agent_id: &str) -> (f32, f32) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: field `base_path` is never read
  --> src/services/database_service.rs:47:5
   |
43 | pub struct DatabaseService {
   |            --------------- field in this struct
...
47 |     base_path: PathBuf,
   |     ^^^^^^^^^

warning: method `should_process_file` is never used
   --> src/services/file_service.rs:613:14
    |
 41 | impl FileService {
    | ---------------- method in this implementation
...
613 |     async fn should_process_file(
    |              ^^^^^^^^^^^^^^^^^^^

warning: method `count_cross_server_connections` is never used
    --> src/services/topology_visualization_engine.rs:1231:8
     |
 371 | impl TopologyVisualizationEngine {
     | -------------------------------- method in this implementation
...
1231 |     fn count_cross_server_connections(&self) -> u32 {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `timeout_config` is never read
  --> src/services/mcp_relay_manager.rs:17:5
   |
14 | pub struct McpRelayManager {
   |            --------------- field in this struct
...
17 |     timeout_config: TimeoutConfig,
   |     ^^^^^^^^^^^^^^

warning: fields `id`, `content_hash`, `axiom_count`, and `ttl_seconds` are never read
   --> src/services/owl_validator.rs:124:5
    |
123 | struct CachedOntology {
    |        -------------- fields in this struct
124 |     id: String,
    |     ^^
125 |     content_hash: String,
    |     ^^^^^^^^^^^^
126 |     ontology: SetOntology<Arc<str>>,
127 |     axiom_count: usize,
    |     ^^^^^^^^^^^
128 |     loaded_at: DateTime<Utc>,
129 |     ttl_seconds: u64,
    |     ^^^^^^^^^^^
    |
    = note: `CachedOntology` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `SubClassOf` is never constructed
   --> src/services/owl_validator.rs:185:5
    |
174 | enum InferenceRule {
    |      ------------- variant in this enum
...
185 |     SubClassOf {
    |     ^^^^^^^^^^
    |
    = note: `InferenceRule` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `generate_cache_key` is never used
   --> src/services/owl_validator.rs:621:8
    |
191 | impl OwlValidatorService {
    | ------------------------ method in this implementation
...
621 |     fn generate_cache_key(&self, source: &str) -> String {
    |        ^^^^^^^^^^^^^^^^^^

warning: method `detect_performance_anomaly` is never used
   --> src/utils/advanced_logging.rs:456:8
    |
104 | impl AdvancedLogger {
    | ------------------- method in this implementation
...
456 |     fn detect_performance_anomaly(&self, kernel_name: &str, execution_time_us: f64) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `max_connections_per_host` is never read
  --> src/utils/async_improvements.rs:14:5
   |
12 | pub struct MCPConnectionPool {
   |            ----------------- field in this struct
13 |     connections: Arc<RwLock<HashMap<String, PooledConnection>>>,
14 |     max_connections_per_host: usize,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `stream` is never read
  --> src/utils/async_improvements.rs:21:5
   |
20 | struct PooledConnection {
   |        ---------------- field in this struct
21 |     stream: TcpStream,
   |     ^^^^^^

warning: constant `WIRE_V2_AGENT_FLAG` is never used
  --> src/utils/binary_protocol.rs:32:7
   |
32 | const WIRE_V2_AGENT_FLAG: u32 = 0x80000000; // Bit 31 indicates agent node
   |       ^^^^^^^^^^^^^^^^^^

warning: constant `WIRE_V2_KNOWLEDGE_FLAG` is never used
  --> src/utils/binary_protocol.rs:33:7
   |
33 | const WIRE_V2_KNOWLEDGE_FLAG: u32 = 0x40000000; // Bit 30 indicates knowledge graph node
   |       ^^^^^^^^^^^^^^^^^^^^^^

warning: constant `WIRE_V2_NODE_ID_MASK` is never used
  --> src/utils/binary_protocol.rs:34:7
   |
34 | const WIRE_V2_NODE_ID_MASK: u32 = 0x3FFFFFFF; // Mask to extract actual node ID (bits 0-29)
   |       ^^^^^^^^^^^^^^^^^^^^

warning: constant `WIRE_ID_SIZE` is never used
  --> src/utils/binary_protocol.rs:75:7
   |
75 | const WIRE_ID_SIZE: usize = WIRE_V2_ID_SIZE;
   |       ^^^^^^^^^^^^

warning: constant `WIRE_ITEM_SIZE` is never used
  --> src/utils/binary_protocol.rs:76:7
   |
76 | const WIRE_ITEM_SIZE: usize = WIRE_V2_ITEM_SIZE;
   |       ^^^^^^^^^^^^^^

warning: field `session_id` is never read
  --> src/utils/mcp_connection.rs:14:5
   |
12 | pub struct PersistentMCPConnection {
   |            ----------------------- field in this struct
13 |     stream: Arc<Mutex<TcpStream>>,
14 |     session_id: String,
   |     ^^^^^^^^^^

warning: fields `jsonrpc` and `id` are never read
  --> src/utils/mcp_tcp_client.rs:53:5
   |
52 | struct McpResponse {
   |        ----------- fields in this struct
53 |     jsonrpc: String,
   |     ^^^^^^^
...
58 |     id: u64,
   |     ^^
   |
   = note: `McpResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `data` and `callback` are never read
   --> src/utils/network/graceful_degradation.rs:116:5
    |
114 | struct QueuedRequest {
    |        ------------- fields in this struct
115 |     id: String,
116 |     data: serde_json::Value,
    |     ^^^^
117 |     timestamp: Instant,
118 |     callback: Option<tokio::sync::oneshot::Sender<Result<serde_json::Value, String>>>,
    |     ^^^^^^^^
    |
    = note: `QueuedRequest` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `cub_temp_storage` is never read
   --> src/utils/unified_gpu_compute.rs:269:5
    |
217 | pub struct UnifiedGPUCompute {
    |            ----------------- field in this struct
...
269 |     cub_temp_storage: DeviceBuffer<u8>,
    |     ^^^^^^^^^^^^^^^^

warning: function `thrust_exclusive_scan` is never used
    --> src/utils/unified_gpu_compute.rs:3472:8
     |
3472 |     fn thrust_exclusive_scan(
     |        ^^^^^^^^^^^^^^^^^^^^^

warning: field `config` is never read
   --> src/utils/validation/middleware.rs:180:5
    |
178 | pub struct RateLimit {
    |            --------- field in this struct
179 |     limiter: Rc<RateLimiter>,
180 |     config: RateLimitConfig,
    |     ^^^^^^

warning: hiding a lifetime that's elided elsewhere is confusing
   --> src/actors/gpu/shared.rs:405:37
    |
405 |     pub async fn acquire_gpu_access(&self) -> Result<tokio::sync::RwLockReadGuard<()>, String> {
    |                                     ^^^^^            -------------------------------- the same lifetime is hidden here
    |                                     |
    |                                     the lifetime is elided here
    |
    = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
    = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default
help: use `'_` for type paths
    |
405 |     pub async fn acquire_gpu_access(&self) -> Result<tokio::sync::RwLockReadGuard<'_, ()>, String> {
    |                                                                                   +++

warning: hiding a lifetime that's elided elsewhere is confusing
   --> src/actors/gpu/shared.rs:444:9
    |
444 |         &self,
    |         ^^^^^ the lifetime is elided here
445 |     ) -> Result<tokio::sync::RwLockWriteGuard<()>, String> {
    |                 --------------------------------- the same lifetime is hidden here
    |
    = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
help: use `'_` for type paths
    |
445 |     ) -> Result<tokio::sync::RwLockWriteGuard<'_, ()>, String> {
    |                                               +++

warning: use of `async fn` in public traits is discouraged as auto trait bounds cannot be specified
  --> src/services/speech_voice_integration.rs:16:5
   |
16 |     async fn process_voice_command_with_tags(
   |     ^^^^^
   |
   = note: you can suppress this lint if you plan to use the trait only in your own code, or do not care about auto traits like `Send` on the `Future`
   = note: `#[warn(async_fn_in_trait)]` on by default
help: you can alternatively desugar to a normal `fn` that returns `impl Future` and add any desired bounds such as `Send`, but these cannot be relaxed without a breaking API change
   |
16 ~     fn process_voice_command_with_tags(
17 |         &self,
...
20 |         tag_manager: Arc<VoiceTagManager>,
21 ~     ) -> impl std::future::Future<Output = Result<VoiceTag, String>> + Send;
   |

warning: use of `async fn` in public traits is discouraged as auto trait bounds cannot be specified
  --> src/services/speech_voice_integration.rs:24:5
   |
24 |     async fn handle_tagged_swarm_response(
   |     ^^^^^
   |
   = note: you can suppress this lint if you plan to use the trait only in your own code, or do not care about auto traits like `Send` on the `Future`
help: you can alternatively desugar to a normal `fn` that returns `impl Future` and add any desired bounds such as `Send`, but these cannot be relaxed without a breaking API change
   |
24 ~     fn handle_tagged_swarm_response(
25 |         &self,
26 |         response: TaggedVoiceResponse,
27 ~     ) -> impl std::future::Future<Output = Result<(), String>> + Send;
   |

warning: use of `async fn` in public traits is discouraged as auto trait bounds cannot be specified
  --> src/services/speech_voice_integration.rs:30:5
   |
30 |     async fn process_voice_command(&self, text: String, session_id: String) -> Result<(), String>;
   |     ^^^^^
   |
   = note: you can suppress this lint if you plan to use the trait only in your own code, or do not care about auto traits like `Send` on the `Future`
help: you can alternatively desugar to a normal `fn` that returns `impl Future` and add any desired bounds such as `Send`, but these cannot be relaxed without a breaking API change
   |
30 -     async fn process_voice_command(&self, text: String, session_id: String) -> Result<(), String>;
30 +     fn process_voice_command(&self, text: String, session_id: String) -> impl std::future::Future<Output = Result<(), String>> + Send;
   |

warning: use of `async fn` in public traits is discouraged as auto trait bounds cannot be specified
  --> src/services/speech_voice_integration.rs:33:5
   |
33 |     async fn handle_swarm_response(&self, response: SwarmVoiceResponse) -> Result<(), String>;
   |     ^^^^^
   |
   = note: you can suppress this lint if you plan to use the trait only in your own code, or do not care about auto traits like `Send` on the `Future`
help: you can alternatively desugar to a normal `fn` that returns `impl Future` and add any desired bounds such as `Send`, but these cannot be relaxed without a breaking API change
   |
33 -     async fn handle_swarm_response(&self, response: SwarmVoiceResponse) -> Result<(), String>;
33 +     fn handle_swarm_response(&self, response: SwarmVoiceResponse) -> impl std::future::Future<Output = Result<(), String>> + Send;
   |

warning: creating a shared reference to mutable static
   --> src/telemetry/agent_telemetry.rs:641:14
    |
641 |     unsafe { GLOBAL_TELEMETRY_LOGGER.as_ref() }
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
    |
    = note: for more information, see <https://doc.rust-lang.org/edition-guide/rust-2024/static-mut-references.html>
    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives
    = note: `#[warn(static_mut_refs)]` on by default

warning: `webxr` (lib) generated 146 warnings (run `cargo fix --lib -p webxr` to apply 7 suggestions)
warning: unused import: `webxr::actors::messages::UpdateMetadata`
 --> src/main.rs:2:5
  |
2 | use webxr::actors::messages::UpdateMetadata;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `content_enhanced::EnhancedContentAPI`, `github_sync_service::GitHubSyncService`, `sqlite_knowledge_graph_repository::SqliteKnowledgeGraphRepository`, and `sqlite_ontology_repository::SqliteOntologyRepository`
  --> src/main.rs:25:13
   |
25 |             content_enhanced::EnhancedContentAPI,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
30 |         github_sync_service::GitHubSyncService, // NEW: Direct database sync service
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
34 |         sqlite_knowledge_graph_repository::SqliteKnowledgeGraphRepository,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
35 |         sqlite_ontology_repository::SqliteOntologyRepository,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `warn`
  --> src/main.rs:48:31
   |
48 | use log::{debug, error, info, warn};
   |                               ^^^^

warning: `webxr` (bin "webxr") generated 3 warnings (run `cargo fix --bin "webxr"` to apply 3 suggestions)
    Finished `dev` profile [optimized + debuginfo] target(s) in 0.27s
warning: the following packages contain code that will be rejected by a future version of Rust: quick-xml v0.21.0, quick-xml v0.22.0
note: to see what the problems were, use the option `--future-incompat-report`, or run `cargo report future-incompatibilities --id 1`
