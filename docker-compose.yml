services:
  powerdev:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BLENDER_DOWNLOAD_URL=https://mirror.clarkson.edu/blender/release/Blender4.5/blender-4.5.0-linux-x64.tar.xz
    image: powerdev:latest
    container_name: powerdev

    # GPU support (uncomment if you have NVIDIA GPU)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

    environment:
      - DISPLAY=:99
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - PYTHONUNBUFFERED=1

    ports:
      - "9876:9876"    # Blender MCP server
      - "3000:3000"    # Claude Flow UI
      - "3001:3001"    # Additional services

    volumes:
      - ./workspace:/workspace
      - ./blender-files:/blender-files
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${EXTERNAL_DIR:-./.agent-mount/ext}:/workspace/ext

    # Run in interactive mode by default
    command: ["--interactive"]

    # Keep stdin open and allocate a pseudo-TTY
    stdin_open: true
    tty: true

    # Security options
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfirmed
    cap_add:
      - SYS_PTRACE

    # Resource limits
    mem_limit: 8g
    cpus: "4.0"

    # Healthcheck
    healthcheck:
      test: ["CMD", "pgrep", "-f", "python"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # Restart policy
    restart: unless-stopped

    networks:
      - powerdev-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "blender-host:192.168.0.216"  # For external Blender MCP server

  # MCP Orchestrator service for swarm visualization
  mcp-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    image: mcp-orchestrator:latest
    container_name: mcp-orchestrator
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - MCP_ORCHESTRATOR_PORT=9000
      - WEBSOCKET_PORT=9001
      - POLL_INTERVAL=5000
      - MCP_SERVERS=blender:9876,claude-flow:3000
      - CLAUDE_FLOW_HOST=powerdev
      - CLAUDE_FLOW_PORT=3000
    ports:
      - "9000:9000"  # REST API
      - "9001:9001"  # WebSocket
    networks:
      - powerdev-network
    depends_on:
      - powerdev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Claude Flow standalone service
  claude-flow:
    image: powerdev:latest
    container_name: claude-flow-ui
    command: ["claude-flow", "start", "--ui", "--port", "3000"]
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
    networks:
      - powerdev-network
    profiles:
      - standalone

networks:
  powerdev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  workspace:
  blender-files: