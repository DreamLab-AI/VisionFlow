services:
  # Development configuration
  webxr:
    profiles: ["dev"]
    container_name: visionflow_container
    hostname: webxr
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        CUDA_ARCH: ${CUDA_ARCH:-86}
    volumes:
      # SOURCE CODE - Live mounted for development
      - ./src:/app/src:ro
      - ./client:/app/client
      - ./Cargo.toml:/app/Cargo.toml:ro
      - ./Cargo.lock:/app/Cargo.lock:ro
      - ./schema:/app/schema:ro
      - ./whelk-rs:/app/whelk-rs:ro
      # Named volumes for databases (no bind mount conflicts)
      - visionflow-data:/app/data
      # Subdirectories as bind mounts (safe)
      - ./data/user_settings:/app/user_settings
      # Logs (safe to mount)
      - ./logs/nginx:/var/log/nginx
      - ./logs:/app/logs
      # Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Caches (volumes only, no file mounts)
      - npm-cache:/root/.npm
      - cargo-cache:/root/.cargo/registry
      - cargo-git-cache:/root/.cargo/git
      - cargo-target-cache:/app/target
      # NOTE: Source code now live-mounted - supervisor auto-rebuilds on change
    env_file:
      - .env
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - VITE_DEBUG=${DEBUG_ENABLED:-true}
      - NODE_ENV=development
      - VITE_DEV_SERVER_PORT=5173
      - VITE_API_PORT=4000
      - VITE_HMR_PORT=24678
      - RUST_LOG_REDIRECT=true
      - SYSTEM_NETWORK_PORT=4000
      - CLAUDE_FLOW_HOST=agentic-workstation
      - MCP_HOST=agentic-workstation
      - MCP_TCP_PORT=9500
      - MCP_TRANSPORT=tcp
      - MCP_RECONNECT_ATTEMPTS=3
      - MCP_RECONNECT_DELAY=1000
      - MCP_CONNECTION_TIMEOUT=30000
      - ORCHESTRATOR_WS_URL=ws://mcp-orchestrator:9001/ws
      - MCP_RELAY_FALLBACK_TO_MOCK=true
      - BOTS_ORCHESTRATOR_URL=ws://agentic-workstation:3002
      - MANAGEMENT_API_HOST=agentic-workstation
      - MANAGEMENT_API_PORT=9090
    ports:
      - "3001:3001"  # Nginx entry point for dev
      - "4000:4000"  # API port for direct access
    networks:
      docker_ragflow:
        aliases:
          - webxr
    restart: unless-stopped

  # Production configuration - using dev image with production settings
  webxr-prod:
    profiles: ["production", "prod"]
    container_name: visionflow_prod_container
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        CUDA_ARCH: ${CUDA_ARCH:-86}
    entrypoint: ["/app/prod-entrypoint.sh"]
    env_file:
      - .env
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - NODE_ENV=production
      - RUST_LOG=warn
      - SYSTEM_NETWORK_PORT=4001
      - CLAUDE_FLOW_HOST=agentic-workstation
      - MCP_HOST=agentic-workstation
      - MCP_TCP_PORT=9500
      - MCP_TRANSPORT=tcp
      - MCP_RECONNECT_ATTEMPTS=3
      - MCP_RECONNECT_DELAY=1000
      - MCP_CONNECTION_TIMEOUT=30000
      - ORCHESTRATOR_WS_URL=ws://mcp-orchestrator:9001/ws
      - MCP_RELAY_FALLBACK_TO_MOCK=true
      - BOTS_ORCHESTRATOR_URL=ws://agentic-workstation:3002
      - MANAGEMENT_API_HOST=agentic-workstation
      - MANAGEMENT_API_PORT=9090
    volumes:
      - ./client:/app/client
      - ./src:/app/src
      - ./Cargo.toml:/app/Cargo.toml
      - ./Cargo.lock:/app/Cargo.lock
      - ./data/markdown:/app/data/markdown
      - ./data/metadata:/app/data/metadata
      - ./data/user_settings:/app/user_settings
      - ./data/settings.yaml:/app/settings.yaml
      - ./nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
      - ./logs:/app/logs
      - ./scripts/prod-entrypoint.sh:/app/prod-entrypoint.sh:ro
      - ./supervisord.production.conf:/app/supervisord.production.conf:ro
      - cargo-target-cache:/app/target
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [compute,utility]
              device_ids: ['0']
    ports:
      - "4000:4000"  # API port for production
    networks:
      - docker_ragflow
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Cloudflare tunnel - now works with dev profile
  cloudflared:
    profiles: ["dev", "production", "prod"]
    container_name: cloudflared-tunnel
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    volumes:
      - ./config.yml:/etc/cloudflared/config.yml:ro
    depends_on:
      webxr:
        condition: service_started
        required: false
      webxr-prod:
        condition: service_started
        required: false
    networks:
      - docker_ragflow
    restart: unless-stopped

networks:
  docker_ragflow:
    external: true

volumes:
  visionflow-data:
  npm-cache:
  cargo-cache:
  cargo-git-cache:
  cargo-target-cache: