@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix ai: <http://metaverse-ontology.org/ai-grounded#> .

#
# AI Grounded Ontology - SHACL Validation Shapes
#
# This file defines comprehensive validation constraints for the AI Grounded Ontology
# to ensure quality, conformance, and consistency across all AI concept definitions.
#
# Author: SHACL Shapes Author Agent
# Date: 2025-10-27
# Version: 1.0.0
# Specification: W3C SHACL (https://www.w3.org/TR/shacl/)
#

# ==============================================================================
# SHAPE 1: Core AI Concept Shape
# ==============================================================================
# Purpose: Validates that every AI concept has the required structural elements:
# - Unique term identifier
# - Preferred term label
# - Comprehensive definition (50-500 words)
# - Authoritative source citations (minimum 3)
# - Parent class relationships
# ==============================================================================

ai:AIConcept-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    sh:targetSubjectsOf rdfs:subClassOf ;
    rdfs:label "AI Concept Structural Conformance Shape"@en-GB ;
    rdfs:comment "Ensures all AI concepts comply with the grounded ontology structural requirements."@en-GB ;

    # Every AI concept must have exactly one term identifier
    sh:property [
        sh:path ai:term-id ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
        sh:pattern "^AI-[0-9]{4}$" ;
        sh:message "Every AI concept must have exactly one term identifier in format AI-NNNN"@en-GB ;
    ] ;

    # Every AI concept must have exactly one preferred term
    sh:property [
        sh:path skos:prefLabel ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
        sh:minLength 2 ;
        sh:maxLength 100 ;
        sh:message "Every AI concept must have exactly one preferred term (2-100 characters)"@en-GB ;
    ] ;

    # Every AI concept must have exactly one definition
    sh:property [
        sh:path skos:definition ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
        sh:minLength 50 ;
        sh:maxLength 5000 ;
        sh:message "Every AI concept must have exactly one definition (50-5000 characters, approximately 50-500 words)"@en-GB ;
    ] ;

    # Every AI concept must have at least 3 authoritative sources
    sh:property [
        sh:path dcterms:source ;
        sh:minCount 3 ;
        sh:datatype xsd:string ;
        sh:message "Every AI concept must have at least 3 authoritative source citations"@en-GB ;
    ] ;

    # Every AI concept must have at least one parent class
    sh:property [
        sh:path rdfs:subClassOf ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:message "Every AI concept must have at least one parent class relationship"@en-GB ;
    ] ;

    # Every AI concept should have alternative labels
    sh:property [
        sh:path skos:altLabel ;
        sh:minCount 0 ;
        sh:datatype xsd:string ;
        sh:severity sh:Warning ;
        sh:message "Consider adding alternative labels for improved discoverability"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 2: Definition Quality Shape
# ==============================================================================
# Purpose: Validates definition content quality
# - Word count validation (50-500 words)
# - Ensures definition contains key structural elements
# - Checks for proper citation integration
# ==============================================================================

ai:DefinitionQuality-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "AI Concept Definition Quality Shape"@en-GB ;
    rdfs:comment "Ensures definitions meet quality standards for clarity and comprehensiveness."@en-GB ;

    # Definition must not contain common placeholder text
    sh:property [
        sh:path skos:definition ;
        sh:not [
            sh:pattern "(?i)(TODO|FIXME|TBD|XXX|placeholder)" ;
        ] ;
        sh:message "Definition must not contain placeholder text (TODO, FIXME, TBD, etc.)"@en-GB ;
    ] ;

    # Definition should reference key terminology
    sh:property [
        sh:path skos:definition ;
        sh:pattern ".*" ;
        sh:severity sh:Info ;
        sh:message "Ensure definition uses precise technical terminology from authoritative sources"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 3: Citation Format Validation Shape
# ==============================================================================
# Purpose: Validates that citations follow the required format:
# - [Standard/Document Name] Section X.Y.Z, [URL], Last accessed: YYYY-MM-DD
# - DOI format for academic papers
# - Valid permalink patterns
# ==============================================================================

ai:CitationFormat-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "Citation Format Validation Shape"@en-GB ;
    rdfs:comment "Ensures all source citations follow the required format for traceability and verification."@en-GB ;

    # Citation must follow standard format pattern
    sh:property [
        sh:path dcterms:source ;
        sh:pattern "^\\[.+\\].*,\\s*(https?://|doi:).+,\\s*Last accessed:\\s*[0-9]{4}-[0-9]{2}-[0-9]{2}$|^doi:[0-9]{2}\\.[0-9]{4,}/.+" ;
        sh:message "Citation must follow format: [Source Name] Section, [URL], Last accessed: YYYY-MM-DD OR doi:XX.XXXX/..."@en-GB ;
    ] ;

    # URL in citation must be valid
    sh:property [
        sh:path dcterms:source ;
        sh:pattern ".*(https?://[^\\s,]+).*" ;
        sh:message "Citation must contain a valid HTTP/HTTPS URL or DOI"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 4: Standards Alignment Shape
# ==============================================================================
# Purpose: Validates alignment with international standards:
# - ISO/IEC standard references
# - NIST framework mappings
# - EU AI Act classifications
# - OECD dimension assignments
# ==============================================================================

ai:StandardsAlignment-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "Standards Alignment Validation Shape"@en-GB ;
    rdfs:comment "Ensures AI concepts are properly aligned with international standards and frameworks."@en-GB ;

    # ISO/IEC standard alignment (when applicable)
    sh:property [
        sh:path ai:iso-iec-standard ;
        sh:datatype xsd:string ;
        sh:pattern "^ISO/IEC\\s+[0-9]+(:[0-9]{4})?(-[0-9]+)?(:[0-9]{4})?$" ;
        sh:severity sh:Info ;
        sh:message "ISO/IEC standard reference should follow format: ISO/IEC NNNNN:YYYY or ISO/IEC NNNNN-N:YYYY"@en-GB ;
    ] ;

    # NIST framework mapping (when applicable)
    sh:property [
        sh:path ai:nist-framework ;
        sh:datatype xsd:string ;
        sh:in (
            "GOVERN"
            "MAP"
            "MEASURE"
            "MANAGE"
        ) ;
        sh:severity sh:Info ;
        sh:message "NIST AI RMF function should be one of: GOVERN, MAP, MEASURE, MANAGE"@en-GB ;
    ] ;

    # EU AI Act classification (when applicable)
    sh:property [
        sh:path ai:eu-ai-act-risk-level ;
        sh:datatype xsd:string ;
        sh:in (
            "Unacceptable Risk"
            "High Risk"
            "Limited Risk"
            "Minimal Risk"
        ) ;
        sh:severity sh:Info ;
        sh:message "EU AI Act risk level should be one of: Unacceptable Risk, High Risk, Limited Risk, Minimal Risk"@en-GB ;
    ] ;

    # OECD AI Principles dimension
    sh:property [
        sh:path ai:oecd-dimension ;
        sh:datatype xsd:string ;
        sh:in (
            "Inclusive Growth"
            "Sustainable Development"
            "Well-being"
            "Human-centred Values"
            "Fairness"
            "Transparency"
            "Explainability"
            "Robustness"
            "Security"
            "Safety"
            "Accountability"
        ) ;
        sh:severity sh:Info ;
        sh:message "OECD dimension should align with OECD AI Principles framework"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 5: Object Property Validation Shape
# ==============================================================================
# Purpose: Validates object properties (relationships between concepts):
# - Must have valid domain and range
# - Must have proper labels and descriptions
# - Cardinality constraints
# ==============================================================================

ai:ObjectProperty-Shape
    a sh:NodeShape ;
    sh:targetClass owl:ObjectProperty ;
    rdfs:label "Object Property Validation Shape"@en-GB ;
    rdfs:comment "Ensures object properties have valid domains, ranges, and documentation."@en-GB ;

    # Object property must have a label
    sh:property [
        sh:path rdfs:label ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Object property must have at least one label"@en-GB ;
    ] ;

    # Object property must have a comment/definition
    sh:property [
        sh:path rdfs:comment ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:minLength 20 ;
        sh:message "Object property must have a descriptive comment (minimum 20 characters)"@en-GB ;
    ] ;

    # Object property should have a domain
    sh:property [
        sh:path rdfs:domain ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:severity sh:Warning ;
        sh:message "Object property should specify at least one domain class"@en-GB ;
    ] ;

    # Object property should have a range
    sh:property [
        sh:path rdfs:range ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:severity sh:Warning ;
        sh:message "Object property should specify at least one range class"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 6: Data Property Validation Shape
# ==============================================================================
# Purpose: Validates data properties (attributes with literal values):
# - Must have valid datatype
# - Must have proper documentation
# - Domain specification
# ==============================================================================

ai:DataProperty-Shape
    a sh:NodeShape ;
    sh:targetClass owl:DatatypeProperty ;
    rdfs:label "Data Property Validation Shape"@en-GB ;
    rdfs:comment "Ensures data properties have valid datatypes and documentation."@en-GB ;

    # Data property must have a label
    sh:property [
        sh:path rdfs:label ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Data property must have at least one label"@en-GB ;
    ] ;

    # Data property must have a comment/definition
    sh:property [
        sh:path rdfs:comment ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:minLength 20 ;
        sh:message "Data property must have a descriptive comment (minimum 20 characters)"@en-GB ;
    ] ;

    # Data property must have a range datatype
    sh:property [
        sh:path rdfs:range ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:message "Data property must specify a valid XSD datatype as range"@en-GB ;
    ] ;

    # Data property should have a domain
    sh:property [
        sh:path rdfs:domain ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:severity sh:Warning ;
        sh:message "Data property should specify at least one domain class"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 7: OWL Axiom Requirements Shape
# ==============================================================================
# Purpose: Validates that concepts include proper OWL axioms:
# - Class declarations must be present
# - Axioms must be syntactically valid (checked via pattern)
# - Functional syntax requirement
# ==============================================================================

ai:OWLAxiom-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "OWL Axiom Requirements Shape"@en-GB ;
    rdfs:comment "Ensures every AI concept includes valid OWL axioms in functional syntax."@en-GB ;

    # Every class must have OWL axiom documentation
    sh:property [
        sh:path ai:owl-axiom ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Every AI concept must include OWL functional syntax axioms"@en-GB ;
    ] ;

    # OWL axiom must contain Declaration statement
    sh:property [
        sh:path ai:owl-axiom ;
        sh:pattern "(?s).*Declaration\\s*\\(\\s*Class\\s*\\(.*" ;
        sh:message "OWL axiom must include a Declaration(Class(...)) statement"@en-GB ;
    ] ;

    # OWL axiom should be properly formatted
    sh:property [
        sh:path ai:owl-axiom ;
        sh:pattern "(?s).*SubClassOf\\s*\\(.*" ;
        sh:severity sh:Warning ;
        sh:message "OWL axiom should include SubClassOf relationships for proper hierarchy"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 8: Metadata Completeness Shape
# ==============================================================================
# Purpose: Validates comprehensive metadata:
# - Creation and modification dates
# - Creator/contributor information
# - Version information
# - License information
# ==============================================================================

ai:MetadataCompleteness-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "Metadata Completeness Shape"@en-GB ;
    rdfs:comment "Ensures AI concepts include comprehensive metadata for provenance and governance."@en-GB ;

    # Creation date
    sh:property [
        sh:path dcterms:created ;
        sh:maxCount 1 ;
        sh:datatype xsd:dateTime ;
        sh:severity sh:Warning ;
        sh:message "Consider adding creation date (dcterms:created) for provenance tracking"@en-GB ;
    ] ;

    # Modification date
    sh:property [
        sh:path dcterms:modified ;
        sh:maxCount 1 ;
        sh:datatype xsd:dateTime ;
        sh:severity sh:Warning ;
        sh:message "Consider adding last modification date (dcterms:modified) for version control"@en-GB ;
    ] ;

    # Creator information
    sh:property [
        sh:path dcterms:creator ;
        sh:datatype xsd:string ;
        sh:severity sh:Info ;
        sh:message "Consider adding creator information for attribution"@en-GB ;
    ] ;

    # License information
    sh:property [
        sh:path dcterms:license ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:severity sh:Info ;
        sh:message "Consider specifying license information for usage rights"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 9: Taxonomy Hierarchy Validation Shape
# ==============================================================================
# Purpose: Validates proper taxonomy structure:
# - No circular inheritance
# - Maximum depth constraints
# - Proper categorisation
# ==============================================================================

ai:TaxonomyHierarchy-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "Taxonomy Hierarchy Validation Shape"@en-GB ;
    rdfs:comment "Ensures AI concepts maintain a valid and coherent taxonomic hierarchy."@en-GB ;

    # Class must not be its own parent (prevents direct circular inheritance)
    sh:sparql [
        sh:message "Class must not be its own parent (circular inheritance detected)"@en-GB ;
        sh:prefixes [
            sh:prefix "rdfs" ;
            sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
        ] ;
        sh:select """
            SELECT $this
            WHERE {
                $this rdfs:subClassOf $this .
            }
        """ ;
    ] ;

    # Top-level concepts should have explicit categorisation
    sh:property [
        sh:path ai:category ;
        sh:datatype xsd:string ;
        sh:in (
            "Core AI Concepts"
            "Machine Learning"
            "Natural Language Processing"
            "Computer Vision"
            "Robotics"
            "Knowledge Representation"
            "AI Ethics & Governance"
            "AI Safety & Security"
            "AI Applications"
        ) ;
        sh:severity sh:Info ;
        sh:message "Consider assigning concept to a primary AI category for organisation"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 10: Cross-Reference Validation Shape
# ==============================================================================
# Purpose: Validates cross-references and related concepts:
# - Related terms must exist
# - See also references must be valid IRIs
# - Narrow/broader term relationships
# ==============================================================================

ai:CrossReference-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "Cross-Reference Validation Shape"@en-GB ;
    rdfs:comment "Ensures cross-references and related concept links are valid and meaningful."@en-GB ;

    # Related concepts should be valid IRIs
    sh:property [
        sh:path skos:related ;
        sh:nodeKind sh:IRI ;
        sh:severity sh:Info ;
        sh:message "Related concepts should reference valid ontology IRIs"@en-GB ;
    ] ;

    # Broader concepts should be valid IRIs
    sh:property [
        sh:path skos:broader ;
        sh:nodeKind sh:IRI ;
        sh:severity sh:Info ;
        sh:message "Broader concepts should reference valid ontology IRIs"@en-GB ;
    ] ;

    # Narrower concepts should be valid IRIs
    sh:property [
        sh:path skos:narrower ;
        sh:nodeKind sh:IRI ;
        sh:severity sh:Info ;
        sh:message "Narrower concepts should reference valid ontology IRIs"@en-GB ;
    ] ;

    # See also references must be valid IRIs or URLs
    sh:property [
        sh:path rdfs:seeAlso ;
        sh:nodeKind sh:IRI ;
        sh:severity sh:Info ;
        sh:message "See also references should be valid IRIs or URLs"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 11: Example and Usage Shape
# ==============================================================================
# Purpose: Validates that concepts include practical examples:
# - Usage examples
# - Application scenarios
# - Code snippets (where applicable)
# ==============================================================================

ai:ExampleUsage-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "Example and Usage Validation Shape"@en-GB ;
    rdfs:comment "Encourages inclusion of practical examples and usage scenarios for clarity."@en-GB ;

    # Example usage
    sh:property [
        sh:path skos:example ;
        sh:datatype xsd:string ;
        sh:minLength 20 ;
        sh:severity sh:Info ;
        sh:message "Consider adding concrete examples to illustrate concept usage"@en-GB ;
    ] ;

    # Scope note for context
    sh:property [
        sh:path skos:scopeNote ;
        sh:datatype xsd:string ;
        sh:minLength 20 ;
        sh:severity sh:Info ;
        sh:message "Consider adding scope notes to clarify intended usage and boundaries"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 12: Multilingual Support Shape
# ==============================================================================
# Purpose: Validates multilingual labels and definitions:
# - Language tags must be valid
# - Core content should have English (en-GB) version
# ==============================================================================

ai:MultilingualSupport-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "Multilingual Support Validation Shape"@en-GB ;
    rdfs:comment "Ensures proper language tagging for international accessibility."@en-GB ;

    # Preferred label must exist in UK English
    sh:property [
        sh:path skos:prefLabel ;
        sh:minCount 1 ;
        sh:languageIn ("en-GB" "en") ;
        sh:message "Preferred label must exist in UK English (en-GB) or English (en)"@en-GB ;
    ] ;

    # Definition must exist in UK English
    sh:property [
        sh:path skos:definition ;
        sh:minCount 1 ;
        sh:languageIn ("en-GB" "en") ;
        sh:message "Definition must exist in UK English (en-GB) or English (en)"@en-GB ;
    ] ;

    # If additional language versions exist, they must have valid language tags
    sh:property [
        sh:path skos:prefLabel ;
        sh:languageIn ("en" "en-GB" "en-US" "fr" "de" "es" "it" "ja" "zh" "ar" "ru") ;
        sh:severity sh:Info ;
        sh:message "Language tags should use standard BCP 47 language codes"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 13: Deprecation and Versioning Shape
# ==============================================================================
# Purpose: Validates proper deprecation and versioning:
# - Deprecated concepts must have replacement information
# - Version information should be tracked
# ==============================================================================

ai:DeprecationVersioning-Shape
    a sh:NodeShape ;
    sh:targetClass owl:DeprecatedClass ;
    rdfs:label "Deprecation and Versioning Shape"@en-GB ;
    rdfs:comment "Ensures deprecated concepts provide clear migration paths and version information."@en-GB ;

    # Deprecated concept must have replacement information
    sh:property [
        sh:path dcterms:isReplacedBy ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:message "Deprecated concept must specify replacement concept (dcterms:isReplacedBy)"@en-GB ;
    ] ;

    # Deprecated concept should have deprecation note
    sh:property [
        sh:path owl:deprecated ;
        sh:hasValue true ;
        sh:message "Deprecated concept must have owl:deprecated set to true"@en-GB ;
    ] ;

    # Version information
    sh:property [
        sh:path owl:versionInfo ;
        sh:datatype xsd:string ;
        sh:severity sh:Warning ;
        sh:message "Consider adding version information for deprecated concepts"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 14: High-Risk AI System Shape
# ==============================================================================
# Purpose: Special validation for high-risk AI systems per EU AI Act:
# - Enhanced documentation requirements
# - Risk assessment information
# - Compliance markers
# ==============================================================================

ai:HighRiskAISystem-Shape
    a sh:NodeShape ;
    sh:target [
        a sh:SPARQLTarget ;
        sh:prefixes [
            sh:prefix "ai" ;
            sh:namespace "http://metaverse-ontology.org/ai-grounded#"^^xsd:anyURI ;
        ] ;
        sh:select """
            SELECT ?this
            WHERE {
                ?this ai:eu-ai-act-risk-level "High Risk" .
            }
        """ ;
    ] ;
    rdfs:label "High-Risk AI System Validation Shape"@en-GB ;
    rdfs:comment "Applies enhanced validation requirements for high-risk AI systems per EU AI Act."@en-GB ;

    # High-risk concepts must have risk assessment documentation
    sh:property [
        sh:path ai:risk-assessment ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:minLength 100 ;
        sh:message "High-risk AI concepts must include comprehensive risk assessment documentation (minimum 100 characters)"@en-GB ;
    ] ;

    # High-risk concepts must have mitigation strategies
    sh:property [
        sh:path ai:risk-mitigation ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:minLength 50 ;
        sh:message "High-risk AI concepts must document risk mitigation strategies"@en-GB ;
    ] ;

    # High-risk concepts must have compliance documentation
    sh:property [
        sh:path ai:compliance-requirements ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "High-risk AI concepts must document specific compliance requirements"@en-GB ;
    ] ;

    # Enhanced source citation requirement (minimum 5 for high-risk)
    sh:property [
        sh:path dcterms:source ;
        sh:minCount 5 ;
        sh:message "High-risk AI concepts must have at least 5 authoritative sources"@en-GB ;
    ] .

# ==============================================================================
# SHAPE 15: Technical Specification Shape
# ==============================================================================
# Purpose: Validates technical specifications for implementable concepts:
# - Algorithm specifications
# - Performance metrics
# - Implementation constraints
# ==============================================================================

ai:TechnicalSpecification-Shape
    a sh:NodeShape ;
    sh:targetClass owl:Class ;
    rdfs:label "Technical Specification Validation Shape"@en-GB ;
    rdfs:comment "Validates technical specifications for implementable AI concepts."@en-GB ;

    # Algorithm specification (when applicable)
    sh:property [
        sh:path ai:algorithm-specification ;
        sh:datatype xsd:string ;
        sh:severity sh:Info ;
        sh:message "Consider adding algorithm specification for implementable concepts"@en-GB ;
    ] ;

    # Performance metrics (when applicable)
    sh:property [
        sh:path ai:performance-metrics ;
        sh:datatype xsd:string ;
        sh:severity sh:Info ;
        sh:message "Consider documenting expected performance metrics for measurable concepts"@en-GB ;
    ] ;

    # Computational complexity (when applicable)
    sh:property [
        sh:path ai:computational-complexity ;
        sh:datatype xsd:string ;
        sh:pattern "^O\\([^)]+\\)$" ;
        sh:severity sh:Info ;
        sh:message "Computational complexity should use Big-O notation: O(n), O(log n), etc."@en-GB ;
    ] .

# ==============================================================================
# End of AI Grounded Ontology SHACL Shapes
# ==============================================================================
#
# Usage Instructions:
# -------------------
# 1. Load this file into a SHACL validator (e.g., Apache Jena, TopBraid, pySHACL)
# 2. Validate ontology files against these shapes:
#    - Command line: shacl validate --shapes AI-SHACL.ttl --data your-ontology.ttl
#    - Python: pyshacl.validate(data_graph, shacl_graph=shapes_graph)
# 3. Review validation reports for violations, warnings, and informational messages
# 4. Severity levels:
#    - sh:Violation: Must be fixed (structural requirements)
#    - sh:Warning: Should be addressed (best practices)
#    - sh:Info: Optional enhancements (quality improvements)
#
# Validation Report Example:
# --------------------------
# The validator will produce reports with:
# - Focus node: The subject being validated
# - Result path: The property being checked
# - Message: Human-readable explanation
# - Severity: Violation, Warning, or Info
# - Source shape: Which shape detected the issue
#
# Maintenance:
# ------------
# - Update shapes as ontology requirements evolve
# - Add new shapes for emerging AI standards
# - Version control all changes to validation rules
# - Test shapes against sample valid and invalid data
#
# ==============================================================================
