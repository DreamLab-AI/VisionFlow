services:
  webxr:
    container_name: visionflow_container
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        CUDA_ARCH: ${CUDA_ARCH:-86}
    volumes:
      # Dev mounts disabled - using baked image with fixed code
      # - ./client:/app/client
      # - ./src:/app/src
      # - ./Cargo.toml:/app/Cargo.toml
      - ./data/markdown:/app/data/markdown
      - ./data/metadata:/app/data/metadata
      - ./data/user_settings:/app/user_settings
      # - ./data/settings.yaml:/app/settings.yaml  # Commented: Already in image, mount conflicts
      # - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro # Commented: Already in image
      - ./logs/nginx:/var/log/nginx # Mount nginx logs to host
      - ./logs:/app/logs
      # - ./scripts/dev-exec-proxy.sh:/usr/local/bin/dev-exec:ro # Commented: Already in image
      # - ./scripts/check-rust-rebuild.sh:/app/scripts/check-rust-rebuild.sh:ro # Commented: Already in image
      # - ./scripts/dev-rebuild-rust.sh:/app/scripts/dev-rebuild-rust.sh:ro # Commented: Already in image
      # - ./supervisord.dev.conf:/app/supervisord.dev.conf:ro # Commented: Already in image
      - /var/run/docker.sock:/var/run/docker.sock:ro # Docker socket for controlled access
      - npm-cache:/root/.npm
      - cargo-cache:/root/.cargo/registry
      - cargo-git-cache:/root/.cargo/git
      - cargo-target-cache:/app/target # Cache Rust build artifacts
    env_file:
      - .env
    environment:
      - NVIDIA_VISIBLE_DEVICES=0  # Use GPU 0 (RTX A6000)
      - CUDA_ARCH=${CUDA_ARCH:-86} # Pass CUDA architecture for runtime PTX compilation (86 for RTX A6000)
      # RUST_LOG is now inherited from the .env file via env_file directive
      - VITE_DEBUG=${DEBUG_ENABLED:-true} # Pass master debug switch to frontend
      - NODE_ENV=development
      - DOCKER_ENV=true # Tell Vite it's running in Docker, Nginx handles proxying
      - VITE_DEV_SERVER_PORT=5173 # Internal Vite port, accessed via Nginx
      - VITE_API_PORT=4000
      - VITE_HMR_PORT=24678 # Internal HMR port, accessed via Nginx
      - RUST_LOG_REDIRECT=true
      # Override the port from settings.yaml for development environment
      # Ensure Rust backend listens on 4000, which Vite proxies to.
      - SYSTEM_NETWORK_PORT=4000
      # Claude Flow MCP WebSocket configuration
      - CLAUDE_FLOW_HOST=multi-agent-container
      - CLAUDE_FLOW_PORT=3002
      # MCP Orchestrator configuration (optional - will use mock data if not available)
      - ORCHESTRATOR_WS_URL=ws://mcp-orchestrator:9001/ws
      - MCP_RELAY_FALLBACK_TO_MOCK=true
      # Set BOTS_ORCHESTRATOR_URL to non-existent to trigger mock data
      - BOTS_ORCHESTRATOR_URL=ws://multi-agent-container:3002
    deploy: # Indentation: 4 spaces
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [compute,utility]
              device_ids: ['0']
    ports: # Indentation: 4 spaces
      # Expose only Nginx port 3001 to the host.
      # Other services (Vite 5173, Rust 4000, HMR 24678) are accessed via Nginx proxy.
      - "3001:3001"  # Nginx entry point
    networks: # Indentation: 4 spaces
      - docker_ragflow

networks: # Indentation: 2 spaces
  docker_ragflow:
    external: true

volumes: # Indentation: 2 spaces
  npm-cache:
  cargo-cache:
  cargo-git-cache:
  cargo-target-cache:
