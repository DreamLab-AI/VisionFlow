// This file is automatically generated based on data/settings.yaml and client/src/features/settings/config/settings.ts
// Do not modify this file directly. Instead, update the YAML file or the TypeScript interfaces.

import { Settings, GraphSettings } from './settings';

// Helper function to create default graph settings
const createDefaultGraphSettings = (colorTheme: 'blue' | 'green'): GraphSettings => {
  const colors = {
    blue: {
      nodeColor: "#0008ff",
      edgeColor: "#56b6c2",
      labelColor: "#f8f8f2",
      labelOutlineColor: "#181c28"
    },
    green: {
      nodeColor: "#00ff88",
      edgeColor: "#7ec850",
      labelColor: "#e8f8e2",
      labelOutlineColor: "#182818"
    }
  };

  const theme = colors[colorTheme];
  
  return {
    nodes: {
      baseColor: theme.nodeColor,
      metalness: 0.63,
      opacity: 0.65,
      roughness: 0.73,
      nodeSize: 0.1,
      quality: "medium",
      enableInstancing: false,
      enableHologram: true,
      enableMetadataShape: false,
      enableMetadataVisualisation: false,
    },
    edges: {
      arrowSize: 0.02,
      baseWidth: 0.1,
      color: theme.edgeColor,
      enableArrows: false,
      opacity: 0.25,
      widthRange: [0.1, 1.0],
      quality: "medium",
      enableFlowEffect: true,
      flowSpeed: 1,
      flowIntensity: 0.6,
      glowStrength: 1,
      distanceIntensity: 1,
      useGradient: true,
      gradientColors: ["#ffffff", "#000000"],
    },
    labels: {
      desktopFontSize: 0.2,
      enableLabels: true,
      textColor: theme.labelColor,
      textOutlineColor: theme.labelOutlineColor,
      textOutlineWidth: 0.01,
      textResolution: 32,
      textPadding: 0.6,
      billboardMode: "camera",
    },
    physics: {
      attractionStrength: 0.05,
      boundsSize: 15.0,
      collisionRadius: 0.5,
      damping: 0.95,
      enableBounds: true,
      enabled: true,
      iterations: 100,
      maxVelocity: 0.02,
      repulsionStrength: 0.1,
      springStrength: 0.2,
      repulsionDistance: 2.0,
      massScale: 1.0,
      boundaryDamping: 0.95,
      updateThreshold: 0.05,
    },
  };
};

export const defaultSettings: Settings = {
  visualisation: {
    // Graph-specific settings with different themes
    graphs: {
      logseq: createDefaultGraphSettings('blue'),
      visionflow: createDefaultGraphSettings('green'),
    },
    rendering: {
      ambientLightIntensity: 0.8, // From JSON (camelCase, was 1.65)
      backgroundColor: "#181c28", // From JSON (camelCase, was #000000)
      directionalLightIntensity: 0.7, // From JSON (camelCase, was 1.3)
      enableAmbientOcclusion: false,
      enableAntialiasing: false, // From JSON (camelCase, was true)
      enableShadows: false, // From JSON (camelCase, was true)
      environmentIntensity: 0.7,
      shadowMapSize: "2048",
      shadowBias: 0.0001,
      context: "desktop",
      // pixelRatio: 1.5, // Removed, does not exist in RenderingSettings
      // enableBloom: true, // Removed, not in RenderingSettings. Use visualisation.bloom.enabled
      // bloomStrength: 1.5, // Removed, not in RenderingSettings
      // bloomThreshold: 0.4, // Removed, not in RenderingSettings
      // bloomRadius: 0.85, // Removed, not in RenderingSettings
    },
    animations: {
      enableMotionBlur: false,
      enableNodeAnimations: false,
      motionBlurStrength: 0.2,
      selectionWaveEnabled: false,
      pulseEnabled: false,
      pulseSpeed: 0.8,
      pulseStrength: 0.6,
      waveSpeed: 0.5,
    },
    bloom: { // This section is for visualisation.bloom specific settings
      edgeBloomStrength: 0.4, // From JSON (camelCase, was 2.8)
      enabled: true, // From JSON (camelCase)
      environmentBloomStrength: 2.0, // From JSON (camelCase, was 3.8)
      nodeBloomStrength: 3.0, // From JSON (camelCase, was 1.5)
      radius: 0.4,
      strength: 1.77,
      threshold: 0.06,
    },
    hologram: {
      ringCount: 1, // From JSON (camelCase, was 3)
      ringColor: "#c2a200", // From JSON (camelCase, was #ffffff)
      ringOpacity: 0.001, // From JSON (camelCase, was 1)
      sphereSizes: [4, 8], // From JSON (camelCase, was [40.5, 80])
      ringRotationSpeed: 10.0, // From JSON (camelCase, was 12)
      enableBuckminster: false,
      buckminsterSize: 10,
      buckminsterOpacity: 0.05,
      enableGeodesic: false,
      geodesicSize: 10,
      geodesicOpacity: 0.05,
      enableTriangleSphere: false, // From JSON (camelCase, was true)
      triangleSphereSize: 10, // From JSON (camelCase, was 60)
      triangleSphereOpacity: 0.05, // From JSON (camelCase, was 0.3)
      globalRotationSpeed: 3.0, // From JSON (camelCase, was 0.2)
      // color: 65535, // Removed, does not exist in HologramSettings
      // opacity: 0.7, // Removed, not in HologramSettings
    },
    camera: {
      fov: 75,
      near: 0.1,
      far: 2000,
      position: { x: 0, y: 10, z: 50 },
      lookAt: { x: 0, y: 0, z: 0 },
    },
    // sceneBackground: 0, // Removed, not in VisualisationSettings
    // icons: { // Removed, not in VisualisationSettings
    //   enabled: true,
    //   size: 1,
    //   opacity: 0.8,
    //   color: "#ffffff",
    // },
    // metrics: { // Removed, not in VisualisationSettings
    //   enabled: false,
    //   refreshRate: 1000,
    //   position: "top-right",
    // },
    // showStats: false, // Removed, not in VisualisationSettings; likely controlled by system.debug.enablePerformanceDebug
    // showAxes: false, // Removed, not in VisualisationSettings
    // showGrid: false, // Removed, not in VisualisationSettings
  },
  system: {
    websocket: {
      binaryChunkSize: 2048,
      binaryUpdateRate: 30,
      minUpdateRate: 5,
      maxUpdateRate: 60,
      motionThreshold: 0.05,
      motionDamping: 0.9,
      binaryMessageVersion: 1,
      compressionEnabled: false,
      compressionThreshold: 512,
      heartbeatInterval: 10000,
      heartbeatTimeout: 600000, // Added from JSON
      maxConnections: 100,
      maxMessageSize: 10485760, // Added from JSON
      reconnectAttempts: 5, // Added from JSON (was not present before under websocket)
      reconnectDelay: 1000, // Added from JSON (was not present before under websocket)
      updateRate: 60,
      // reconnectInterval: 2000, // Removed, does not exist in WebSocketSettings
      // maxReconnectAttempts: 10, // Removed, not in WebSocketSettings. 'reconnectAttempts' is used.
    },
    debug: {
      enabled: false,
      enableDataDebug: false,
      enableWebsocketDebug: false,
      logBinaryHeaders: false,
      logFullJson: false,
      logLevel: "info", // From JSON (camelCase, was 'warn')
      logFormat: "text", // From JSON (camelCase, was 'json')
      enablePhysicsDebug: false,
      enableNodeDebug: false,
      enableShaderDebug: false,
      enableMatrixDebug: false,
      enablePerformanceDebug: false,
      // showPerformance: false, // Removed, does not exist in DebugSettings
      // showDataUpdates: false, // Removed, not in DebugSettings
    },
    persistSettings: false, // From JSON (camelCase, was true)
    customBackendUrl: "",
    // apiEndpoint: "/api", // Removed, not in SystemSettings type
  },
  xr: {
    enabled: false, // Changed from null to boolean based on type
    clientSideEnableXR: false,
    displayMode: "immersive-vr", // From JSON (camelCase, was 'inline')
    roomScale: 1.0, // Changed from true to 1.0 based on type
    spaceType: "local-floor",
    quality: "medium",
    enableHandTracking: true,
    handMeshEnabled: true,
    handMeshColor: "#4287f5",
    handMeshOpacity: 0.3,
    handPointSize: 0.006,
    handRayEnabled: true,
    handRayColor: "#4287f5",
    handRayWidth: 0.003,
    gestureSmoothing: 0.7,
    enableHaptics: true,
    hapticIntensity: 0.3,
    dragThreshold: 0.08,
    pinchThreshold: 0.3,
    rotationThreshold: 0.08,
    interactionRadius: 0.15,
    movementSpeed: 1.0, // From JSON (camelCase, was 0.08)
    deadZone: 0.12,
    movementAxesHorizontal: 2, // From JSON (camelCase, was movementAxes: {horizontal: 2, vertical: 3})
    movementAxesVertical: 3,   // From JSON (camelCase, was movementAxes: {horizontal: 2, vertical: 3})
    enableLightEstimation: false,
    enablePlaneDetection: false,
    enableSceneUnderstanding: false,
    planeColor: "#4287f5",
    planeOpacity: 0.001,
    planeDetectionDistance: 3.0,
    showPlaneOverlay: false,
    snapToFloor: false,
    enablePassthroughPortal: false,
    passthroughOpacity: 0.8,
    passthroughBrightness: 1.1,
    passthroughContrast: 1.2,
    portalSize: 2.5,
    portalEdgeColor: "#4287f5",
    portalEdgeWidth: 0.02,
    controllerModel: "default",
    renderScale: 1.0,
    interactionDistance: 1.5, // From JSON (camelCase, was 1.0)
    locomotionMethod: "teleport",
    teleportRayColor: "#ffffff",
    controllerRayColor: "#ffffff",
    // handTracking: true, // Duplicate of enableHandTracking
    // mode: "inline", // Duplicate of displayMode
    // teleportEnabled: true, // Removed, not in XRSettings
    // showFloor: true, // Removed, not in XRSettings
    // handInteraction: true, // Removed, not in XRSettings
    // grabThreshold: 0.1, // Removed, not in XRSettings
    // controllerPointerSize: 0.01, // Removed, not in XRSettings
    // hapticFeedback: true, // Duplicate of enableHaptics
  },
  auth: {
    enabled: true, // From JSON (camelCase, was false)
    provider: "nostr", // From JSON (camelCase, was '')
    required: false,
  },
  ragflow: {
    agentId: "aa2e328812ef11f083dc0a0d6226f61b",
    timeout: 30,
    maxRetries: 3,
    chatId: "",
  },
  perplexity: {
    apiKey: "",
    model: "llama-3.1-sonar-small-128k-online",
    apiUrl: "",
    maxTokens: 4096,
    temperature: 0.5,
    topP: 0.9,
    presencePenalty: 0.0,
    frequencyPenalty: 0.0,
    timeout: 30,
    rateLimit: 100,
  },
  openai: {
    apiKey: "",
    baseUrl: "",
    timeout: 30,
    rateLimit: 100,
  },
  kokoro: {
    apiUrl: "http://pedantic_morse:8880",
    defaultVoice: "af_heart",
    defaultFormat: "mp3",
    defaultSpeed: 1.0,
    timeout: 30,
    stream: true,
    returnTimestamps: true,
    sampleRate: 24000,
  },
};