# Vircadia Multi-User XR Service
# Usage: docker-compose -f docker-compose.yml -f docker-compose.vircadia.yml --profile dev up

services:
  vircadia-world-server:
    image: ghcr.io/vircadia/vircadia-world-server:latest
    container_name: vircadia-world-server
    hostname: vircadia-world-server
    environment:
      # Server Configuration
      - WORLD_SERVER_HOST=0.0.0.0
      - WORLD_SERVER_PORT=3020
      - WORLD_SERVER_WS_PATH=/world/ws

      # Database Configuration
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=vircadia_world
      - DB_USER=${POSTGRES_USER:-visionflow}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-visionflow_secure}

      # Authentication
      - ENABLE_AUTH=true
      - AUTH_PROVIDERS=system,nostr
      - JWT_SECRET=${VIRCADIA_JWT_SECRET:-change_this_in_production}
      - SESSION_TIMEOUT=86400

      # Multi-User Settings
      - MAX_USERS_PER_WORLD=50
      - ENTITY_SYNC_INTERVAL=50
      - POSITION_SYNC_INTERVAL=50

      # Performance Tuning
      - ENABLE_SPATIAL_INDEXING=true
      - ENABLE_LOD=true
      - ENABLE_INTEREST_MANAGEMENT=true
      - MAX_ENTITIES_PER_USER=1000

      # Logging
      - LOG_LEVEL=info
      - ENABLE_METRICS=true

    ports:
      - "3020:3020"  # WebSocket API
      - "3021:3021"  # HTTP API (optional)

    networks:
      docker_ragflow:
        aliases:
          - vircadia-world-server

    volumes:
      - vircadia-data:/app/data
      - vircadia-logs:/app/logs
      - ./data/vircadia/worlds:/app/worlds:ro
      - ./sdk:/sdk:ro

    depends_on:
      - postgres

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3021/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL database (if not already defined)
  postgres:
    profiles: ["dev", "vircadia"]
    image: postgres:15-alpine
    container_name: visionflow_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-visionflow}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-visionflow_secure}
      - POSTGRES_DB=visionflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-vircadia-db.sql:/docker-entrypoint-initdb.d/10-vircadia.sql:ro
    ports:
      - "5432:5432"
    networks:
      - docker_ragflow
    restart: unless-stopped

networks:
  docker_ragflow:
    external: true

volumes:
  vircadia-data:
    driver: local
  vircadia-logs:
    driver: local
  postgres-data:
    driver: local
