# CachyOS Workstation for Agentic Flow Development
# Standalone version - installs agentic-flow from npm
# Usage: docker exec -it agentic-flow-cachyos zsh

FROM archlinux:latest

# ===== System Packages =====
RUN pacman -Syu --noconfirm && \
    pacman -S --noconfirm \
        base-devel git vim nano \
        zsh curl wget \
        nodejs npm \
        python python-pip \
        xfce4-terminal xorg-server xorg-xinit \
        tigervnc xfce4 xfce4-goodies \
        jq htop ripgrep fd openssh \
    && rm -rf /var/cache/pacman/pkg/*

# ===== Create development user =====
RUN useradd -m -G wheel,video,audio -s /usr/bin/zsh devuser && \
    echo "devuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    mkdir -p /home/devuser/{workspace,models,.config,.cache,logs}

# Switch to development user
USER devuser
WORKDIR /home/devuser

# ===== Install Oh-My-Zsh =====
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# ===== Install agentic-flow from npm =====
USER root
RUN npm install -g agentic-flow@latest pm2 gemini-flow @anthropic-ai/claude-code

# ===== Install Management API =====
COPY --chown=devuser:devuser management-api/package*.json /home/devuser/management-api/
WORKDIR /home/devuser/management-api
RUN npm install --production

COPY --chown=devuser:devuser management-api/ /home/devuser/management-api/
RUN chmod +x /home/devuser/management-api/server.js

# Fix ownership and prepare directories
RUN chown -R devuser:devuser /home/devuser && \
    mkdir -p /app/core-assets

# ===== Copy core assets =====
COPY --chown=devuser:devuser core-assets/ /app/core-assets/

# Switch back to devuser
USER devuser
WORKDIR /home/devuser

# ===== Setup workspace and config =====
RUN mkdir -p ~/workspace ~/models ~/.config/{agentic-flow,claude} ~/.claude-flow/{memory,metrics} ~/.gemini-flow/{swarms,protocols,monitoring}

# ===== Copy configuration files =====
COPY --chown=devuser:devuser config/.zshrc /home/devuser/.zshrc
COPY --chown=devuser:devuser config/router.config.json /home/devuser/.config/agentic-flow/
COPY --chown=devuser:devuser config/mcp.json /home/devuser/.config/claude/mcp.json
COPY --chown=devuser:devuser config/gemini-flow.config.ts /home/devuser/.gemini-flow/production.config.ts

# ===== Install helper scripts =====
COPY --chown=devuser:devuser scripts/ /home/devuser/scripts/
RUN chmod +x /home/devuser/scripts/*.sh

USER root
RUN ln -sf /home/devuser/scripts/mcp-cli.sh /usr/local/bin/mcp && \
    chmod +x /home/devuser/scripts/claude-wrapper.sh && \
    chmod +x /home/devuser/scripts/dsp.sh && \
    ln -sf /home/devuser/scripts/claude-wrapper.sh /usr/local/bin/claude-safe && \
    ln -sf /home/devuser/scripts/dsp.sh /usr/local/bin/dsp
USER devuser

# ===== X11 and Desktop configuration =====
RUN mkdir -p ~/.config/xfce4/xfconf/xfce-perchannel-xml ~/.config/autostart && \
    echo '[Desktop Entry]\nType=Application\nName=Disable Screensaver\nHidden=true' > ~/.config/autostart/xfce4-screensaver.desktop && \
    echo '[Desktop Entry]\nType=Application\nName=Disable Power Manager\nHidden=true' > ~/.config/autostart/xfce4-power-manager.desktop && \
    mkdir -p ~/.config/xfce4/xfconf/xfce-perchannel-xml && \
    echo '<?xml version="1.0" encoding="UTF-8"?>\n<channel name="xfce4-screensaver" version="1.0">\n  <property name="saver" type="empty">\n    <property name="enabled" type="bool" value="false"/>\n    <property name="mode" type="int" value="0"/>\n  </property>\n  <property name="lock" type="empty">\n    <property name="enabled" type="bool" value="false"/>\n  </property>\n</channel>' > ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-screensaver.xml && \
    echo '<?xml version="1.0" encoding="UTF-8"?>\n<channel name="xfce4-power-manager" version="1.0">\n  <property name="xfce4-power-manager" type="empty">\n    <property name="blank-on-ac" type="int" value="0"/>\n    <property name="blank-on-battery" type="int" value="0"/>\n    <property name="dpms-enabled" type="bool" value="false"/>\n    <property name="dpms-on-ac-off" type="uint" value="0"/>\n    <property name="dpms-on-ac-sleep" type="uint" value="0"/>\n    <property name="dpms-on-battery-off" type="uint" value="0"/>\n    <property name="dpms-on-battery-sleep" type="uint" value="0"/>\n    <property name="lock-screen-suspend-hibernate" type="bool" value="false"/>\n  </property>\n</channel>' > ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-power-manager.xml

# ===== Install Python virtual environment and supervisord =====
USER root
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip supervisor \
    google-generativeai \
    youtube_transcript_api \
    httpx \
    google-api-python-client

# ===== Install supervisord configuration =====
COPY --chown=root:root config/supervisord.conf /etc/supervisord.conf

# ===== Environment defaults =====
USER devuser
ENV SHELL=/usr/bin/zsh \
    TERM=xterm-256color \
    DISPLAY=:1 \
    ENABLE_DESKTOP=true \
    ENABLE_CODE_SERVER=true \
    ENABLE_GEMINI=true \
    ENABLE_OPENAI=true \
    ENABLE_CLAUDE=true \
    ENABLE_OPENROUTER=true \
    ROUTER_MODE=performance \
    WORKSPACE=/home/devuser/workspace \
    GPU_ACCELERATION=true \
    MCP_AUTO_START=true \
    GEMINI_FLOW_ENABLED=true \
    GEMINI_FLOW_PROTOCOLS=a2a,mcp \
    GEMINI_FLOW_TOPOLOGY=hierarchical \
    GEMINI_FLOW_MAX_AGENTS=66

# ===== Startup scripts =====
USER root
COPY --chown=devuser:devuser scripts/init-workstation.sh /home/devuser/
COPY --chown=root:root scripts/entrypoint.sh /entrypoint.sh
RUN chmod +x /home/devuser/init-workstation.sh && \
    chmod +x /entrypoint.sh

# ===== Expose ports =====
# 5901: VNC, 8080: code-server, 9090: Management API, 3000: dev server
EXPOSE 5901 8080 9090 3000

# ===== Volume mount points =====
VOLUME ["/home/devuser/workspace", "/home/devuser/models", "/home/devuser/.claude-flow", "/home/devuser/.config", "/home/devuser/logs"]

# ===== Start with entrypoint =====
USER root
ENTRYPOINT ["/entrypoint.sh"]
