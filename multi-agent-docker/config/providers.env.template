# Agentic Flow CachyOS Workstation - Provider Configuration Template
# Copy this file to .env and fill in your API keys

# =============================================================================
# REQUIRED API KEYS (at least one provider)
# =============================================================================

# Anthropic Claude (highest quality, best for complex tasks)
# Get key: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-api03-...

# OpenAI (GPT-4o, excellent quality)
# Get key: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-...

# Google Gemini (fast, cost-effective, 1M token context)
# Get key: https://aistudio.google.com/app/apikey
GOOGLE_GEMINI_API_KEY=AIza...

# OpenRouter (99% cost savings, 100+ models)
# Get key: https://openrouter.ai/keys
OPENROUTER_API_KEY=sk-or-v1-...

# =============================================================================
# OPTIONAL KEYS
# =============================================================================

# E2B Sandboxes (for cloud code execution)
# Get key: https://e2b.dev/
E2B_API_KEY=e2b_...

# =============================================================================
# GEMINI-FLOW ORCHESTRATION (66-Agent Swarms)
# =============================================================================

# Google Cloud Project (for Gemini-Flow services)
# Get from: https://console.cloud.google.com/
GOOGLE_CLOUD_PROJECT=your-project-id

# Google API Key (for Gemini-Flow AI services & web-summary tool)
# Get key: https://console.cloud.google.com/apis/credentials
GOOGLE_API_KEY=AIza...

# Z.AI API Key (for semantic topic matching in web-summary tool)
# Get from: https://z.ai/
ZAI_API_KEY=your_z_ai_api_key_here

# Google Application Credentials (service account)
# Path to service account JSON file
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# =============================================================================
# PROVIDER CONFIGURATION
# =============================================================================

# Primary provider (used when no specific provider is requested)
# Options: gemini | openai | anthropic | openrouter | xinference | onnx
PRIMARY_PROVIDER=gemini

# Fallback chain (comma-separated, tried in order)
FALLBACK_CHAIN=gemini,openai,claude,openrouter,xinference,onnx

# =============================================================================
# ROUTER CONFIGURATION
# =============================================================================

# Router mode (how to select models)
# Options: performance | cost | quality | balanced | offline
ROUTER_MODE=performance

# Enable automatic optimization
AUTO_OPTIMIZE=true

# Cost limits (dollars)
DAILY_BUDGET=10.0
WEEKLY_BUDGET=50.0
MONTHLY_BUDGET=200.0

# =============================================================================
# PROVIDER BASE URLS (usually don't need to change)
# =============================================================================

# Xinference (local via RAGFlow network)
XINFERENCE_BASE_URL=http://172.18.0.11:9997/v1

# Cloud APIs
ANTHROPIC_BASE_URL=https://api.anthropic.com/v1
OPENAI_BASE_URL=https://api.openai.com/v1
GEMINI_BASE_URL=https://generativelanguage.googleapis.com/v1beta
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable providers
ENABLE_GEMINI=true
ENABLE_OPENAI=true
ENABLE_CLAUDE=true
ENABLE_OPENROUTER=true
ENABLE_XINFERENCE=true
ENABLE_ONNX=true

# Gemini-Flow orchestration
GEMINI_FLOW_ENABLED=true
GEMINI_FLOW_PROTOCOLS=a2a,mcp
GEMINI_FLOW_TOPOLOGY=hierarchical
GEMINI_FLOW_MAX_AGENTS=66

# =============================================================================
# AGENT CONFIGURATION
# =============================================================================

# Agents directory
AGENTS_DIR=/home/devuser/.claude/agents

# MCP servers
MCP_AUTO_START=true

# Memory and persistence
ENABLE_MEMORY=true
MEMORY_TTL=86400

# Logging
LOG_LEVEL=info
ENABLE_STREAMING=true
ENABLE_LOGGING=true

# =============================================================================
# GPU CONFIGURATION
# =============================================================================

# Enable GPU acceleration
GPU_ACCELERATION=true

# CUDA device visibility (all | 0,1,2,... | none)
CUDA_VISIBLE_DEVICES=all

# ONNX execution provider
# Options: cuda | cpu | rocm | dml
ONNX_EXECUTION_PROVIDER=cuda

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================

# Node environment
NODE_ENV=production

# Timezone
TZ=UTC

# Display (for GUI apps)
DISPLAY=:0

# Workspace directory
WORKSPACE=/home/devuser/workspace

# =============================================================================
# ADVANCED OPTIONS
# =============================================================================

# Model-specific overrides
GEMINI_MODEL=gemini-2.5-flash
OPENAI_MODEL=gpt-4o
CLAUDE_MODEL=claude-3-5-sonnet-20241022
OPENROUTER_MODEL=meta-llama/llama-3.1-8b-instruct

# Performance tuning
MAX_CONCURRENT_REQUESTS=5
REQUEST_TIMEOUT=60000
MAX_RETRIES=3

# Rate limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# Circuit breaker
CIRCUIT_BREAKER_ENABLED=true
CIRCUIT_BREAKER_THRESHOLD=5
CIRCUIT_BREAKER_TIMEOUT=60000
