# CachyOS Workstation for Agentic Flow Development
# Simplified architecture with stdio-based MCP tools
# Usage: docker exec -it agentic-flow-cachyos zsh

FROM archlinux:latest

# ===== System Packages =====
RUN pacman -Syu --noconfirm && \
    pacman -S --noconfirm \
        base-devel git vim nano \
        zsh curl wget \
        nodejs npm \
        python python-pip \
        xfce4-terminal xorg-server xorg-xinit \
        tigervnc xfce4 xfce4-goodies \
        jq htop ripgrep fd openssh \
    && rm -rf /var/cache/pacman/pkg/*

# ===== Create development user =====
RUN useradd -m -G wheel,video,audio -s /usr/bin/zsh devuser && \
    echo "devuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    mkdir -p /home/devuser/{workspace,models,.config,.cache,logs}

# Switch to development user
USER devuser
WORKDIR /home/devuser

# ===== Install Oh-My-Zsh =====
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# ===== Optimize layer caching: Install dependencies first =====
COPY --chown=devuser:devuser agentic-flow/package*.json /tmp/agentic-flow/
WORKDIR /tmp/agentic-flow
RUN npm install && npm cache clean --force

# ===== Copy source and build =====
COPY --chown=devuser:devuser agentic-flow/ /tmp/agentic-flow/
RUN npm run build 2>/dev/null || echo "Build step skipped"

# ===== Install agentic-flow globally as root =====
USER root
RUN cd /tmp/agentic-flow && npm install -g .

# ===== Create symlinks for devDependencies binaries =====
RUN ln -sf /tmp/agentic-flow/node_modules/.bin/pm2 /usr/local/bin/pm2 && \
    ln -sf /tmp/agentic-flow/node_modules/.bin/gemini-flow /usr/local/bin/gemini-flow && \
    ln -sf /tmp/agentic-flow/node_modules/.bin/claude /usr/local/bin/claude

# Fix ownership and prepare directories
RUN chown -R devuser:devuser /home/devuser && \
    mkdir -p /app/core-assets /home/devuser/management-api

# ===== Copy core assets =====
COPY --chown=devuser:devuser docker/cachyos/core-assets/ /app/core-assets/

# ===== Install Management API =====
COPY --chown=devuser:devuser docker/cachyos/management-api/package*.json /home/devuser/management-api/
WORKDIR /home/devuser/management-api
RUN npm install --production

COPY --chown=devuser:devuser docker/cachyos/management-api/ /home/devuser/management-api/
RUN chmod +x /home/devuser/management-api/server.js

# Switch back to devuser
USER devuser
WORKDIR /home/devuser

# ===== Setup workspace and config =====
RUN mkdir -p ~/workspace ~/models ~/.config/{agentic-flow,claude} ~/.claude-flow/{memory,metrics} ~/.gemini-flow/{swarms,protocols,monitoring}

# ===== Copy configuration files =====
COPY --chown=devuser:devuser docker/cachyos/config/.zshrc /home/devuser/.zshrc
COPY --chown=devuser:devuser docker/cachyos/config/router.config.json /home/devuser/.config/agentic-flow/
COPY --chown=devuser:devuser docker/cachyos/config/mcp.json /home/devuser/.config/claude/mcp.json
COPY --chown=devuser:devuser docker/cachyos/config/gemini-flow.config.ts /home/devuser/.gemini-flow/production.config.ts

# ===== Install helper scripts =====
COPY --chown=devuser:devuser docker/cachyos/scripts/ /home/devuser/scripts/
RUN chmod +x /home/devuser/scripts/*.sh

USER root
RUN ln -sf /home/devuser/scripts/mcp-cli.sh /usr/local/bin/mcp
USER devuser

# ===== X11 and Desktop configuration =====
RUN mkdir -p ~/.config/xfce4/xfconf/xfce-perchannel-xml ~/.config/autostart && \
    echo '[Desktop Entry]\nHidden=true' > ~/.config/autostart/xfce4-screensaver.desktop

# ===== Install Python virtual environment and supervisord =====
USER root
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip supervisor websockify \
    google-generativeai \
    youtube_transcript_api \
    httpx \
    google-api-python-client && \
    mkdir -p /usr/share/novnc && \
    git clone --depth 1 https://github.com/novnc/noVNC.git /usr/share/novnc || true

# ===== Install supervisord configuration =====
COPY --chown=root:root docker/cachyos/config/supervisord.conf /etc/supervisord.conf

USER devuser

# ===== Environment defaults =====
ENV SHELL=/usr/bin/zsh \
    TERM=xterm-256color \
    DISPLAY=:1 \
    ENABLE_DESKTOP=true \
    ENABLE_CODE_SERVER=true \
    ENABLE_GEMINI=true \
    ENABLE_OPENAI=true \
    ENABLE_CLAUDE=true \
    ENABLE_OPENROUTER=true \
    ROUTER_MODE=performance \
    WORKSPACE=/home/devuser/workspace \
    GPU_ACCELERATION=true \
    MCP_AUTO_START=true \
    GEMINI_FLOW_ENABLED=true \
    GEMINI_FLOW_PROTOCOLS=a2a,mcp \
    GEMINI_FLOW_TOPOLOGY=hierarchical \
    GEMINI_FLOW_MAX_AGENTS=66

# ===== Startup script =====
COPY --chown=devuser:devuser docker/cachyos/scripts/init-workstation.sh /home/devuser/
RUN chmod +x /home/devuser/init-workstation.sh

# ===== Expose ports =====
# 8080: code-server, 6901: noVNC, 9090: Management API, 3000: dev server
EXPOSE 8080 6901 9090 3000

# ===== Volume mount points =====
VOLUME ["/home/devuser/workspace", "/home/devuser/models", "/home/devuser/.claude-flow", "/home/devuser/.config", "/home/devuser/logs"]

# ===== Start with supervisord =====
USER root
CMD ["/opt/venv/bin/supervisord", "-c", "/etc/supervisord.conf"]
