# ============================================================================
# Turbo Flow Unified - Environment Configuration
# ============================================================================
#
# SETUP: Copy this file to .env and fill in your API keys
#   cp .env.example .env
#   nano .env  # or vim, code, etc.
#
# ============================================================================

# ============================================================================
# API Keys (At least Anthropic recommended)
# ============================================================================

# Anthropic Claude (Primary - required for Claude Code CLI)
# Get your key: https://console.anthropic.com/
# This is used by Claude Code CLI for direct Anthropic API access
ANTHROPIC_API_KEY=

# Z.AI Service Configuration (optional - for cost savings)
# If you want to use Z.AI's endpoint instead of direct Anthropic:
# 1. Set ZAI_ANTHROPIC_API_KEY to your Anthropic key
# 2. Z.AI service will use the api.z.ai endpoint automatically
# 3. Leave ANTHROPIC_API_KEY for Claude CLI (uses direct Anthropic)
ZAI_ANTHROPIC_API_KEY=
ZAI_BASE_URL=https://api.z.ai/api/anthropic

# Google Gemini (for gemini-user)
# Get your key: https://aistudio.google.com/app/apikey
GOOGLE_GEMINI_API_KEY=

# OpenAI (for openai-user)
# Get your key: https://platform.openai.com/api-keys
OPENAI_API_KEY=
OPENAI_ORG_ID=

# GitHub Token (optional - for GitHub integration)
# Get your token: https://github.com/settings/tokens
GITHUB_TOKEN=

# Context7 (optional - for documentation lookup)
CONTEXT7_API_KEY=

# Brave Search (optional - for web search)
BRAVE_API_KEY=

# ============================================================================
# Z.AI Service Configuration
# ============================================================================

CLAUDE_WORKER_POOL_SIZE=4
CLAUDE_MAX_QUEUE_SIZE=50
# Z.AI API Key (for web-summary semantic topic matching)
# Get your key: https://api.z.ai/
ZAI_API_KEY=

# ============================================================================
# Management API Configuration
# ============================================================================

MANAGEMENT_API_KEY=change-this-secret-key-to-something-secure
MANAGEMENT_API_PORT=9090
MANAGEMENT_API_HOST=0.0.0.0

# ============================================================================
# GPU Configuration
# ============================================================================

GPU_ACCELERATION=true
CUDA_VISIBLE_DEVICES=all

# ============================================================================
# System Configuration
# ============================================================================

LOG_LEVEL=info
NODE_ENV=production

# ============================================================================
# Service Toggles (all enabled by default)
# ============================================================================

ENABLE_VNC=true
ENABLE_CODE_SERVER=true
ENABLE_SSH=true
ENABLE_MANAGEMENT_API=true
ENABLE_ZAI_SERVICE=true
ENABLE_GEMINI_FLOW=true
ENABLE_DESKTOP=true

# ============================================================================
# External Directory Mounts
# ============================================================================

# Mount an external project directory to /home/devuser/workspace/project
# This allows you to work on existing codebases from your host machine
# Leave empty or comment out if not needed

# Examples:
# PROJECT_DIR=/mnt/mldata/githubs/my-project
# PROJECT_DIR=~/projects/my-app
# PROJECT_DIR=${HOME}/code/my-repo

PROJECT_DIR=/mnt/mldata/githubs/AR-AI-Knowledge-Graph

# Host Claude config directory (mounted read-only to /mnt/host-claude)
# Container will copy this to ~/.claude/ on startup if present
HOST_CLAUDE_DIR=${HOME}/.claude

# ============================================================================
# Optional/Advanced Configuration
# ============================================================================

# OpenRouter (Access to 100+ models with cost savings)
# Get your key: https://openrouter.ai/keys
OPENROUTER_API_KEY=s

# E2B Sandboxes (for cloud code execution)
E2B_API_KEY=

# Google Cloud Project (for advanced Gemini-Flow features)
GOOGLE_CLOUD_PROJECT=
GOOGLE_APPLICATION_CREDENTIALS=

# Provider Configuration
PRIMARY_PROVIDER=claude
FALLBACK_CHAIN=gemini,openai,claude

# Router Configuration
ROUTER_MODE=performance
AUTO_OPTIMIZE=true
DAILY_BUDGET=10.0
WEEKLY_BUDGET=50.0
MONTHLY_BUDGET=200.0

# Gemini-Flow Configuration
GEMINI_FLOW_ENABLED=true
GEMINI_FLOW_PROTOCOLS=a2a,mcp
GEMINI_FLOW_TOPOLOGY=hierarchical
GEMINI_FLOW_MAX_AGENTS=66

# Agent Configuration
MCP_AUTO_START=true
ENABLE_MEMORY=true
MEMORY_TTL=86400
ENABLE_STREAMING=true
ENABLE_LOGGING=true

# Advanced Feature Flags
ENABLE_OPENROUTER=false
ENABLE_XINFERENCE=false
ENABLE_ONNX=false

# System Configuration
TZ=UTC

# ============================================================================
# Multi-User Architecture
# ============================================================================
#
# devuser (1000:1000)      - Primary Claude Code development
# gemini-user (1001:1001)  - Google Gemini CLI & gemini-flow
# openai-user (1002:1002)  - OpenAI Codex
# zai-user (1003:1003)     - Z.AI service (internal only)
#
# ============================================================================
# Network Configuration
# ============================================================================
#
# Joins docker_ragflow network
# Z.AI accessible only within ragflow network (port 9600)
# External ports:
#   - 2222 -> 22 (SSH)
#   - 5901 (VNC)
#   - 8080 (code-server)
#   - 9090 (Management API)
#
# ============================================================================
# Default Credentials (CHANGE IN PRODUCTION)
# ============================================================================
#
# SSH/VNC password: turboflow
# VNC password file: /home/devuser/.vnc/passwd
# Management API: X-API-Key header with MANAGEMENT_API_KEY value
#
# ============================================================================
# Available Features
# ============================================================================
#
# Skills (6):
#   - web-summary, blender, qgis, kicad, imagemagick, pbr-rendering
#   Located: /home/devuser/.claude/skills/
#
# Agents (610+):
#   - doc-planner.md, microtask-breakdown.md, etc.
#   Located: /home/devuser/agents/
#
# tmux Session:
#   - Name: workspace
#   - 8 windows: Claude-Main, Claude-Agent, Services, Development,
#                Logs, System, VNC-Status, SSH-Shell
#   - Attach: tmux attach-session -t workspace
#
# ============================================================================
# Volume Mounts
# ============================================================================
#
# Docker named volumes (persistent):
#   - workspace       -> /home/devuser/workspace
#   - agents          -> /home/devuser/agents
#   - claude-config   -> /home/devuser/.claude
#   - gemini-workspace -> /home/gemini-user/workspace
#   - openai-workspace -> /home/openai-user/workspace
#   - model-cache     -> /home/devuser/models
#   - logs            -> /var/log
#
# Host bind mounts:
#   - ${HOST_CLAUDE_DIR}  -> /mnt/host-claude (read-only)
#   - ${PROJECT_DIR}      -> /home/devuser/workspace/project (read-write)
#   - /tmp/.X11-unix      -> /tmp/.X11-unix (X11 socket)
#
# ============================================================================
