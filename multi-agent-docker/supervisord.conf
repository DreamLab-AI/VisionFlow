# Supervisor configuration for managing core background services.
# Tool servers (imagemagick, blender, etc.) are managed by claude-flow via .mcp.json.

[supervisord]
nodaemon=false
logfile=/app/mcp-logs/supervisord.log
pidfile=/workspace/.supervisor/supervisord.pid
childlogdir=/app/mcp-logs

[unix_http_server]
file=/workspace/.supervisor/supervisor.sock
chmod=0770
chown=dev:dev

[supervisorctl]
serverurl=unix:///workspace/.supervisor/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# MCP WebSocket-to-Stdio Bridge for external control systems
[program:mcp-ws-bridge]
command=npm run start-mcp-ws
autorestart=true
stdout_logfile=/app/mcp-logs/mcp-ws-bridge.log
stderr_logfile=/app/mcp-logs/mcp-ws-bridge-error.log
priority=10
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production"
startsecs=5
stopwaitsecs=10

# MCP TCP Server for TCP-based communication
[program:mcp-tcp-server]
command=npm run start-mcp-tcp
autorestart=true
stdout_logfile=/app/mcp-logs/mcp-tcp-server.log
stderr_logfile=/app/mcp-logs/mcp-tcp-server-error.log
priority=10
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production"
startsecs=5
stopwaitsecs=10

# Gemini Flow Service - AI workflow orchestration (optional - uncomment to enable)
# [program:gemini-flow-server]
# command=npm run start-gemini-flow
# autorestart=true
# stdout_logfile=/app/mcp-logs/gemini-flow.log
# stderr_logfile=/app/mcp-logs/gemini-flow-error.log
# priority=30
# user=dev
# environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",GEMINI_API_KEY="%(ENV_GEMINI_API_KEY)s",NODE_ENV="production"
# startsecs=5
# stopwaitsecs=10

# Claude Flow Service - Claude AI integration (optional - uncomment to enable)
# [program:claude-flow-server]
# command=npm run start-claude-flow
# autorestart=true
# stdout_logfile=/app/mcp-logs/claude-flow.log
# stderr_logfile=/app/mcp-logs/claude-flow-error.log
# priority=30
# user=dev
# environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",ANTHROPIC_API_KEY="%(ENV_ANTHROPIC_API_KEY)s",NODE_ENV="production"
# startsecs=5
# stopwaitsecs=10

# Playwright MCP Server - Browser automation service (optional - uncomment to enable)
# [program:playwright-mcp-server]
# command=npm run start-playwright-mcp
# autorestart=true
# stdout_logfile=/app/mcp-logs/playwright-mcp.log
# stderr_logfile=/app/mcp-logs/playwright-mcp-error.log
# priority=40
# user=dev
# environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",DISPLAY=":99",NODE_ENV="production",PLAYWRIGHT_BROWSERS_PATH="/home/dev/.cache/ms-playwright"
# startsecs=10
# stopwaitsecs=15
# directory=/workspace

# Virtual Display for headless browser operations (optional - uncomment if using playwright)
# [program:xvfb]
# command=/usr/bin/Xvfb :99 -screen 0 1920x1080x24 -ac +extension GLX +render -noreset
# autorestart=true
# stdout_logfile=/app/mcp-logs/xvfb.log
# stderr_logfile=/app/mcp-logs/xvfb-error.log
# priority=1
# user=root

# Health Check Service - monitors all services (optional - uncomment to enable)
# [program:health-monitor]
# command=bash -c 'while true; do npm run health-check; sleep 60; done'
# autorestart=true
# stdout_logfile=/app/mcp-logs/health-monitor.log
# stderr_logfile=/app/mcp-logs/health-monitor-error.log
# priority=100
# user=dev

# Group definitions for better service management
[group:mcp-core]
programs=mcp-tcp-server,mcp-ws-bridge
priority=10

# Optional AI services group (uncomment if using AI services)
# [group:ai-services]
# programs=gemini-flow-server,claude-flow-server
# priority=30

# Optional browser automation group (uncomment if using playwright)
# [group:browser-services]
# programs=xvfb,playwright-mcp-server
# priority=40