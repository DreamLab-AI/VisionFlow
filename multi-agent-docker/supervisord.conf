# Supervisor configuration for managing core background services.
# Tool servers (imagemagick, blender, etc.) are managed by claude-flow via .mcp.json.

[supervisord]
nodaemon=false
logfile=/dev/stdout
logfile_maxbytes=0
loglevel=info
pidfile=/workspace/.supervisor/supervisord.pid
childlogdir=/app/mcp-logs

[unix_http_server]
file=/workspace/.supervisor/supervisor.sock
chmod=0770
chown=dev:dev

[supervisorctl]
serverurl=unix:///workspace/.supervisor/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# MCP WebSocket-to-Stdio Bridge for external control systems
[program:mcp-ws-bridge]
command=node /app/core-assets/scripts/mcp-ws-relay.js
directory=/workspace
autorestart=unexpected
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
stdout_events_enabled=true
stderr_events_enabled=true
priority=10
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",WS_AUTH_TOKEN="%(ENV_WS_AUTH_TOKEN)s",TCP_AUTH_TOKEN="%(ENV_TCP_AUTH_TOKEN)s",JWT_SECRET="%(ENV_JWT_SECRET)s"
startsecs=10
startretries=3
stopwaitsecs=10

# MCP TCP Server for TCP-based communication
[program:mcp-tcp-server]
command=node /app/core-assets/scripts/mcp-tcp-server.js
directory=/workspace
autorestart=unexpected
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
stdout_events_enabled=true
stderr_events_enabled=true
priority=10
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",WS_AUTH_TOKEN="%(ENV_WS_AUTH_TOKEN)s",TCP_AUTH_TOKEN="%(ENV_TCP_AUTH_TOKEN)s",JWT_SECRET="%(ENV_JWT_SECRET)s",CLAUDE_FLOW_DB_PATH="/workspace/.swarm/tcp-server.db"
startsecs=10
startretries=3
stopwaitsecs=10

# Gemini Flow Service - AI workflow orchestration (optional - uncomment to enable)
# [program:gemini-flow-server]
# command=npm run start-gemini-flow
# autorestart=true
# stdout_logfile=/app/mcp-logs/gemini-flow.log
# stderr_logfile=/app/mcp-logs/gemini-flow-error.log
# priority=30
# user=dev
# environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",GEMINI_API_KEY="%(ENV_GEMINI_API_KEY)s",NODE_ENV="production"
# startsecs=5
# stopwaitsecs=10

# Claude Flow Service - Claude AI integration (optional - uncomment to enable)
# Note: Claude-Flow MCP is started by the TCP server when needed, not as a standalone service
# [program:claude-flow-server]
# command=npm run start-claude-flow
# autorestart=true
# stdout_logfile=/app/mcp-logs/claude-flow.log
# stderr_logfile=/app/mcp-logs/claude-flow-error.log
# priority=30
# user=dev
# environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",ANTHROPIC_API_KEY="%(ENV_ANTHROPIC_API_KEY)s",NODE_ENV="production"
# startsecs=5
# stopwaitsecs=10

# Playwright MCP Server - Local MCP server
[program:playwright-mcp-server]
command=node /opt/playwright-mcp/server.js
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",DISPLAY=":1",NODE_ENV="production",PLAYWRIGHT_MCP_PORT="9879",PLAYWRIGHT_MCP_HOST="0.0.0.0",PLAYWRIGHT_BROWSERS_PATH="/opt/playwright-browsers"
startsecs=5
stopwaitsecs=10

# QGIS MCP Server - Local MCP server (uses system Python for QGIS bindings)
[program:qgis-mcp-server]
command=node /opt/qgis-mcp-server.js
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/usr/bin:/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",DISPLAY=":1",NODE_ENV="production",QGIS_MCP_PORT="9877",QGIS_MCP_HOST="0.0.0.0",QGIS_PYTHON_EXECUTABLE="/usr/bin/python3"
startsecs=5
stopwaitsecs=10

# PBR Generator MCP Server - Local MCP server (uses system Python for QGIS/imaging libs)
[program:pbr-mcp-server]
command=/usr/bin/python3 /opt/pbr-mcp-simple.py
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",DISPLAY=":1",PBR_MCP_PORT="9878",PBR_MCP_HOST="0.0.0.0",PYTHONPATH="/usr/lib/python3/dist-packages:/opt/venv312/lib/python3.12/site-packages"
startsecs=5
stopwaitsecs=10

# Web Summary MCP Server - Google AI Studio Vertex API for URL summarisation
[program:web-summary-mcp-server]
command=/opt/venv312/bin/python3 /opt/web-summary-mcp-server.py
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",GOOGLE_API_KEY="%(ENV_GOOGLE_API_KEY)s",WEB_SUMMARY_MCP_PORT="9880",WEB_SUMMARY_MCP_HOST="0.0.0.0"
startsecs=5
stopwaitsecs=10

# Claude-Flow TCP Proxy - Provides isolated sessions for external access
[program:claude-flow-tcp]
command=node /app/core-assets/scripts/claude-flow-tcp-proxy.js
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",CLAUDE_FLOW_TCP_PORT="9502"
startsecs=10
stopwaitsecs=15

# Goalie is available via MCP only (no external TCP server needed)

# CLAUDE.md Resilient Watcher - Auto-repairs system tools manifest
[program:claude-md-watcher]
command=/app/core-assets/scripts/claude-md-watcher.sh
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=5
user=dev
startsecs=5
stopwaitsecs=5

# Health Check Event Listener - DISABLED (missing requests module causes crashes)
# To re-enable: install python3-requests in Dockerfile and uncomment below
# [eventlistener:healthcheck]
# command=/usr/bin/python3 /app/scripts/supervisord-healthcheck.py
# events=TICK_60
# buffer_size=100
# stdout_logfile=/dev/stdout
# stdout_logfile_maxbytes=0
# stderr_logfile=/dev/stderr
# stderr_logfile_maxbytes=0
# autostart=false
# autorestart=false

# Group definitions for better service management
[group:mcp-core]
programs=mcp-tcp-server,mcp-ws-bridge,claude-flow-tcp
priority=10

[group:gui-mcp-servers]
programs=playwright-mcp-server,qgis-mcp-server,pbr-mcp-server,web-summary-mcp-server
priority=20

# Optional AI services group (uncomment if using AI services)
# [group:ai-services]
# programs=gemini-flow-server,claude-flow-server
# priority=30

# Optional browser automation group (uncomment if using playwright)
# [group:browser-services]
# programs=xvfb,playwright-mcp-server
# priority=40

# VNC Server - Xvnc with XFCE desktop
[program:vnc]
command=/usr/bin/Xvnc :1 -geometry 1600x1200 -depth 24 -rfbport 5901 -SecurityTypes VncAuth -PasswordFile /home/dev/.vnc/passwd -AlwaysShared -AcceptPointerEvents -AcceptKeyEvents -AcceptCutText -SendCutText
directory=/home/dev
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=3
user=dev
environment=DISPLAY=":1",HOME="/home/dev"
startsecs=5
stopwaitsecs=10

# D-Bus Session
[program:dbus]
command=/usr/bin/dbus-daemon --session --nofork --nopidfile --address=unix:path=/tmp/dbus-session
directory=/home/dev
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=4
user=dev
environment=DISPLAY=":1",HOME="/home/dev",DBUS_SESSION_BUS_ADDRESS="unix:path=/tmp/dbus-session"
startsecs=3
stopwaitsecs=5

# XFCE Desktop Session
[program:xfce]
command=/usr/bin/startxfce4
directory=/home/dev
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=5
user=dev
environment=DISPLAY=":1",HOME="/home/dev",DBUS_SESSION_BUS_ADDRESS="unix:path=/tmp/dbus-session"
startsecs=5
stopwaitsecs=10

# noVNC Web Interface
[program:novnc]
command=/opt/venv312/bin/websockify --web /usr/share/vnc 6901 localhost:5901
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=6
user=dev
startsecs=5
stopwaitsecs=5