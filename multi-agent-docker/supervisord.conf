# Supervisor configuration for managing core background services.
# Tool servers (imagemagick, blender, etc.) are managed by claude-flow via .mcp.json.

[supervisord]
nodaemon=false
logfile=/dev/stdout
logfile_maxbytes=0
loglevel=info
pidfile=/workspace/.supervisor/supervisord.pid
childlogdir=/app/mcp-logs

[unix_http_server]
file=/workspace/.supervisor/supervisor.sock
chmod=0770
chown=dev:dev

[supervisorctl]
serverurl=unix:///workspace/.supervisor/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# MCP WebSocket-to-Stdio Bridge for external control systems
[program:mcp-ws-bridge]
command=node /app/core-assets/scripts/mcp-ws-relay.js
directory=/workspace
autorestart=unexpected
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
stdout_events_enabled=true
stderr_events_enabled=true
priority=10
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",WS_AUTH_TOKEN="%(ENV_WS_AUTH_TOKEN)s",TCP_AUTH_TOKEN="%(ENV_TCP_AUTH_TOKEN)s",JWT_SECRET="%(ENV_JWT_SECRET)s"
startsecs=10
startretries=3
stopwaitsecs=10

# MCP TCP Server for TCP-based communication
[program:mcp-tcp-server]
command=node /app/core-assets/scripts/mcp-tcp-server.js
directory=/workspace
autorestart=unexpected
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
stdout_events_enabled=true
stderr_events_enabled=true
priority=10
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",WS_AUTH_TOKEN="%(ENV_WS_AUTH_TOKEN)s",TCP_AUTH_TOKEN="%(ENV_TCP_AUTH_TOKEN)s",JWT_SECRET="%(ENV_JWT_SECRET)s",CLAUDE_FLOW_DB_PATH="/workspace/.swarm/memory.db"
startsecs=10
startretries=3
stopwaitsecs=10

# Gemini Flow Service - AI workflow orchestration (optional - uncomment to enable)
# [program:gemini-flow-server]
# command=npm run start-gemini-flow
# autorestart=true
# stdout_logfile=/app/mcp-logs/gemini-flow.log
# stderr_logfile=/app/mcp-logs/gemini-flow-error.log
# priority=30
# user=dev
# environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",GEMINI_API_KEY="%(ENV_GEMINI_API_KEY)s",NODE_ENV="production"
# startsecs=5
# stopwaitsecs=10

# Claude Flow Service - Claude AI integration (optional - uncomment to enable)
# Note: Claude-Flow MCP is started by the TCP server when needed, not as a standalone service
# [program:claude-flow-server]
# command=npm run start-claude-flow
# autorestart=true
# stdout_logfile=/app/mcp-logs/claude-flow.log
# stderr_logfile=/app/mcp-logs/claude-flow-error.log
# priority=30
# user=dev
# environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",ANTHROPIC_API_KEY="%(ENV_ANTHROPIC_API_KEY)s",NODE_ENV="production"
# startsecs=5
# stopwaitsecs=10

# Playwright MCP Proxy - Connects to Playwright in GUI container
[program:playwright-mcp-proxy]
command=node /app/core-assets/scripts/playwright-mcp-proxy.js
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",GUI_CONTAINER_HOST="gui-tools-service",GUI_PLAYWRIGHT_PORT="9879"
startsecs=5
stopwaitsecs=10

# Blender MCP Proxy - Connects to Blender in GUI container
[program:blender-mcp-proxy]
command=node /app/core-assets/scripts/blender-mcp-proxy.js
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",GUI_CONTAINER_HOST="gui-tools-service",GUI_BLENDER_PORT="9876"
startsecs=5
stopwaitsecs=10

# QGIS MCP Proxy - Connects to QGIS in GUI container
[program:qgis-mcp-proxy]
command=node /app/core-assets/scripts/qgis-mcp-proxy.js
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",GUI_CONTAINER_HOST="gui-tools-service",GUI_QGIS_PORT="9877"
startsecs=5
stopwaitsecs=10

# PBR Generator MCP Proxy - Connects to PBR Generator in GUI container
[program:pbr-mcp-proxy]
command=node /app/core-assets/scripts/pbr-mcp-proxy.js
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",GUI_CONTAINER_HOST="gui-tools-service",GUI_PBR_PORT="9878"
startsecs=5
stopwaitsecs=10

# Claude-Flow TCP Proxy - Provides isolated sessions for external access
[program:claude-flow-tcp]
command=node /app/core-assets/scripts/claude-flow-tcp-proxy.js
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=20
user=dev
environment=PATH="/home/dev/.cargo/bin:/home/dev/.deno/bin:/home/dev/.local/bin:/home/dev/.npm-global/bin:/opt/oss-cad-suite/bin:/opt/venv312/bin:/app/core-assets/scripts:/app/core-assets/mcp-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",NODE_ENV="production",CLAUDE_FLOW_TCP_PORT="9502"
startsecs=10
stopwaitsecs=15

# Goalie is available via MCP only (no external TCP server needed)

# CLAUDE.md Resilient Watcher - Auto-repairs system tools manifest
[program:claude-md-watcher]
command=/app/core-assets/scripts/claude-md-watcher.sh
directory=/workspace
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=5
user=dev
startsecs=5
stopwaitsecs=5

# Health Check Service - DISABLED to prevent container instability
# Health checks can be done manually with: /app/core-assets/scripts/health-check.sh
# [program:healthcheck]
# command=/bin/bash /app/core-assets/scripts/health-check.sh
# directory=/workspace
# autorestart=false
# stdout_logfile=/dev/stdout
# stdout_logfile_maxbytes=0
# stderr_logfile=/dev/stderr
# stderr_logfile_maxbytes=0
# priority=100
# user=dev
# startsecs=0
# exitcodes=0,1
# startretries=0

# Group definitions for better service management
[group:mcp-core]
programs=mcp-tcp-server,mcp-ws-bridge,claude-flow-tcp
priority=10

[group:gui-proxies]
programs=playwright-mcp-proxy,blender-mcp-proxy,qgis-mcp-proxy,pbr-mcp-proxy
priority=20

# Optional AI services group (uncomment if using AI services)
# [group:ai-services]
# programs=gemini-flow-server,claude-flow-server
# priority=30

# Optional browser automation group (uncomment if using playwright)
# [group:browser-services]
# programs=xvfb,playwright-mcp-server
# priority=40