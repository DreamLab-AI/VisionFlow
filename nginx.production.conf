# VisionFlow Production Nginx Configuration
# Optimised for Cloudflare Tunnel with HTTPS termination

pid /tmp/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Custom MIME types
    types {
        application/typescript ts;
        application/javascript js mjs;
        text/jsx jsx;
        text/tsx tsx;
    }

    # Logging
    log_format production '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         'rt=$request_time uct="$upstream_connect_time" '
                         'CF-Ray=$http_cf_ray CF-Connecting-IP=$http_cf_connecting_ip';
    
    access_log /var/log/nginx/access.log production;

    # Performance optimisations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 120;
    keepalive_requests 100;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript 
               text/xml application/xml application/xml+rss text/javascript
               application/typescript text/jsx text/tsx;

    # WebSocket upgrade mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Rust backend upstream
    upstream rust_backend {
        server 127.0.0.1:3001;
        keepalive 64;
        keepalive_timeout 120s;
    }

    # Main server - Production
    server {
        listen 4000 default_server;
        server_name _;
        root /app/client/dist;
        index index.html;

        # Security headers for production
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # CSP for production - tighter than dev
        add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://getalby.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; frame-src 'self' https://getalby.com; font-src 'self' data:;" always;
        
        # HSTS handled by Cloudflare, but include as backup
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # API endpoints
        location /api/ {
            proxy_pass http://rust_backend;
            proxy_http_version 1.1;
            
            # Cloudflare headers
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            proxy_set_header CF-Ray $http_cf_ray;
            proxy_set_header CF-Visitor $http_cf_visitor;
            proxy_set_header CF-IPCountry $http_cf_ipcountry;
            
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https; # Always HTTPS from Cloudflare
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Performance
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # WebSocket endpoints
        location ~ ^/(wss|ws/speech|ws/mcp-relay)$ {
            proxy_pass http://rust_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Cloudflare headers
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            proxy_set_header CF-Ray $http_cf_ray;
            proxy_set_header CF-Visitor $http_cf_visitor;
            
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # WebSocket timeouts (Cloudflare has 100s timeout)
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 75s;
            
            # Disable buffering for real-time
            proxy_buffering off;
            proxy_cache off;
            tcp_nodelay on;
        }

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            
            # Security headers still apply
            add_header Cross-Origin-Opener-Policy "same-origin" always;
            add_header Cross-Origin-Embedder-Policy "require-corp" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            try_files $uri =404;
        }

        # HTML files - no cache for updates
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            
            # Security headers
            add_header Cross-Origin-Opener-Policy "same-origin" always;
            add_header Cross-Origin-Embedder-Policy "require-corp" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            try_files $uri /index.html;
        }

        # Root - serve React app
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache control for root
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Cloudflare verification endpoint
        location /.well-known/cf-custom-hostname-challenge {
            proxy_pass http://rust_backend;
        }
    }
}