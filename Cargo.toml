[package]
name = "webxr"
version = "0.1.0"
edition = "2021"
description = "A WebXR graph visualisation server with GPU-accelerated physics"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# Web framework and WebSocket
actix-web = { version = "4.11.0", features = ["compress-zstd", "macros"] }
actix-cors = "0.7.1"
actix-files = "0.6"
actix = "0.13"
crossbeam-channel = "0.5"
actix-web-actors = "4.3"
tungstenite = "0.21.0"
tokio-tungstenite = { version = "0.21.0" }

# Async runtime
tokio = { version = "1.47.1", features = ["full"] }
tokio-util = { version = "0.7", features = ["codec"] }
tokio-stream = "0.1"
futures = "0.3"
futures-util = "0.3"
async-trait = "0.1"

# For TCP buffered I/O and advanced socket operations
bytes = "1.10.1"
socket2 = { version = "0.5", features = ["all"] }

# Serialization
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
validator = { version = "0.18", features = ["derive"] }

# Database
rusqlite = { version = "0.37", features = ["bundled"] }
r2d2 = "0.8"
r2d2_sqlite = "0.31"

# Redis (optional distributed caching)
redis = { version = "0.27", features = ["aio", "tokio-comp", "connection-manager"], optional = true }

# TypeScript type generation
specta = { version = "2.0.0-rc.22", features = ["derive", "export"] }
specta-typescript = "0.0.9"

# Configuration
config = { version = "0.15.15", features = ["toml"] }
dotenvy = "0.15.7"
toml = "0.9.5"

# Logging and Telemetry
log = "0.4"
env_logger = "0.11.8"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["json", "chrono", "env-filter"] }
tracing-appender = "0.2"

# Error handling
thiserror = "2.0.16"
anyhow = "1.0.99"

# Graph serialization
xml = "0.8"
blake3 = "1.5"
bcrypt = "0.15"

# GPU/Compute
bytemuck = { version = "1.21", features = ["derive"] }
pollster = "0.4"
cudarc = { version = "0.12.1", features = ["driver", "cuda-12040"], optional = true }
cust = { version = "0.3.2", optional = true }
cust_core = { version = "0.1.1", optional = true }

# HTTP client and API
reqwest = { version = "0.12.23", features = ["json", "stream", "multipart"] }
nostr-sdk = "0.43.0"

# Utilities
uuid = { version = "1.18.0", features = ["v4", "serde"] }
chrono = { version = "0.4.41", features = ["serde"] }
static_assertions = "1.1"
base64 = "0.22.1"
rand = "0.8"
fastrand = "2.3"
regex = "1.11.2"
lazy_static = "1.5"
once_cell = "1.20"
sha1 = "0.10"
scopeguard = "1.2"
url = "2.5"
flate2 = "1.0"
byteorder = "1.5"
urlencoding = "2.1"
dashmap = "6.1"
heck = "0.5"
lru = "0.12"
path_abs = "0.5"
ordered-float = "4.5.0"
notify = "6.1"  # File system watching for hot-reload

# Math/Linear Algebra (needed for GPU compute)
nalgebra = "0.34.0"

# Added from the code block
glam = "0.30.5"
sysinfo = "0.37.0"

# Parallel processing
rayon = "1.11.0"

# Hexagonal Architecture
hexser = { version = "0.4.7", features = ["full"] }

# Ontology Reasoning - using local path dependency
whelk = { path = "./whelk-rs", optional = true }

# Ontology dependencies (optional)
# Note: Using 1.2.0 for ArcStr support (thread-safe string type)
horned-owl = { version = "1.2.0", features = ["remote"], optional = true }
horned-functional = { version = "0.4.0", optional = true }
walkdir = { version = "2.4", optional = true }
clap = { version = "4.5", features = ["derive"], optional = true }


[dev-dependencies]
tokio-test = "0.4"
mockall = "0.13"
pretty_assertions = "1.4"
tempfile = "3.14"
actix-rt = "2.11.0"

# WASM Support for hybrid CPU-WASM/GPU SSSP
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
web-sys = "0.3"
js-sys = "0.3"

[build-dependencies]
tempfile = "3.14"

[features]
default = ["gpu", "ontology"]
gpu = ["cudarc", "cust", "cust_core"]  # Enable GPU support with CUDA dependencies
gpu-safe = []  # Feature for GPU-safe types
cpu = []  # CPU-only mode
ontology = ["horned-owl", "horned-functional", "whelk", "walkdir", "clap"]  # Enable ontology validation with local whelk-rs
redis = ["dep:redis"]  # Enable Redis distributed caching

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "unwind"
strip = true

[profile.dev]
opt-level = 1

[package.metadata.rust-version]
min = "1.75.0"

[[bin]]
name = "generate_types"
path = "src/bin/generate_types.rs"
