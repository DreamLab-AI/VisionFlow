//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-34097967
// Cuda compilation tools, release 12.4, V12.4.131
// Based on NVVM 7.0.1
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	compute_forces
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
// _ZZ14compute_forcesE16shared_positions has been demoted
// _ZZ14compute_forcesE13shared_masses has been demoted
.global .align 1 .b8 $str[39] = {78, 111, 100, 101, 32, 48, 58, 32, 100, 105, 115, 116, 61, 37, 102, 44, 32, 109, 97, 115, 115, 95, 105, 61, 37, 102, 44, 32, 109, 97, 115, 115, 95, 106, 61, 37, 102, 10};
.global .align 1 .b8 $str$1[28] = {78, 111, 100, 101, 32, 48, 58, 32, 114, 101, 112, 117, 108, 115, 105, 111, 110, 95, 102, 111, 114, 99, 101, 61, 37, 102, 10};
.global .align 1 .b8 $str$2[59] = {78, 111, 100, 101, 32, 48, 58, 32, 115, 112, 114, 105, 110, 103, 95, 102, 111, 114, 99, 101, 61, 37, 102, 44, 32, 109, 97, 115, 115, 95, 102, 97, 99, 116, 111, 114, 61, 37, 102, 44, 32, 119, 101, 105, 103, 104, 116, 95, 102, 97, 99, 116, 111, 114, 61, 37, 102, 10};
.global .align 1 .b8 $str$3[50] = {78, 111, 100, 101, 32, 48, 58, 32, 102, 111, 114, 99, 101, 61, 40, 37, 102, 44, 32, 37, 102, 44, 32, 37, 102, 41, 44, 32, 110, 101, 119, 95, 118, 101, 108, 61, 40, 37, 102, 44, 32, 37, 102, 44, 32, 37, 102, 41, 10};

.visible .entry compute_forces(
	.param .u64 compute_forces_param_0,
	.param .u32 compute_forces_param_1,
	.param .f32 compute_forces_param_2,
	.param .f32 compute_forces_param_3,
	.param .f32 compute_forces_param_4,
	.param .f32 compute_forces_param_5,
	.param .f32 compute_forces_param_6
)
{
	.local .align 16 .b8 	__local_depot0[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<111>;
	.reg .b16 	%rs<224>;
	.reg .f32 	%f<849>;
	.reg .b32 	%r<111>;
	.reg .f64 	%fd<20>;
	.reg .b64 	%rd<52>;
	// demoted variable
	.shared .align 16 .b8 _ZZ14compute_forcesE16shared_positions[4096];
	// demoted variable
	.shared .align 4 .b8 _ZZ14compute_forcesE13shared_masses[1024];

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd6, [compute_forces_param_0];
	ld.param.u32 	%r48, [compute_forces_param_1];
	ld.param.f32 	%f325, [compute_forces_param_2];
	ld.param.f32 	%f326, [compute_forces_param_3];
	ld.param.f32 	%f328, [compute_forces_param_5];
	cvta.to.global.u64 	%rd1, %rd6;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r49, %ctaid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r3, %r49, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r48;
	@%p1 bra 	$L__BB0_123;

	mul.wide.s32 	%rd7, %r3, 48;
	add.s64 	%rd2, %rd1, %rd7;
	.pragma "used_bytes_mask 4095";
	ld.global.v4.f32 	{%f333, %f334, %f335, %f336}, [%rd2];
	.pragma "used_bytes_mask 4095";
	ld.global.v4.f32 	{%f337, %f338, %f339, %f340}, [%rd2+16];
	ld.global.v4.u32 	{%r50, %r51, %r52, %r53}, [%rd2+32];
	mov.b32 	{%rs82, %rs83}, %r50;
	and.b16  	%rs84, %rs82, 255;
	shr.u16 	%rs1, %rs82, 8;
	cvt.rn.f32.u16 	%f341, %rs84;
	mov.f32 	%f342, 0f437F0000;
	div.approx.ftz.f32 	%f7, %f341, %f342;
	add.s32 	%r55, %r1, %r48;
	add.s32 	%r4, %r55, -1;
	setp.gt.u32 	%p2, %r1, %r4;
	add.u64 	%rd8, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	mov.f32 	%f766, 0f00000000;
	mov.f32 	%f767, %f766;
	mov.f32 	%f768, %f766;
	@%p2 bra 	$L__BB0_113;

	shl.b32 	%r57, %r2, 4;
	mov.u32 	%r58, _ZZ14compute_forcesE16shared_positions;
	add.s32 	%r5, %r58, %r57;
	shl.b32 	%r59, %r2, 2;
	mov.u32 	%r60, _ZZ14compute_forcesE13shared_masses;
	add.s32 	%r6, %r60, %r59;
	cvt.ftz.f64.f32 	%fd1, %f7;
	and.b16  	%rs2, %rs1, 2;
	mov.u32 	%r100, 0;
	div.u32 	%r8, %r4, %r1;
	mov.f32 	%f768, 0f00000000;
	mov.f32 	%f767, %f768;
	mov.f32 	%f766, %f768;

$L__BB0_3:
	neg.s32 	%r92, %r1;
	mul.lo.s32 	%r10, %r1, %r100;
	sub.s32 	%r61, %r10, %r48;
	max.u32 	%r11, %r61, %r92;
	neg.s32 	%r12, %r11;
	add.s32 	%r13, %r10, %r2;
	setp.ge.s32 	%p3, %r13, %r48;
	@%p3 bra 	$L__BB0_5;

	mul.wide.s32 	%rd9, %r13, 48;
	add.s64 	%rd10, %rd1, %rd9;
	.pragma "used_bytes_mask 4095";
	ld.global.v4.f32 	{%f346, %f347, %f348, %f349}, [%rd10];
	ld.global.v4.u32 	{%r62, %r63, %r64, %r65}, [%rd10+32];
	cvt.u16.u32 	%rs85, %r62;
	and.b16  	%rs86, %rs85, 255;
	st.shared.v2.f32 	[%r5], {%f346, %f347};
	st.shared.f32 	[%r5+8], %f348;
	cvt.rn.f32.u16 	%f353, %rs86;
	mov.f32 	%f354, 0f437F0000;
	div.approx.ftz.f32 	%f355, %f353, %f354;
	st.shared.f32 	[%r6], %f355;

$L__BB0_5:
	setp.eq.s32 	%p4, %r1, 0;
	bar.sync 	0;
	setp.ge.u32 	%p5, %r10, %r48;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_112;

	mul.lo.s32 	%r104, %r1, %r100;
	neg.s32 	%r96, %r1;
	sub.s32 	%r95, %r104, %r48;
	max.u32 	%r94, %r95, %r96;
	and.b32  	%r110, %r12, 7;
	setp.gt.u32 	%p7, %r94, -8;
	mov.u32 	%r105, 0;
	@%p7 bra 	$L__BB0_94;

	sub.s32 	%r103, %r12, %r110;
	mov.u32 	%r105, 0;
	mov.u32 	%r104, %r10;

$L__BB0_8:
	.pragma "nounroll";
	shl.b32 	%r69, %r105, 4;
	add.s32 	%r19, %r58, %r69;
	shl.b32 	%r71, %r105, 2;
	add.s32 	%r20, %r60, %r71;
	setp.eq.s32 	%p8, %r104, %r3;
	@%p8 bra 	$L__BB0_23;

	mul.wide.u32 	%rd11, %r104, 48;
	add.s64 	%rd12, %rd1, %rd11;
	add.s64 	%rd4, %rd12, 33;
	ld.global.u8 	%rs87, [%rd12+33];
	and.b16  	%rs88, %rs87, 1;
	setp.eq.b16 	%p9, %rs88, 1;
	mov.pred 	%p10, 0;
	xor.pred  	%p11, %p9, %p10;
	not.pred 	%p12, %p11;
	@%p12 bra 	$L__BB0_23;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f357, %f358, %f359, %f360}, [%r19];
	ld.shared.f32 	%f14, [%r20];
	sub.ftz.f32 	%f15, %f333, %f357;
	sub.ftz.f32 	%f16, %f334, %f358;
	sub.ftz.f32 	%f17, %f335, %f359;
	mul.ftz.f32 	%f364, %f16, %f16;
	fma.rn.ftz.f32 	%f365, %f15, %f15, %f364;
	fma.rn.ftz.f32 	%f366, %f17, %f17, %f365;
	sqrt.approx.ftz.f32 	%f18, %f366;
	or.b32  	%r21, %r105, %r3;
	setp.ne.s32 	%p13, %r21, 0;
	@%p13 bra 	$L__BB0_12;

	mov.f32 	%f705, 0f38D1B717;
	max.ftz.f32 	%f704, %f18, %f705;
	cvt.ftz.f64.f32 	%fd2, %f704;
	st.local.v2.f64 	[%rd3], {%fd2, %fd1};
	cvt.ftz.f64.f32 	%fd3, %f14;
	st.local.f64 	[%rd3+16], %fd3;
	mov.u64 	%rd13, $str;
	cvta.global.u64 	%rd14, %rd13;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r73, [retval0+0];
	} // callseq 0

$L__BB0_12:
	mov.f32 	%f701, 0f38D1B717;
	max.ftz.f32 	%f700, %f18, %f701;
	setp.geu.ftz.f32 	%p14, %f700, %f328;
	mov.f32 	%f754, 0f00000000;
	@%p14 bra 	$L__BB0_15;

	or.b32  	%r93, %r105, %r3;
	setp.ne.s32 	%p108, %r93, 0;
	mov.f32 	%f710, 0f38D1B717;
	max.ftz.f32 	%f709, %f18, %f710;
	div.approx.ftz.f32 	%f369, %f709, %f328;
	mov.f32 	%f370, 0f3F800000;
	sub.ftz.f32 	%f371, %f370, %f369;
	mul.ftz.f32 	%f372, %f371, %f371;
	mul.ftz.f32 	%f373, %f7, %f14;
	sqrt.approx.ftz.f32 	%f374, %f373;
	mul.ftz.f32 	%f375, %f374, %f326;
	mul.ftz.f32 	%f376, %f375, %f372;
	mul.ftz.f32 	%f377, %f709, %f709;
	div.approx.ftz.f32 	%f20, %f376, %f377;
	mov.f32 	%f378, 0f00000000;
	sub.ftz.f32 	%f754, %f378, %f20;
	@%p108 bra 	$L__BB0_15;

	cvt.ftz.f64.f32 	%fd4, %f20;
	st.local.f64 	[%rd3], %fd4;
	mov.u64 	%rd16, $str$1;
	cvta.global.u64 	%rd17, %rd16;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r74, [retval0+0];
	} // callseq 1

$L__BB0_15:
	setp.eq.s16 	%p16, %rs2, 0;
	@%p16 bra 	$L__BB0_19;

	ld.global.u8 	%rs89, [%rd4];
	and.b16  	%rs90, %rs89, 2;
	setp.eq.s16 	%p17, %rs90, 0;
	@%p17 bra 	$L__BB0_19;

	or.b32  	%r91, %r105, %r3;
	setp.ne.s32 	%p107, %r91, 0;
	mov.f32 	%f703, 0f38D1B717;
	max.ftz.f32 	%f702, %f18, %f703;
	add.ftz.f32 	%f379, %f7, %f14;
	fma.rn.ftz.f32 	%f380, %f379, 0fBD4CCCCD, %f702;
	mul.ftz.f32 	%f381, %f380, %f325;
	mul.ftz.f32 	%f382, %f7, %f14;
	sqrt.approx.ftz.f32 	%f23, %f382;
	add.ftz.f32 	%f24, %f23, 0f3F800000;
	mul.ftz.f32 	%f25, %f381, %f24;
	add.ftz.f32 	%f754, %f754, %f25;
	@%p107 bra 	$L__BB0_19;

	cvt.ftz.f64.f32 	%fd5, %f23;
	cvt.ftz.f64.f32 	%fd6, %f25;
	st.local.v2.f64 	[%rd3], {%fd6, %fd5};
	cvt.ftz.f64.f32 	%fd7, %f24;
	st.local.f64 	[%rd3+16], %fd7;
	mov.u64 	%rd19, $str$2;
	cvta.global.u64 	%rd20, %rd19;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r75, [retval0+0];
	} // callseq 2

$L__BB0_19:
	setp.lt.ftz.f32 	%p19, %f18, 0f358637BD;
	mov.f32 	%f755, 0f00000000;
	mov.f32 	%f756, %f755;
	mov.f32 	%f757, %f755;
	@%p19 bra 	$L__BB0_21;

	rcp.approx.ftz.f32 	%f386, %f18;
	mul.ftz.f32 	%f757, %f17, %f386;
	mul.ftz.f32 	%f756, %f16, %f386;
	mul.ftz.f32 	%f755, %f15, %f386;

$L__BB0_21:
	fma.rn.ftz.f32 	%f766, %f754, %f755, %f766;
	fma.rn.ftz.f32 	%f767, %f754, %f756, %f767;
	fma.rn.ftz.f32 	%f768, %f754, %f757, %f768;
	mul.ftz.f32 	%f387, %f338, %f756;
	fma.rn.ftz.f32 	%f388, %f337, %f755, %f387;
	fma.rn.ftz.f32 	%f40, %f339, %f757, %f388;
	setp.leu.ftz.f32 	%p20, %f40, 0f00000000;
	@%p20 bra 	$L__BB0_23;

	mul.ftz.f32 	%f389, %f7, %f40;
	mul.ftz.f32 	%f390, %f389, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f755, %f390, %f766;
	fma.rn.ftz.f32 	%f767, %f756, %f390, %f767;
	fma.rn.ftz.f32 	%f768, %f757, %f390, %f768;

$L__BB0_23:
	add.s32 	%r76, %r105, %r10;
	add.s32 	%r22, %r76, 1;
	setp.eq.s32 	%p21, %r22, %r3;
	@%p21 bra 	$L__BB0_33;

	mul.wide.u32 	%rd22, %r22, 48;
	add.s64 	%rd23, %rd1, %rd22;
	ld.global.u8 	%rs11, [%rd23+33];
	and.b16  	%rs103, %rs11, 1;
	setp.eq.b16 	%p22, %rs103, 1;
	mov.pred 	%p23, 0;
	xor.pred  	%p24, %p22, %p23;
	not.pred 	%p25, %p24;
	@%p25 bra 	$L__BB0_33;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f392, %f393, %f394, %f395}, [%r19+16];
	ld.shared.f32 	%f47, [%r20+4];
	sub.ftz.f32 	%f48, %f333, %f392;
	sub.ftz.f32 	%f49, %f334, %f393;
	sub.ftz.f32 	%f50, %f335, %f394;
	mul.ftz.f32 	%f399, %f49, %f49;
	fma.rn.ftz.f32 	%f400, %f48, %f48, %f399;
	fma.rn.ftz.f32 	%f401, %f50, %f50, %f400;
	sqrt.approx.ftz.f32 	%f51, %f401;
	mov.f32 	%f402, 0f38D1B717;
	max.ftz.f32 	%f52, %f51, %f402;
	setp.geu.ftz.f32 	%p26, %f52, %f328;
	mov.f32 	%f762, 0f00000000;
	@%p26 bra 	$L__BB0_27;

	mov.f32 	%f714, 0f38D1B717;
	max.ftz.f32 	%f713, %f51, %f714;
	div.approx.ftz.f32 	%f403, %f713, %f328;
	mov.f32 	%f404, 0f3F800000;
	sub.ftz.f32 	%f405, %f404, %f403;
	mul.ftz.f32 	%f406, %f405, %f405;
	mul.ftz.f32 	%f407, %f7, %f47;
	sqrt.approx.ftz.f32 	%f408, %f407;
	mul.ftz.f32 	%f409, %f408, %f326;
	mul.ftz.f32 	%f410, %f409, %f406;
	mul.ftz.f32 	%f411, %f713, %f713;
	div.approx.ftz.f32 	%f412, %f410, %f411;
	mov.f32 	%f413, 0f00000000;
	sub.ftz.f32 	%f762, %f413, %f412;

$L__BB0_27:
	and.b16  	%rs104, %rs1, %rs11;
	and.b16  	%rs105, %rs104, 2;
	setp.eq.s16 	%p27, %rs105, 0;
	@%p27 bra 	$L__BB0_29;

	mov.f32 	%f712, 0f38D1B717;
	max.ftz.f32 	%f711, %f51, %f712;
	add.ftz.f32 	%f414, %f7, %f47;
	fma.rn.ftz.f32 	%f415, %f414, 0fBD4CCCCD, %f711;
	mul.ftz.f32 	%f416, %f415, %f325;
	mul.ftz.f32 	%f417, %f7, %f47;
	sqrt.approx.ftz.f32 	%f418, %f417;
	add.ftz.f32 	%f419, %f418, 0f3F800000;
	fma.rn.ftz.f32 	%f762, %f416, %f419, %f762;

$L__BB0_29:
	setp.lt.ftz.f32 	%p28, %f51, 0f358637BD;
	mov.f32 	%f763, 0f00000000;
	mov.f32 	%f764, %f763;
	mov.f32 	%f765, %f763;
	@%p28 bra 	$L__BB0_31;

	rcp.approx.ftz.f32 	%f423, %f51;
	mul.ftz.f32 	%f765, %f50, %f423;
	mul.ftz.f32 	%f764, %f49, %f423;
	mul.ftz.f32 	%f763, %f48, %f423;

$L__BB0_31:
	fma.rn.ftz.f32 	%f766, %f762, %f763, %f766;
	fma.rn.ftz.f32 	%f767, %f762, %f764, %f767;
	fma.rn.ftz.f32 	%f768, %f762, %f765, %f768;
	mul.ftz.f32 	%f424, %f338, %f764;
	fma.rn.ftz.f32 	%f425, %f337, %f763, %f424;
	fma.rn.ftz.f32 	%f69, %f339, %f765, %f425;
	setp.leu.ftz.f32 	%p29, %f69, 0f00000000;
	@%p29 bra 	$L__BB0_33;

	mul.ftz.f32 	%f426, %f7, %f69;
	mul.ftz.f32 	%f427, %f426, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f763, %f427, %f766;
	fma.rn.ftz.f32 	%f767, %f764, %f427, %f767;
	fma.rn.ftz.f32 	%f768, %f765, %f427, %f768;

$L__BB0_33:
	add.s32 	%r23, %r76, 2;
	setp.eq.s32 	%p30, %r23, %r3;
	@%p30 bra 	$L__BB0_43;

	mul.wide.u32 	%rd24, %r23, 48;
	add.s64 	%rd25, %rd1, %rd24;
	ld.global.u8 	%rs20, [%rd25+33];
	and.b16  	%rs118, %rs20, 1;
	setp.eq.b16 	%p31, %rs118, 1;
	mov.pred 	%p32, 0;
	xor.pred  	%p33, %p31, %p32;
	not.pred 	%p34, %p33;
	@%p34 bra 	$L__BB0_43;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f429, %f430, %f431, %f432}, [%r19+32];
	ld.shared.f32 	%f76, [%r20+8];
	sub.ftz.f32 	%f77, %f333, %f429;
	sub.ftz.f32 	%f78, %f334, %f430;
	sub.ftz.f32 	%f79, %f335, %f431;
	mul.ftz.f32 	%f436, %f78, %f78;
	fma.rn.ftz.f32 	%f437, %f77, %f77, %f436;
	fma.rn.ftz.f32 	%f438, %f79, %f79, %f437;
	sqrt.approx.ftz.f32 	%f80, %f438;
	mov.f32 	%f439, 0f38D1B717;
	max.ftz.f32 	%f81, %f80, %f439;
	setp.geu.ftz.f32 	%p35, %f81, %f328;
	mov.f32 	%f770, 0f00000000;
	@%p35 bra 	$L__BB0_37;

	mov.f32 	%f718, 0f38D1B717;
	max.ftz.f32 	%f717, %f80, %f718;
	div.approx.ftz.f32 	%f440, %f717, %f328;
	mov.f32 	%f441, 0f3F800000;
	sub.ftz.f32 	%f442, %f441, %f440;
	mul.ftz.f32 	%f443, %f442, %f442;
	mul.ftz.f32 	%f444, %f7, %f76;
	sqrt.approx.ftz.f32 	%f445, %f444;
	mul.ftz.f32 	%f446, %f445, %f326;
	mul.ftz.f32 	%f447, %f446, %f443;
	mul.ftz.f32 	%f448, %f717, %f717;
	div.approx.ftz.f32 	%f449, %f447, %f448;
	mov.f32 	%f450, 0f00000000;
	sub.ftz.f32 	%f770, %f450, %f449;

$L__BB0_37:
	and.b16  	%rs119, %rs1, %rs20;
	and.b16  	%rs120, %rs119, 2;
	setp.eq.s16 	%p36, %rs120, 0;
	@%p36 bra 	$L__BB0_39;

	mov.f32 	%f716, 0f38D1B717;
	max.ftz.f32 	%f715, %f80, %f716;
	add.ftz.f32 	%f451, %f7, %f76;
	fma.rn.ftz.f32 	%f452, %f451, 0fBD4CCCCD, %f715;
	mul.ftz.f32 	%f453, %f452, %f325;
	mul.ftz.f32 	%f454, %f7, %f76;
	sqrt.approx.ftz.f32 	%f455, %f454;
	add.ftz.f32 	%f456, %f455, 0f3F800000;
	fma.rn.ftz.f32 	%f770, %f453, %f456, %f770;

$L__BB0_39:
	setp.lt.ftz.f32 	%p37, %f80, 0f358637BD;
	mov.f32 	%f771, 0f00000000;
	mov.f32 	%f772, %f771;
	mov.f32 	%f773, %f771;
	@%p37 bra 	$L__BB0_41;

	rcp.approx.ftz.f32 	%f460, %f80;
	mul.ftz.f32 	%f773, %f79, %f460;
	mul.ftz.f32 	%f772, %f78, %f460;
	mul.ftz.f32 	%f771, %f77, %f460;

$L__BB0_41:
	fma.rn.ftz.f32 	%f766, %f770, %f771, %f766;
	fma.rn.ftz.f32 	%f767, %f770, %f772, %f767;
	fma.rn.ftz.f32 	%f768, %f770, %f773, %f768;
	mul.ftz.f32 	%f461, %f338, %f772;
	fma.rn.ftz.f32 	%f462, %f337, %f771, %f461;
	fma.rn.ftz.f32 	%f98, %f339, %f773, %f462;
	setp.leu.ftz.f32 	%p38, %f98, 0f00000000;
	@%p38 bra 	$L__BB0_43;

	mul.ftz.f32 	%f463, %f7, %f98;
	mul.ftz.f32 	%f464, %f463, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f771, %f464, %f766;
	fma.rn.ftz.f32 	%f767, %f772, %f464, %f767;
	fma.rn.ftz.f32 	%f768, %f773, %f464, %f768;

$L__BB0_43:
	add.s32 	%r24, %r76, 3;
	setp.eq.s32 	%p39, %r24, %r3;
	@%p39 bra 	$L__BB0_53;

	mul.wide.u32 	%rd26, %r24, 48;
	add.s64 	%rd27, %rd1, %rd26;
	ld.global.u8 	%rs29, [%rd27+33];
	and.b16  	%rs133, %rs29, 1;
	setp.eq.b16 	%p40, %rs133, 1;
	mov.pred 	%p41, 0;
	xor.pred  	%p42, %p40, %p41;
	not.pred 	%p43, %p42;
	@%p43 bra 	$L__BB0_53;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f466, %f467, %f468, %f469}, [%r19+48];
	ld.shared.f32 	%f105, [%r20+12];
	sub.ftz.f32 	%f106, %f333, %f466;
	sub.ftz.f32 	%f107, %f334, %f467;
	sub.ftz.f32 	%f108, %f335, %f468;
	mul.ftz.f32 	%f473, %f107, %f107;
	fma.rn.ftz.f32 	%f474, %f106, %f106, %f473;
	fma.rn.ftz.f32 	%f475, %f108, %f108, %f474;
	sqrt.approx.ftz.f32 	%f109, %f475;
	mov.f32 	%f476, 0f38D1B717;
	max.ftz.f32 	%f110, %f109, %f476;
	setp.geu.ftz.f32 	%p44, %f110, %f328;
	mov.f32 	%f778, 0f00000000;
	@%p44 bra 	$L__BB0_47;

	mov.f32 	%f722, 0f38D1B717;
	max.ftz.f32 	%f721, %f109, %f722;
	div.approx.ftz.f32 	%f477, %f721, %f328;
	mov.f32 	%f478, 0f3F800000;
	sub.ftz.f32 	%f479, %f478, %f477;
	mul.ftz.f32 	%f480, %f479, %f479;
	mul.ftz.f32 	%f481, %f7, %f105;
	sqrt.approx.ftz.f32 	%f482, %f481;
	mul.ftz.f32 	%f483, %f482, %f326;
	mul.ftz.f32 	%f484, %f483, %f480;
	mul.ftz.f32 	%f485, %f721, %f721;
	div.approx.ftz.f32 	%f486, %f484, %f485;
	mov.f32 	%f487, 0f00000000;
	sub.ftz.f32 	%f778, %f487, %f486;

$L__BB0_47:
	and.b16  	%rs134, %rs1, %rs29;
	and.b16  	%rs135, %rs134, 2;
	setp.eq.s16 	%p45, %rs135, 0;
	@%p45 bra 	$L__BB0_49;

	mov.f32 	%f720, 0f38D1B717;
	max.ftz.f32 	%f719, %f109, %f720;
	add.ftz.f32 	%f488, %f7, %f105;
	fma.rn.ftz.f32 	%f489, %f488, 0fBD4CCCCD, %f719;
	mul.ftz.f32 	%f490, %f489, %f325;
	mul.ftz.f32 	%f491, %f7, %f105;
	sqrt.approx.ftz.f32 	%f492, %f491;
	add.ftz.f32 	%f493, %f492, 0f3F800000;
	fma.rn.ftz.f32 	%f778, %f490, %f493, %f778;

$L__BB0_49:
	setp.lt.ftz.f32 	%p46, %f109, 0f358637BD;
	mov.f32 	%f779, 0f00000000;
	mov.f32 	%f780, %f779;
	mov.f32 	%f781, %f779;
	@%p46 bra 	$L__BB0_51;

	rcp.approx.ftz.f32 	%f497, %f109;
	mul.ftz.f32 	%f781, %f108, %f497;
	mul.ftz.f32 	%f780, %f107, %f497;
	mul.ftz.f32 	%f779, %f106, %f497;

$L__BB0_51:
	fma.rn.ftz.f32 	%f766, %f778, %f779, %f766;
	fma.rn.ftz.f32 	%f767, %f778, %f780, %f767;
	fma.rn.ftz.f32 	%f768, %f778, %f781, %f768;
	mul.ftz.f32 	%f498, %f338, %f780;
	fma.rn.ftz.f32 	%f499, %f337, %f779, %f498;
	fma.rn.ftz.f32 	%f127, %f339, %f781, %f499;
	setp.leu.ftz.f32 	%p47, %f127, 0f00000000;
	@%p47 bra 	$L__BB0_53;

	mul.ftz.f32 	%f500, %f7, %f127;
	mul.ftz.f32 	%f501, %f500, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f779, %f501, %f766;
	fma.rn.ftz.f32 	%f767, %f780, %f501, %f767;
	fma.rn.ftz.f32 	%f768, %f781, %f501, %f768;

$L__BB0_53:
	add.s32 	%r25, %r76, 4;
	setp.eq.s32 	%p48, %r25, %r3;
	@%p48 bra 	$L__BB0_63;

	mul.wide.u32 	%rd28, %r25, 48;
	add.s64 	%rd29, %rd1, %rd28;
	ld.global.u8 	%rs38, [%rd29+33];
	and.b16  	%rs148, %rs38, 1;
	setp.eq.b16 	%p49, %rs148, 1;
	mov.pred 	%p50, 0;
	xor.pred  	%p51, %p49, %p50;
	not.pred 	%p52, %p51;
	@%p52 bra 	$L__BB0_63;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f503, %f504, %f505, %f506}, [%r19+64];
	ld.shared.f32 	%f134, [%r20+16];
	sub.ftz.f32 	%f135, %f333, %f503;
	sub.ftz.f32 	%f136, %f334, %f504;
	sub.ftz.f32 	%f137, %f335, %f505;
	mul.ftz.f32 	%f510, %f136, %f136;
	fma.rn.ftz.f32 	%f511, %f135, %f135, %f510;
	fma.rn.ftz.f32 	%f512, %f137, %f137, %f511;
	sqrt.approx.ftz.f32 	%f138, %f512;
	mov.f32 	%f513, 0f38D1B717;
	max.ftz.f32 	%f139, %f138, %f513;
	setp.geu.ftz.f32 	%p53, %f139, %f328;
	mov.f32 	%f786, 0f00000000;
	@%p53 bra 	$L__BB0_57;

	mov.f32 	%f726, 0f38D1B717;
	max.ftz.f32 	%f725, %f138, %f726;
	div.approx.ftz.f32 	%f514, %f725, %f328;
	mov.f32 	%f515, 0f3F800000;
	sub.ftz.f32 	%f516, %f515, %f514;
	mul.ftz.f32 	%f517, %f516, %f516;
	mul.ftz.f32 	%f518, %f7, %f134;
	sqrt.approx.ftz.f32 	%f519, %f518;
	mul.ftz.f32 	%f520, %f519, %f326;
	mul.ftz.f32 	%f521, %f520, %f517;
	mul.ftz.f32 	%f522, %f725, %f725;
	div.approx.ftz.f32 	%f523, %f521, %f522;
	mov.f32 	%f524, 0f00000000;
	sub.ftz.f32 	%f786, %f524, %f523;

$L__BB0_57:
	and.b16  	%rs149, %rs1, %rs38;
	and.b16  	%rs150, %rs149, 2;
	setp.eq.s16 	%p54, %rs150, 0;
	@%p54 bra 	$L__BB0_59;

	mov.f32 	%f724, 0f38D1B717;
	max.ftz.f32 	%f723, %f138, %f724;
	add.ftz.f32 	%f525, %f7, %f134;
	fma.rn.ftz.f32 	%f526, %f525, 0fBD4CCCCD, %f723;
	mul.ftz.f32 	%f527, %f526, %f325;
	mul.ftz.f32 	%f528, %f7, %f134;
	sqrt.approx.ftz.f32 	%f529, %f528;
	add.ftz.f32 	%f530, %f529, 0f3F800000;
	fma.rn.ftz.f32 	%f786, %f527, %f530, %f786;

$L__BB0_59:
	setp.lt.ftz.f32 	%p55, %f138, 0f358637BD;
	mov.f32 	%f787, 0f00000000;
	mov.f32 	%f788, %f787;
	mov.f32 	%f789, %f787;
	@%p55 bra 	$L__BB0_61;

	rcp.approx.ftz.f32 	%f534, %f138;
	mul.ftz.f32 	%f789, %f137, %f534;
	mul.ftz.f32 	%f788, %f136, %f534;
	mul.ftz.f32 	%f787, %f135, %f534;

$L__BB0_61:
	fma.rn.ftz.f32 	%f766, %f786, %f787, %f766;
	fma.rn.ftz.f32 	%f767, %f786, %f788, %f767;
	fma.rn.ftz.f32 	%f768, %f786, %f789, %f768;
	mul.ftz.f32 	%f535, %f338, %f788;
	fma.rn.ftz.f32 	%f536, %f337, %f787, %f535;
	fma.rn.ftz.f32 	%f156, %f339, %f789, %f536;
	setp.leu.ftz.f32 	%p56, %f156, 0f00000000;
	@%p56 bra 	$L__BB0_63;

	mul.ftz.f32 	%f537, %f7, %f156;
	mul.ftz.f32 	%f538, %f537, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f787, %f538, %f766;
	fma.rn.ftz.f32 	%f767, %f788, %f538, %f767;
	fma.rn.ftz.f32 	%f768, %f789, %f538, %f768;

$L__BB0_63:
	add.s32 	%r26, %r76, 5;
	setp.eq.s32 	%p57, %r26, %r3;
	@%p57 bra 	$L__BB0_73;

	mul.wide.u32 	%rd30, %r26, 48;
	add.s64 	%rd31, %rd1, %rd30;
	ld.global.u8 	%rs47, [%rd31+33];
	and.b16  	%rs163, %rs47, 1;
	setp.eq.b16 	%p58, %rs163, 1;
	mov.pred 	%p59, 0;
	xor.pred  	%p60, %p58, %p59;
	not.pred 	%p61, %p60;
	@%p61 bra 	$L__BB0_73;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f540, %f541, %f542, %f543}, [%r19+80];
	ld.shared.f32 	%f163, [%r20+20];
	sub.ftz.f32 	%f164, %f333, %f540;
	sub.ftz.f32 	%f165, %f334, %f541;
	sub.ftz.f32 	%f166, %f335, %f542;
	mul.ftz.f32 	%f547, %f165, %f165;
	fma.rn.ftz.f32 	%f548, %f164, %f164, %f547;
	fma.rn.ftz.f32 	%f549, %f166, %f166, %f548;
	sqrt.approx.ftz.f32 	%f167, %f549;
	mov.f32 	%f550, 0f38D1B717;
	max.ftz.f32 	%f168, %f167, %f550;
	setp.geu.ftz.f32 	%p62, %f168, %f328;
	mov.f32 	%f794, 0f00000000;
	@%p62 bra 	$L__BB0_67;

	mov.f32 	%f730, 0f38D1B717;
	max.ftz.f32 	%f729, %f167, %f730;
	div.approx.ftz.f32 	%f551, %f729, %f328;
	mov.f32 	%f552, 0f3F800000;
	sub.ftz.f32 	%f553, %f552, %f551;
	mul.ftz.f32 	%f554, %f553, %f553;
	mul.ftz.f32 	%f555, %f7, %f163;
	sqrt.approx.ftz.f32 	%f556, %f555;
	mul.ftz.f32 	%f557, %f556, %f326;
	mul.ftz.f32 	%f558, %f557, %f554;
	mul.ftz.f32 	%f559, %f729, %f729;
	div.approx.ftz.f32 	%f560, %f558, %f559;
	mov.f32 	%f561, 0f00000000;
	sub.ftz.f32 	%f794, %f561, %f560;

$L__BB0_67:
	and.b16  	%rs164, %rs1, %rs47;
	and.b16  	%rs165, %rs164, 2;
	setp.eq.s16 	%p63, %rs165, 0;
	@%p63 bra 	$L__BB0_69;

	mov.f32 	%f728, 0f38D1B717;
	max.ftz.f32 	%f727, %f167, %f728;
	add.ftz.f32 	%f562, %f7, %f163;
	fma.rn.ftz.f32 	%f563, %f562, 0fBD4CCCCD, %f727;
	mul.ftz.f32 	%f564, %f563, %f325;
	mul.ftz.f32 	%f565, %f7, %f163;
	sqrt.approx.ftz.f32 	%f566, %f565;
	add.ftz.f32 	%f567, %f566, 0f3F800000;
	fma.rn.ftz.f32 	%f794, %f564, %f567, %f794;

$L__BB0_69:
	setp.lt.ftz.f32 	%p64, %f167, 0f358637BD;
	mov.f32 	%f795, 0f00000000;
	mov.f32 	%f796, %f795;
	mov.f32 	%f797, %f795;
	@%p64 bra 	$L__BB0_71;

	rcp.approx.ftz.f32 	%f571, %f167;
	mul.ftz.f32 	%f797, %f166, %f571;
	mul.ftz.f32 	%f796, %f165, %f571;
	mul.ftz.f32 	%f795, %f164, %f571;

$L__BB0_71:
	fma.rn.ftz.f32 	%f766, %f794, %f795, %f766;
	fma.rn.ftz.f32 	%f767, %f794, %f796, %f767;
	fma.rn.ftz.f32 	%f768, %f794, %f797, %f768;
	mul.ftz.f32 	%f572, %f338, %f796;
	fma.rn.ftz.f32 	%f573, %f337, %f795, %f572;
	fma.rn.ftz.f32 	%f185, %f339, %f797, %f573;
	setp.leu.ftz.f32 	%p65, %f185, 0f00000000;
	@%p65 bra 	$L__BB0_73;

	mul.ftz.f32 	%f574, %f7, %f185;
	mul.ftz.f32 	%f575, %f574, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f795, %f575, %f766;
	fma.rn.ftz.f32 	%f767, %f796, %f575, %f767;
	fma.rn.ftz.f32 	%f768, %f797, %f575, %f768;

$L__BB0_73:
	add.s32 	%r27, %r76, 6;
	setp.eq.s32 	%p66, %r27, %r3;
	@%p66 bra 	$L__BB0_83;

	mul.wide.u32 	%rd32, %r27, 48;
	add.s64 	%rd33, %rd1, %rd32;
	ld.global.u8 	%rs56, [%rd33+33];
	and.b16  	%rs178, %rs56, 1;
	setp.eq.b16 	%p67, %rs178, 1;
	mov.pred 	%p68, 0;
	xor.pred  	%p69, %p67, %p68;
	not.pred 	%p70, %p69;
	@%p70 bra 	$L__BB0_83;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f577, %f578, %f579, %f580}, [%r19+96];
	ld.shared.f32 	%f192, [%r20+24];
	sub.ftz.f32 	%f193, %f333, %f577;
	sub.ftz.f32 	%f194, %f334, %f578;
	sub.ftz.f32 	%f195, %f335, %f579;
	mul.ftz.f32 	%f584, %f194, %f194;
	fma.rn.ftz.f32 	%f585, %f193, %f193, %f584;
	fma.rn.ftz.f32 	%f586, %f195, %f195, %f585;
	sqrt.approx.ftz.f32 	%f196, %f586;
	mov.f32 	%f587, 0f38D1B717;
	max.ftz.f32 	%f197, %f196, %f587;
	setp.geu.ftz.f32 	%p71, %f197, %f328;
	mov.f32 	%f802, 0f00000000;
	@%p71 bra 	$L__BB0_77;

	mov.f32 	%f734, 0f38D1B717;
	max.ftz.f32 	%f733, %f196, %f734;
	div.approx.ftz.f32 	%f588, %f733, %f328;
	mov.f32 	%f589, 0f3F800000;
	sub.ftz.f32 	%f590, %f589, %f588;
	mul.ftz.f32 	%f591, %f590, %f590;
	mul.ftz.f32 	%f592, %f7, %f192;
	sqrt.approx.ftz.f32 	%f593, %f592;
	mul.ftz.f32 	%f594, %f593, %f326;
	mul.ftz.f32 	%f595, %f594, %f591;
	mul.ftz.f32 	%f596, %f733, %f733;
	div.approx.ftz.f32 	%f597, %f595, %f596;
	mov.f32 	%f598, 0f00000000;
	sub.ftz.f32 	%f802, %f598, %f597;

$L__BB0_77:
	and.b16  	%rs179, %rs1, %rs56;
	and.b16  	%rs180, %rs179, 2;
	setp.eq.s16 	%p72, %rs180, 0;
	@%p72 bra 	$L__BB0_79;

	mov.f32 	%f732, 0f38D1B717;
	max.ftz.f32 	%f731, %f196, %f732;
	add.ftz.f32 	%f599, %f7, %f192;
	fma.rn.ftz.f32 	%f600, %f599, 0fBD4CCCCD, %f731;
	mul.ftz.f32 	%f601, %f600, %f325;
	mul.ftz.f32 	%f602, %f7, %f192;
	sqrt.approx.ftz.f32 	%f603, %f602;
	add.ftz.f32 	%f604, %f603, 0f3F800000;
	fma.rn.ftz.f32 	%f802, %f601, %f604, %f802;

$L__BB0_79:
	setp.lt.ftz.f32 	%p73, %f196, 0f358637BD;
	mov.f32 	%f803, 0f00000000;
	mov.f32 	%f804, %f803;
	mov.f32 	%f805, %f803;
	@%p73 bra 	$L__BB0_81;

	rcp.approx.ftz.f32 	%f608, %f196;
	mul.ftz.f32 	%f805, %f195, %f608;
	mul.ftz.f32 	%f804, %f194, %f608;
	mul.ftz.f32 	%f803, %f193, %f608;

$L__BB0_81:
	fma.rn.ftz.f32 	%f766, %f802, %f803, %f766;
	fma.rn.ftz.f32 	%f767, %f802, %f804, %f767;
	fma.rn.ftz.f32 	%f768, %f802, %f805, %f768;
	mul.ftz.f32 	%f609, %f338, %f804;
	fma.rn.ftz.f32 	%f610, %f337, %f803, %f609;
	fma.rn.ftz.f32 	%f214, %f339, %f805, %f610;
	setp.leu.ftz.f32 	%p74, %f214, 0f00000000;
	@%p74 bra 	$L__BB0_83;

	mul.ftz.f32 	%f611, %f7, %f214;
	mul.ftz.f32 	%f612, %f611, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f803, %f612, %f766;
	fma.rn.ftz.f32 	%f767, %f804, %f612, %f767;
	fma.rn.ftz.f32 	%f768, %f805, %f612, %f768;

$L__BB0_83:
	add.s32 	%r28, %r76, 7;
	setp.eq.s32 	%p75, %r28, %r3;
	@%p75 bra 	$L__BB0_93;

	mul.wide.u32 	%rd34, %r28, 48;
	add.s64 	%rd35, %rd1, %rd34;
	ld.global.u8 	%rs65, [%rd35+33];
	and.b16  	%rs193, %rs65, 1;
	setp.eq.b16 	%p76, %rs193, 1;
	mov.pred 	%p77, 0;
	xor.pred  	%p78, %p76, %p77;
	not.pred 	%p79, %p78;
	@%p79 bra 	$L__BB0_93;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f614, %f615, %f616, %f617}, [%r19+112];
	ld.shared.f32 	%f221, [%r20+28];
	sub.ftz.f32 	%f222, %f333, %f614;
	sub.ftz.f32 	%f223, %f334, %f615;
	sub.ftz.f32 	%f224, %f335, %f616;
	mul.ftz.f32 	%f621, %f223, %f223;
	fma.rn.ftz.f32 	%f622, %f222, %f222, %f621;
	fma.rn.ftz.f32 	%f623, %f224, %f224, %f622;
	sqrt.approx.ftz.f32 	%f225, %f623;
	mov.f32 	%f624, 0f38D1B717;
	max.ftz.f32 	%f226, %f225, %f624;
	setp.geu.ftz.f32 	%p80, %f226, %f328;
	mov.f32 	%f810, 0f00000000;
	@%p80 bra 	$L__BB0_87;

	mov.f32 	%f738, 0f38D1B717;
	max.ftz.f32 	%f737, %f225, %f738;
	div.approx.ftz.f32 	%f625, %f737, %f328;
	mov.f32 	%f626, 0f3F800000;
	sub.ftz.f32 	%f627, %f626, %f625;
	mul.ftz.f32 	%f628, %f627, %f627;
	mul.ftz.f32 	%f629, %f7, %f221;
	sqrt.approx.ftz.f32 	%f630, %f629;
	mul.ftz.f32 	%f631, %f630, %f326;
	mul.ftz.f32 	%f632, %f631, %f628;
	mul.ftz.f32 	%f633, %f737, %f737;
	div.approx.ftz.f32 	%f634, %f632, %f633;
	mov.f32 	%f635, 0f00000000;
	sub.ftz.f32 	%f810, %f635, %f634;

$L__BB0_87:
	and.b16  	%rs194, %rs1, %rs65;
	and.b16  	%rs195, %rs194, 2;
	setp.eq.s16 	%p81, %rs195, 0;
	@%p81 bra 	$L__BB0_89;

	mov.f32 	%f736, 0f38D1B717;
	max.ftz.f32 	%f735, %f225, %f736;
	add.ftz.f32 	%f636, %f7, %f221;
	fma.rn.ftz.f32 	%f637, %f636, 0fBD4CCCCD, %f735;
	mul.ftz.f32 	%f638, %f637, %f325;
	mul.ftz.f32 	%f639, %f7, %f221;
	sqrt.approx.ftz.f32 	%f640, %f639;
	add.ftz.f32 	%f641, %f640, 0f3F800000;
	fma.rn.ftz.f32 	%f810, %f638, %f641, %f810;

$L__BB0_89:
	setp.lt.ftz.f32 	%p82, %f225, 0f358637BD;
	mov.f32 	%f811, 0f00000000;
	mov.f32 	%f812, %f811;
	mov.f32 	%f813, %f811;
	@%p82 bra 	$L__BB0_91;

	rcp.approx.ftz.f32 	%f645, %f225;
	mul.ftz.f32 	%f813, %f224, %f645;
	mul.ftz.f32 	%f812, %f223, %f645;
	mul.ftz.f32 	%f811, %f222, %f645;

$L__BB0_91:
	fma.rn.ftz.f32 	%f766, %f810, %f811, %f766;
	fma.rn.ftz.f32 	%f767, %f810, %f812, %f767;
	fma.rn.ftz.f32 	%f768, %f810, %f813, %f768;
	mul.ftz.f32 	%f646, %f338, %f812;
	fma.rn.ftz.f32 	%f647, %f337, %f811, %f646;
	fma.rn.ftz.f32 	%f243, %f339, %f813, %f647;
	setp.leu.ftz.f32 	%p83, %f243, 0f00000000;
	@%p83 bra 	$L__BB0_93;

	mul.ftz.f32 	%f648, %f7, %f243;
	mul.ftz.f32 	%f649, %f648, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f811, %f649, %f766;
	fma.rn.ftz.f32 	%f767, %f812, %f649, %f767;
	fma.rn.ftz.f32 	%f768, %f813, %f649, %f768;

$L__BB0_93:
	add.s32 	%r105, %r105, 8;
	add.s32 	%r104, %r105, %r10;
	add.s32 	%r103, %r103, -8;
	setp.ne.s32 	%p84, %r103, 0;
	@%p84 bra 	$L__BB0_8;

$L__BB0_94:
	setp.eq.s32 	%p85, %r110, 0;
	@%p85 bra 	$L__BB0_112;

	shl.b32 	%r83, %r105, 2;
	add.s32 	%r107, %r60, %r83;
	shl.b32 	%r85, %r105, 4;
	add.s32 	%r106, %r58, %r85;

$L__BB0_96:
	.pragma "nounroll";
	setp.eq.s32 	%p86, %r104, %r3;
	@%p86 bra 	$L__BB0_111;

	mul.wide.u32 	%rd36, %r104, 48;
	add.s64 	%rd37, %rd1, %rd36;
	add.s64 	%rd5, %rd37, 33;
	ld.global.u8 	%rs208, [%rd37+33];
	and.b16  	%rs209, %rs208, 1;
	setp.eq.b16 	%p87, %rs209, 1;
	mov.pred 	%p88, 0;
	xor.pred  	%p89, %p87, %p88;
	not.pred 	%p90, %p89;
	@%p90 bra 	$L__BB0_111;

	.pragma "used_bytes_mask 4095";
	ld.shared.v4.f32 	{%f650, %f651, %f652, %f653}, [%r106];
	ld.shared.f32 	%f259, [%r107];
	sub.ftz.f32 	%f260, %f333, %f650;
	sub.ftz.f32 	%f261, %f334, %f651;
	sub.ftz.f32 	%f262, %f335, %f652;
	mul.ftz.f32 	%f657, %f261, %f261;
	fma.rn.ftz.f32 	%f658, %f260, %f260, %f657;
	fma.rn.ftz.f32 	%f659, %f262, %f262, %f658;
	sqrt.approx.ftz.f32 	%f263, %f659;
	or.b32  	%r41, %r105, %r3;
	setp.ne.s32 	%p91, %r41, 0;
	@%p91 bra 	$L__BB0_100;

	mov.f32 	%f746, 0f38D1B717;
	max.ftz.f32 	%f745, %f263, %f746;
	cvt.ftz.f64.f32 	%fd8, %f745;
	st.local.v2.f64 	[%rd3], {%fd8, %fd1};
	cvt.ftz.f64.f32 	%fd9, %f259;
	st.local.f64 	[%rd3+16], %fd9;
	mov.u64 	%rd38, $str;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd39;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r87, [retval0+0];
	} // callseq 3

$L__BB0_100:
	mov.f32 	%f740, 0f38D1B717;
	max.ftz.f32 	%f739, %f263, %f740;
	setp.geu.ftz.f32 	%p92, %f739, %f328;
	mov.f32 	%f827, 0f00000000;
	@%p92 bra 	$L__BB0_103;

	or.b32  	%r99, %r105, %r3;
	setp.ne.s32 	%p110, %r99, 0;
	mov.f32 	%f744, 0f38D1B717;
	max.ftz.f32 	%f743, %f263, %f744;
	div.approx.ftz.f32 	%f662, %f743, %f328;
	mov.f32 	%f663, 0f3F800000;
	sub.ftz.f32 	%f664, %f663, %f662;
	mul.ftz.f32 	%f665, %f664, %f664;
	mul.ftz.f32 	%f666, %f7, %f259;
	sqrt.approx.ftz.f32 	%f667, %f666;
	mul.ftz.f32 	%f668, %f667, %f326;
	mul.ftz.f32 	%f669, %f668, %f665;
	mul.ftz.f32 	%f670, %f743, %f743;
	div.approx.ftz.f32 	%f265, %f669, %f670;
	mov.f32 	%f671, 0f00000000;
	sub.ftz.f32 	%f827, %f671, %f265;
	@%p110 bra 	$L__BB0_103;

	cvt.ftz.f64.f32 	%fd10, %f265;
	st.local.f64 	[%rd3], %fd10;
	mov.u64 	%rd41, $str$1;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r88, [retval0+0];
	} // callseq 4

$L__BB0_103:
	setp.eq.s16 	%p94, %rs2, 0;
	@%p94 bra 	$L__BB0_107;

	ld.global.u8 	%rs210, [%rd5];
	and.b16  	%rs211, %rs210, 2;
	setp.eq.s16 	%p95, %rs211, 0;
	@%p95 bra 	$L__BB0_107;

	or.b32  	%r98, %r105, %r3;
	setp.ne.s32 	%p109, %r98, 0;
	mov.f32 	%f742, 0f38D1B717;
	max.ftz.f32 	%f741, %f263, %f742;
	add.ftz.f32 	%f672, %f7, %f259;
	fma.rn.ftz.f32 	%f673, %f672, 0fBD4CCCCD, %f741;
	mul.ftz.f32 	%f674, %f673, %f325;
	mul.ftz.f32 	%f675, %f7, %f259;
	sqrt.approx.ftz.f32 	%f268, %f675;
	add.ftz.f32 	%f269, %f268, 0f3F800000;
	mul.ftz.f32 	%f270, %f674, %f269;
	add.ftz.f32 	%f827, %f827, %f270;
	@%p109 bra 	$L__BB0_107;

	cvt.ftz.f64.f32 	%fd11, %f268;
	cvt.ftz.f64.f32 	%fd12, %f270;
	st.local.v2.f64 	[%rd3], {%fd12, %fd11};
	cvt.ftz.f64.f32 	%fd13, %f269;
	st.local.f64 	[%rd3+16], %fd13;
	mov.u64 	%rd44, $str$2;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r89, [retval0+0];
	} // callseq 5

$L__BB0_107:
	setp.lt.ftz.f32 	%p97, %f263, 0f358637BD;
	mov.f32 	%f828, 0f00000000;
	mov.f32 	%f829, %f828;
	mov.f32 	%f830, %f828;
	@%p97 bra 	$L__BB0_109;

	rcp.approx.ftz.f32 	%f679, %f263;
	mul.ftz.f32 	%f830, %f262, %f679;
	mul.ftz.f32 	%f829, %f261, %f679;
	mul.ftz.f32 	%f828, %f260, %f679;

$L__BB0_109:
	fma.rn.ftz.f32 	%f766, %f827, %f828, %f766;
	fma.rn.ftz.f32 	%f767, %f827, %f829, %f767;
	fma.rn.ftz.f32 	%f768, %f827, %f830, %f768;
	mul.ftz.f32 	%f680, %f338, %f829;
	fma.rn.ftz.f32 	%f681, %f337, %f828, %f680;
	fma.rn.ftz.f32 	%f285, %f339, %f830, %f681;
	setp.leu.ftz.f32 	%p98, %f285, 0f00000000;
	@%p98 bra 	$L__BB0_111;

	mul.ftz.f32 	%f682, %f7, %f285;
	mul.ftz.f32 	%f683, %f682, 0fBE4CCCCD;
	fma.rn.ftz.f32 	%f766, %f828, %f683, %f766;
	fma.rn.ftz.f32 	%f767, %f829, %f683, %f767;
	fma.rn.ftz.f32 	%f768, %f830, %f683, %f768;

$L__BB0_111:
	add.s32 	%r105, %r105, 1;
	add.s32 	%r104, %r105, %r10;
	add.s32 	%r107, %r107, 4;
	add.s32 	%r106, %r106, 16;
	add.s32 	%r110, %r110, -1;
	setp.ne.s32 	%p99, %r110, 0;
	@%p99 bra 	$L__BB0_96;

$L__BB0_112:
	bar.sync 	0;
	add.s32 	%r100, %r100, 1;
	setp.lt.u32 	%p100, %r100, %r8;
	@%p100 bra 	$L__BB0_3;

$L__BB0_113:
	ld.param.f32 	%f706, [compute_forces_param_4];
	add.ftz.f32 	%f684, %f337, %f766;
	mul.ftz.f32 	%f846, %f684, %f706;
	add.ftz.f32 	%f685, %f338, %f767;
	mul.ftz.f32 	%f847, %f685, %f706;
	add.ftz.f32 	%f686, %f339, %f768;
	mul.ftz.f32 	%f848, %f686, %f706;
	setp.ne.s32 	%p101, %r3, 0;
	@%p101 bra 	$L__BB0_115;

	cvt.ftz.f64.f32 	%fd14, %f767;
	cvt.ftz.f64.f32 	%fd15, %f766;
	st.local.v2.f64 	[%rd3], {%fd15, %fd14};
	cvt.ftz.f64.f32 	%fd16, %f846;
	cvt.ftz.f64.f32 	%fd17, %f768;
	st.local.v2.f64 	[%rd3+16], {%fd17, %fd16};
	cvt.ftz.f64.f32 	%fd18, %f848;
	cvt.ftz.f64.f32 	%fd19, %f847;
	st.local.v2.f64 	[%rd3+32], {%fd19, %fd18};
	mov.u64 	%rd47, $str$3;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd8;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r90, [retval0+0];
	} // callseq 6

$L__BB0_115:
	add.ftz.f32 	%f687, %f7, 0f3F000000;
	mov.f32 	%f688, 0f40000000;
	div.approx.ftz.f32 	%f301, %f688, %f687;
	mul.ftz.f32 	%f689, %f847, %f847;
	fma.rn.ftz.f32 	%f690, %f846, %f846, %f689;
	fma.rn.ftz.f32 	%f691, %f848, %f848, %f690;
	sqrt.approx.ftz.f32 	%f302, %f691;
	setp.leu.ftz.f32 	%p102, %f302, %f301;
	@%p102 bra 	$L__BB0_117;

	div.approx.ftz.f32 	%f692, %f301, %f302;
	mul.ftz.f32 	%f846, %f846, %f692;
	mul.ftz.f32 	%f847, %f847, %f692;
	mul.ftz.f32 	%f848, %f848, %f692;

$L__BB0_117:
	ld.param.f32 	%f707, [compute_forces_param_6];
	add.ftz.f32 	%f845, %f333, %f846;
	add.ftz.f32 	%f844, %f334, %f847;
	add.ftz.f32 	%f843, %f335, %f848;
	setp.leu.ftz.f32 	%p103, %f707, 0f00000000;
	@%p103 bra 	$L__BB0_122;

	ld.param.f32 	%f708, [compute_forces_param_6];
	min.ftz.f32 	%f693, %f845, %f708;
	neg.ftz.f32 	%f694, %f708;
	max.ftz.f32 	%f845, %f693, %f694;
	min.ftz.f32 	%f695, %f844, %f708;
	max.ftz.f32 	%f844, %f695, %f694;
	min.ftz.f32 	%f696, %f843, %f708;
	max.ftz.f32 	%f843, %f696, %f694;
	abs.ftz.f32 	%f697, %f845;
	mul.ftz.f32 	%f315, %f708, 0f3F666666;
	setp.gt.ftz.f32 	%p104, %f697, %f315;
	@%p104 bra 	$L__BB0_121;

	abs.ftz.f32 	%f698, %f844;
	setp.gt.ftz.f32 	%p105, %f698, %f315;
	@%p105 bra 	$L__BB0_121;

	abs.ftz.f32 	%f699, %f843;
	setp.leu.ftz.f32 	%p106, %f699, %f315;
	@%p106 bra 	$L__BB0_122;

$L__BB0_121:
	mul.ftz.f32 	%f846, %f846, 0f3F666666;
	mul.ftz.f32 	%f847, %f847, 0f3F666666;
	mul.ftz.f32 	%f848, %f848, 0f3F666666;

$L__BB0_122:
	mul.wide.s32 	%rd51, %r3, 48;
	add.s64 	%rd50, %rd1, %rd51;
	st.global.v2.f32 	[%rd50], {%f845, %f844};
	st.global.f32 	[%rd50+8], %f843;
	st.global.v2.f32 	[%rd50+16], {%f846, %f847};
	st.global.f32 	[%rd50+24], %f848;

$L__BB0_123:
	ret;

}

